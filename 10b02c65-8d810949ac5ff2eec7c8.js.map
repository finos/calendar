{"version":3,"file":"10b02c65-8d810949ac5ff2eec7c8.js","mappings":"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","sources":["webpack://calendar/./node_modules/ical.js/build/ical.js"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2021 */\n\n/* jshint ignore:start */\nvar ICAL;\n(function() {\n  /* istanbul ignore next */\n  if (typeof module === 'object') {\n    // CommonJS, where exports may be different each time.\n    ICAL = module.exports;\n  } else if (typeof HTMLScriptElement !== 'undefined' && 'noModule' in HTMLScriptElement.prototype) {\n    // Until we use ES6 exports, using <script type=\"module\"> we define ICAL on the window global.\n    window.ICAL = ICAL = {};\n  } else if (typeof ICAL !== 'object') {\n    ICAL = {};\n  }\n})();\n/* jshint ignore:end */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * The number of characters before iCalendar line folding should occur\n * @type {Number}\n * @default 75\n */\nICAL.foldLength = 75;\n\n\n/**\n * The character(s) to be used for a newline. The default value is provided by\n * rfc5545.\n * @type {String}\n * @default \"\\r\\n\"\n */\nICAL.newLineChar = '\\r\\n';\n\n\n/**\n * Helper functions used in various places within ical.js\n * @namespace\n */\nICAL.helpers = {\n  /**\n   * Compiles a list of all referenced TZIDs in all subcomponents and\n   * removes any extra VTIMEZONE subcomponents. In addition, if any TZIDs\n   * are referenced by a component, but a VTIMEZONE does not exist,\n   * an attempt will be made to generate a VTIMEZONE using ICAL.TimezoneService.\n   *\n   * @param {ICAL.Component} vcal     The top-level VCALENDAR component.\n   * @return {ICAL.Component}         The ICAL.Component that was passed in.\n   */\n  updateTimezones: function(vcal) {\n    var allsubs, properties, vtimezones, reqTzid, i, tzid;\n\n    if (!vcal || vcal.name !== \"vcalendar\") {\n      //not a top-level vcalendar component\n      return vcal;\n    }\n\n    //Store vtimezone subcomponents in an object reference by tzid.\n    //Store properties from everything else in another array\n    allsubs = vcal.getAllSubcomponents();\n    properties = [];\n    vtimezones = {};\n    for (i = 0; i < allsubs.length; i++) {\n      if (allsubs[i].name === \"vtimezone\") {\n        tzid = allsubs[i].getFirstProperty(\"tzid\").getFirstValue();\n        vtimezones[tzid] = allsubs[i];\n      } else {\n        properties = properties.concat(allsubs[i].getAllProperties());\n      }\n    }\n\n    //create an object with one entry for each required tz\n    reqTzid = {};\n    for (i = 0; i < properties.length; i++) {\n      if ((tzid = properties[i].getParameter(\"tzid\"))) {\n        reqTzid[tzid] = true;\n      }\n    }\n\n    //delete any vtimezones that are not on the reqTzid list.\n    for (i in vtimezones) {\n      if (vtimezones.hasOwnProperty(i) && !reqTzid[i]) {\n        vcal.removeSubcomponent(vtimezones[i]);\n      }\n    }\n\n    //create any missing, but registered timezones\n    for (i in reqTzid) {\n      if (\n        reqTzid.hasOwnProperty(i) &&\n        !vtimezones[i] &&\n        ICAL.TimezoneService.has(i)\n      ) {\n        vcal.addSubcomponent(ICAL.TimezoneService.get(i).component);\n      }\n    }\n\n    return vcal;\n  },\n\n  /**\n   * Checks if the given type is of the number type and also NaN.\n   *\n   * @param {Number} number     The number to check\n   * @return {Boolean}          True, if the number is strictly NaN\n   */\n  isStrictlyNaN: function(number) {\n    return typeof(number) === 'number' && isNaN(number);\n  },\n\n  /**\n   * Parses a string value that is expected to be an integer, when the valid is\n   * not an integer throws a decoration error.\n   *\n   * @param {String} string     Raw string input\n   * @return {Number}           Parsed integer\n   */\n  strictParseInt: function(string) {\n    var result = parseInt(string, 10);\n\n    if (ICAL.helpers.isStrictlyNaN(result)) {\n      throw new Error(\n        'Could not extract integer from \"' + string + '\"'\n      );\n    }\n\n    return result;\n  },\n\n  /**\n   * Creates or returns a class instance of a given type with the initialization\n   * data if the data is not already an instance of the given type.\n   *\n   * @example\n   * var time = new ICAL.Time(...);\n   * var result = ICAL.helpers.formatClassType(time, ICAL.Time);\n   *\n   * (result instanceof ICAL.Time)\n   * // => true\n   *\n   * result = ICAL.helpers.formatClassType({}, ICAL.Time);\n   * (result isntanceof ICAL.Time)\n   * // => true\n   *\n   *\n   * @param {Object} data       object initialization data\n   * @param {Object} type       object type (like ICAL.Time)\n   * @return {?}                An instance of the found type.\n   */\n  formatClassType: function formatClassType(data, type) {\n    if (typeof(data) === 'undefined') {\n      return undefined;\n    }\n\n    if (data instanceof type) {\n      return data;\n    }\n    return new type(data);\n  },\n\n  /**\n   * Identical to indexOf but will only match values when they are not preceded\n   * by a backslash character.\n   *\n   * @param {String} buffer         String to search\n   * @param {String} search         Value to look for\n   * @param {Number} pos            Start position\n   * @return {Number}               The position, or -1 if not found\n   */\n  unescapedIndexOf: function(buffer, search, pos) {\n    while ((pos = buffer.indexOf(search, pos)) !== -1) {\n      if (pos > 0 && buffer[pos - 1] === '\\\\') {\n        pos += 1;\n      } else {\n        return pos;\n      }\n    }\n    return -1;\n  },\n\n  /**\n   * Find the index for insertion using binary search.\n   *\n   * @param {Array} list            The list to search\n   * @param {?} seekVal             The value to insert\n   * @param {function(?,?)} cmpfunc The comparison func, that can\n   *                                  compare two seekVals\n   * @return {Number}               The insert position\n   */\n  binsearchInsert: function(list, seekVal, cmpfunc) {\n    if (!list.length)\n      return 0;\n\n    var low = 0, high = list.length - 1,\n        mid, cmpval;\n\n    while (low <= high) {\n      mid = low + Math.floor((high - low) / 2);\n      cmpval = cmpfunc(seekVal, list[mid]);\n\n      if (cmpval < 0)\n        high = mid - 1;\n      else if (cmpval > 0)\n        low = mid + 1;\n      else\n        break;\n    }\n\n    if (cmpval < 0)\n      return mid; // insertion is displacing, so use mid outright.\n    else if (cmpval > 0)\n      return mid + 1;\n    else\n      return mid;\n  },\n\n  /**\n   * Convenience function for debug output\n   * @private\n   */\n  dumpn: /* istanbul ignore next */ function() {\n    if (!ICAL.debug) {\n      return;\n    }\n\n    if (typeof (console) !== 'undefined' && 'log' in console) {\n      ICAL.helpers.dumpn = function consoleDumpn(input) {\n        console.log(input);\n      };\n    } else {\n      ICAL.helpers.dumpn = function geckoDumpn(input) {\n        dump(input + '\\n');\n      };\n    }\n\n    ICAL.helpers.dumpn(arguments[0]);\n  },\n\n  /**\n   * Clone the passed object or primitive. By default a shallow clone will be\n   * executed.\n   *\n   * @param {*} aSrc            The thing to clone\n   * @param {Boolean=} aDeep    If true, a deep clone will be performed\n   * @return {*}                The copy of the thing\n   */\n  clone: function(aSrc, aDeep) {\n    if (!aSrc || typeof aSrc != \"object\") {\n      return aSrc;\n    } else if (aSrc instanceof Date) {\n      return new Date(aSrc.getTime());\n    } else if (\"clone\" in aSrc) {\n      return aSrc.clone();\n    } else if (Array.isArray(aSrc)) {\n      var arr = [];\n      for (var i = 0; i < aSrc.length; i++) {\n        arr.push(aDeep ? ICAL.helpers.clone(aSrc[i], true) : aSrc[i]);\n      }\n      return arr;\n    } else {\n      var obj = {};\n      for (var name in aSrc) {\n        // uses prototype method to allow use of Object.create(null);\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(aSrc, name)) {\n          if (aDeep) {\n            obj[name] = ICAL.helpers.clone(aSrc[name], true);\n          } else {\n            obj[name] = aSrc[name];\n          }\n        }\n      }\n      return obj;\n    }\n  },\n\n  /**\n   * Performs iCalendar line folding. A line ending character is inserted and\n   * the next line begins with a whitespace.\n   *\n   * @example\n   * SUMMARY:This line will be fold\n   *  ed right in the middle of a word.\n   *\n   * @param {String} aLine      The line to fold\n   * @return {String}           The folded line\n   */\n  foldline: function foldline(aLine) {\n    var result = \"\";\n    var line = aLine || \"\", pos = 0, line_length = 0;\n    //pos counts position in line for the UTF-16 presentation\n    //line_length counts the bytes for the UTF-8 presentation\n    while (line.length) {\n      var cp = line.codePointAt(pos);\n      if (cp < 128) ++line_length;\n      else if (cp < 2048) line_length += 2;//needs 2 UTF-8 bytes\n      else if (cp < 65536) line_length += 3;\n      else line_length += 4; //cp is less than 1114112\n      if (line_length < ICAL.foldLength + 1)\n        pos += cp > 65535 ? 2 : 1;\n      else {\n        result += ICAL.newLineChar + \" \" + line.substring(0, pos);\n        line = line.substring(pos);\n        pos = line_length = 0;\n      }\n    }\n    return result.substr(ICAL.newLineChar.length + 1);\n  },\n\n  /**\n   * Pads the given string or number with zeros so it will have at least two\n   * characters.\n   *\n   * @param {String|Number} data    The string or number to pad\n   * @return {String}               The number padded as a string\n   */\n  pad2: function pad(data) {\n    if (typeof(data) !== 'string') {\n      // handle fractions.\n      if (typeof(data) === 'number') {\n        data = parseInt(data);\n      }\n      data = String(data);\n    }\n\n    var len = data.length;\n\n    switch (len) {\n      case 0:\n        return '00';\n      case 1:\n        return '0' + data;\n      default:\n        return data;\n    }\n  },\n\n  /**\n   * Truncates the given number, correctly handling negative numbers.\n   *\n   * @param {Number} number     The number to truncate\n   * @return {Number}           The truncated number\n   */\n  trunc: function trunc(number) {\n    return (number < 0 ? Math.ceil(number) : Math.floor(number));\n  },\n\n  /**\n   * Poor-man's cross-browser inheritance for JavaScript. Doesn't support all\n   * the features, but enough for our usage.\n   *\n   * @param {Function} base     The base class constructor function.\n   * @param {Function} child    The child class constructor function.\n   * @param {Object} extra      Extends the prototype with extra properties\n   *                              and methods\n   */\n  inherits: function(base, child, extra) {\n    function F() {}\n    F.prototype = base.prototype;\n    child.prototype = new F();\n\n    if (extra) {\n      ICAL.helpers.extend(extra, child.prototype);\n    }\n  },\n\n  /**\n   * Poor-man's cross-browser object extension. Doesn't support all the\n   * features, but enough for our usage. Note that the target's properties are\n   * not overwritten with the source properties.\n   *\n   * @example\n   * var child = ICAL.helpers.extend(parent, {\n   *   \"bar\": 123\n   * });\n   *\n   * @param {Object} source     The object to extend\n   * @param {Object} target     The object to extend with\n   * @return {Object}           Returns the target.\n   */\n  extend: function(source, target) {\n    for (var key in source) {\n      var descr = Object.getOwnPropertyDescriptor(source, key);\n      if (descr && !Object.getOwnPropertyDescriptor(target, key)) {\n        Object.defineProperty(target, key, descr);\n      }\n    }\n    return target;\n  }\n};\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/** @namespace ICAL */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.design = (function() {\n  'use strict';\n\n  var FROM_ICAL_NEWLINE = /\\\\\\\\|\\\\;|\\\\,|\\\\[Nn]/g;\n  var TO_ICAL_NEWLINE = /\\\\|;|,|\\n/g;\n  var FROM_VCARD_NEWLINE = /\\\\\\\\|\\\\,|\\\\[Nn]/g;\n  var TO_VCARD_NEWLINE = /\\\\|,|\\n/g;\n\n  function createTextType(fromNewline, toNewline) {\n    var result = {\n      matches: /.*/,\n\n      fromICAL: function(aValue, structuredEscape) {\n        return replaceNewline(aValue, fromNewline, structuredEscape);\n      },\n\n      toICAL: function(aValue, structuredEscape) {\n        var regEx = toNewline;\n        if (structuredEscape)\n          regEx = new RegExp(regEx.source + '|' + structuredEscape);\n        return aValue.replace(regEx, function(str) {\n          switch (str) {\n          case \"\\\\\":\n            return \"\\\\\\\\\";\n          case \";\":\n            return \"\\\\;\";\n          case \",\":\n            return \"\\\\,\";\n          case \"\\n\":\n            return \"\\\\n\";\n          /* istanbul ignore next */\n          default:\n            return str;\n          }\n        });\n      }\n    };\n    return result;\n  }\n\n  // default types used multiple times\n  var DEFAULT_TYPE_TEXT = { defaultType: \"text\" };\n  var DEFAULT_TYPE_TEXT_MULTI = { defaultType: \"text\", multiValue: \",\" };\n  var DEFAULT_TYPE_TEXT_STRUCTURED = { defaultType: \"text\", structuredValue: \";\" };\n  var DEFAULT_TYPE_INTEGER = { defaultType: \"integer\" };\n  var DEFAULT_TYPE_DATETIME_DATE = { defaultType: \"date-time\", allowedTypes: [\"date-time\", \"date\"] };\n  var DEFAULT_TYPE_DATETIME = { defaultType: \"date-time\" };\n  var DEFAULT_TYPE_URI = { defaultType: \"uri\" };\n  var DEFAULT_TYPE_UTCOFFSET = { defaultType: \"utc-offset\" };\n  var DEFAULT_TYPE_RECUR = { defaultType: \"recur\" };\n  var DEFAULT_TYPE_DATE_ANDOR_TIME = { defaultType: \"date-and-or-time\", allowedTypes: [\"date-time\", \"date\", \"text\"] };\n\n  function replaceNewlineReplace(string) {\n    switch (string) {\n      case \"\\\\\\\\\":\n        return \"\\\\\";\n      case \"\\\\;\":\n        return \";\";\n      case \"\\\\,\":\n        return \",\";\n      case \"\\\\n\":\n      case \"\\\\N\":\n        return \"\\n\";\n      /* istanbul ignore next */\n      default:\n        return string;\n    }\n  }\n\n  function replaceNewline(value, newline, structuredEscape) {\n    // avoid regex when possible.\n    if (value.indexOf('\\\\') === -1) {\n      return value;\n    }\n    if (structuredEscape)\n      newline = new RegExp(newline.source + '|\\\\\\\\' + structuredEscape);\n    return value.replace(newline, replaceNewlineReplace);\n  }\n\n  var commonProperties = {\n    \"categories\": DEFAULT_TYPE_TEXT_MULTI,\n    \"url\": DEFAULT_TYPE_URI,\n    \"version\": DEFAULT_TYPE_TEXT,\n    \"uid\": DEFAULT_TYPE_TEXT\n  };\n\n  var commonValues = {\n    \"boolean\": {\n      values: [\"TRUE\", \"FALSE\"],\n\n      fromICAL: function(aValue) {\n        switch (aValue) {\n          case 'TRUE':\n            return true;\n          case 'FALSE':\n            return false;\n          default:\n            //TODO: parser warning\n            return false;\n        }\n      },\n\n      toICAL: function(aValue) {\n        if (aValue) {\n          return 'TRUE';\n        }\n        return 'FALSE';\n      }\n\n    },\n    float: {\n      matches: /^[+-]?\\d+\\.\\d+$/,\n\n      fromICAL: function(aValue) {\n        var parsed = parseFloat(aValue);\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          // TODO: parser warning\n          return 0.0;\n        }\n        return parsed;\n      },\n\n      toICAL: function(aValue) {\n        return String(aValue);\n      }\n    },\n    integer: {\n      fromICAL: function(aValue) {\n        var parsed = parseInt(aValue);\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          return 0;\n        }\n        return parsed;\n      },\n\n      toICAL: function(aValue) {\n        return String(aValue);\n      }\n    },\n    \"utc-offset\": {\n      toICAL: function(aValue) {\n        if (aValue.length < 7) {\n          // no seconds\n          // -0500\n          return aValue.substr(0, 3) +\n                 aValue.substr(4, 2);\n        } else {\n          // seconds\n          // -050000\n          return aValue.substr(0, 3) +\n                 aValue.substr(4, 2) +\n                 aValue.substr(7, 2);\n        }\n      },\n\n      fromICAL: function(aValue) {\n        if (aValue.length < 6) {\n          // no seconds\n          // -05:00\n          return aValue.substr(0, 3) + ':' +\n                 aValue.substr(3, 2);\n        } else {\n          // seconds\n          // -05:00:00\n          return aValue.substr(0, 3) + ':' +\n                 aValue.substr(3, 2) + ':' +\n                 aValue.substr(5, 2);\n        }\n      },\n\n      decorate: function(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    }\n  };\n\n  var icalParams = {\n    // Although the syntax is DQUOTE uri DQUOTE, I don't think we should\n    // enfoce anything aside from it being a valid content line.\n    //\n    // At least some params require - if multi values are used - DQUOTEs\n    // for each of its values - e.g. delegated-from=\"uri1\",\"uri2\"\n    // To indicate this, I introduced the new k/v pair\n    // multiValueSeparateDQuote: true\n    //\n    // \"ALTREP\": { ... },\n\n    // CN just wants a param-value\n    // \"CN\": { ... }\n\n    \"cutype\": {\n      values: [\"INDIVIDUAL\", \"GROUP\", \"RESOURCE\", \"ROOM\", \"UNKNOWN\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n\n    \"delegated-from\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"delegated-to\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    // \"DIR\": { ... }, // See ALTREP\n    \"encoding\": {\n      values: [\"8BIT\", \"BASE64\"]\n    },\n    // \"FMTTYPE\": { ... }, // See ALTREP\n    \"fbtype\": {\n      values: [\"FREE\", \"BUSY\", \"BUSY-UNAVAILABLE\", \"BUSY-TENTATIVE\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    // \"LANGUAGE\": { ... }, // See ALTREP\n    \"member\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"partstat\": {\n      // TODO These values are actually different per-component\n      values: [\"NEEDS-ACTION\", \"ACCEPTED\", \"DECLINED\", \"TENTATIVE\",\n               \"DELEGATED\", \"COMPLETED\", \"IN-PROCESS\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"range\": {\n      values: [\"THISANDFUTURE\"]\n    },\n    \"related\": {\n      values: [\"START\", \"END\"]\n    },\n    \"reltype\": {\n      values: [\"PARENT\", \"CHILD\", \"SIBLING\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"role\": {\n      values: [\"REQ-PARTICIPANT\", \"CHAIR\",\n               \"OPT-PARTICIPANT\", \"NON-PARTICIPANT\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"rsvp\": {\n      values: [\"TRUE\", \"FALSE\"]\n    },\n    \"sent-by\": {\n      valueType: \"cal-address\"\n    },\n    \"tzid\": {\n      matches: /^\\//\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"binary\", \"boolean\", \"cal-address\", \"date\", \"date-time\",\n               \"duration\", \"float\", \"integer\", \"period\", \"recur\", \"text\",\n               \"time\", \"uri\", \"utc-offset\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  // When adding a value here, be sure to add it to the parameter types!\n  var icalValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),\n\n    uri: {\n      // TODO\n      /* ... */\n    },\n\n    \"binary\": {\n      decorate: function(aString) {\n        return ICAL.Binary.fromString(aString);\n      },\n\n      undecorate: function(aBinary) {\n        return aBinary.toString();\n      }\n    },\n    \"cal-address\": {\n      // needs to be an uri\n    },\n    \"date\": {\n      decorate: function(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n\n      /**\n       * undecorates a time object.\n       */\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        // from: 20120901\n        // to: 2012-09-01\n        if (!design.strict && aValue.length >= 15) {\n          // This is probably a date-time, e.g. 20120901T130000Z\n          return icalValues[\"date-time\"].fromICAL(aValue);\n        } else {\n          return aValue.substr(0, 4) + '-' +\n                 aValue.substr(4, 2) + '-' +\n                 aValue.substr(6, 2);\n        }\n      },\n\n      toICAL: function(aValue) {\n        // from: 2012-09-01\n        // to: 20120901\n        var len = aValue.length;\n\n        if (len == 10) {\n          return aValue.substr(0, 4) +\n                 aValue.substr(5, 2) +\n                 aValue.substr(8, 2);\n        } else if (len >= 19) {\n          return icalValues[\"date-time\"].toICAL(aValue);\n        } else {\n          //TODO: serialize warning?\n          return aValue;\n        }\n\n      }\n    },\n    \"date-time\": {\n      fromICAL: function(aValue) {\n        // from: 20120901T130000\n        // to: 2012-09-01T13:00:00\n        if (!design.strict && aValue.length == 8) {\n          // This is probably a date, e.g. 20120901\n          return icalValues.date.fromICAL(aValue);\n        } else {\n          var result = aValue.substr(0, 4) + '-' +\n                       aValue.substr(4, 2) + '-' +\n                       aValue.substr(6, 2) + 'T' +\n                       aValue.substr(9, 2) + ':' +\n                       aValue.substr(11, 2) + ':' +\n                       aValue.substr(13, 2);\n\n          if (aValue[15] && aValue[15] === 'Z') {\n            result += 'Z';\n          }\n\n          return result;\n        }\n      },\n\n      toICAL: function(aValue) {\n        // from: 2012-09-01T13:00:00\n        // to: 20120901T130000\n        var len = aValue.length;\n\n        if (len == 10 && !design.strict) {\n          return icalValues.date.toICAL(aValue);\n        } else if (len >= 19) {\n          var result = aValue.substr(0, 4) +\n                       aValue.substr(5, 2) +\n                       // grab the (DDTHH) segment\n                       aValue.substr(8, 5) +\n                       // MM\n                       aValue.substr(14, 2) +\n                       // SS\n                       aValue.substr(17, 2);\n\n          if (aValue[19] && aValue[19] === 'Z') {\n            result += 'Z';\n          }\n          return result;\n        } else {\n          // TODO: error\n          return aValue;\n        }\n      },\n\n      decorate: function(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateTimeString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    },\n    duration: {\n      decorate: function(aValue) {\n        return ICAL.Duration.fromString(aValue);\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    },\n    period: {\n\n      fromICAL: function(string) {\n        var parts = string.split('/');\n        parts[0] = icalValues['date-time'].fromICAL(parts[0]);\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          parts[1] = icalValues['date-time'].fromICAL(parts[1]);\n        }\n\n        return parts;\n      },\n\n      toICAL: function(parts) {\n        if (!design.strict && parts[0].length == 10) {\n          parts[0] = icalValues.date.toICAL(parts[0]);\n        } else {\n          parts[0] = icalValues['date-time'].toICAL(parts[0]);\n        }\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          if (!design.strict && parts[1].length == 10) {\n            parts[1] = icalValues.date.toICAL(parts[1]);\n          } else {\n            parts[1] = icalValues['date-time'].toICAL(parts[1]);\n          }\n        }\n\n        return parts.join(\"/\");\n      },\n\n      decorate: function(aValue, aProp) {\n        return ICAL.Period.fromJSON(aValue, aProp, !design.strict);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toJSON();\n      }\n    },\n    recur: {\n      fromICAL: function(string) {\n        return ICAL.Recur._stringToData(string, true);\n      },\n\n      toICAL: function(data) {\n        var str = \"\";\n        for (var k in data) {\n          /* istanbul ignore if */\n          if (!Object.prototype.hasOwnProperty.call(data, k)) {\n            continue;\n          }\n          var val = data[k];\n          if (k == \"until\") {\n            if (val.length > 10) {\n              val = icalValues['date-time'].toICAL(val);\n            } else {\n              val = icalValues.date.toICAL(val);\n            }\n          } else if (k == \"wkst\") {\n            if (typeof val === 'number') {\n              val = ICAL.Recur.numericDayToIcalDay(val);\n            }\n          } else if (Array.isArray(val)) {\n            val = val.join(\",\");\n          }\n          str += k.toUpperCase() + \"=\" + val + \";\";\n        }\n        return str.substr(0, str.length - 1);\n      },\n\n      decorate: function decorate(aValue) {\n        return ICAL.Recur.fromData(aValue);\n      },\n\n      undecorate: function(aRecur) {\n        return aRecur.toJSON();\n      }\n    },\n\n    time: {\n      fromICAL: function(aValue) {\n        // from: MMHHSS(Z)?\n        // to: HH:MM:SS(Z)?\n        if (aValue.length < 6) {\n          // TODO: parser exception?\n          return aValue;\n        }\n\n        // HH::MM::SSZ?\n        var result = aValue.substr(0, 2) + ':' +\n                     aValue.substr(2, 2) + ':' +\n                     aValue.substr(4, 2);\n\n        if (aValue[6] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      },\n\n      toICAL: function(aValue) {\n        // from: HH:MM:SS(Z)?\n        // to: MMHHSS(Z)?\n        if (aValue.length < 8) {\n          //TODO: error\n          return aValue;\n        }\n\n        var result = aValue.substr(0, 2) +\n                     aValue.substr(3, 2) +\n                     aValue.substr(6, 2);\n\n        if (aValue[8] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      }\n    }\n  });\n\n  var icalProperties = ICAL.helpers.extend(commonProperties, {\n\n    \"action\": DEFAULT_TYPE_TEXT,\n    \"attach\": { defaultType: \"uri\" },\n    \"attendee\": { defaultType: \"cal-address\" },\n    \"calscale\": DEFAULT_TYPE_TEXT,\n    \"class\": DEFAULT_TYPE_TEXT,\n    \"comment\": DEFAULT_TYPE_TEXT,\n    \"completed\": DEFAULT_TYPE_DATETIME,\n    \"contact\": DEFAULT_TYPE_TEXT,\n    \"created\": DEFAULT_TYPE_DATETIME,\n    \"description\": DEFAULT_TYPE_TEXT,\n    \"dtend\": DEFAULT_TYPE_DATETIME_DATE,\n    \"dtstamp\": DEFAULT_TYPE_DATETIME,\n    \"dtstart\": DEFAULT_TYPE_DATETIME_DATE,\n    \"due\": DEFAULT_TYPE_DATETIME_DATE,\n    \"duration\": { defaultType: \"duration\" },\n    \"exdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      multiValue: ','\n    },\n    \"exrule\": DEFAULT_TYPE_RECUR,\n    \"freebusy\": { defaultType: \"period\", multiValue: \",\" },\n    \"geo\": { defaultType: \"float\", structuredValue: \";\" },\n    \"last-modified\": DEFAULT_TYPE_DATETIME,\n    \"location\": DEFAULT_TYPE_TEXT,\n    \"method\": DEFAULT_TYPE_TEXT,\n    \"organizer\": { defaultType: \"cal-address\" },\n    \"percent-complete\": DEFAULT_TYPE_INTEGER,\n    \"priority\": DEFAULT_TYPE_INTEGER,\n    \"prodid\": DEFAULT_TYPE_TEXT,\n    \"related-to\": DEFAULT_TYPE_TEXT,\n    \"repeat\": DEFAULT_TYPE_INTEGER,\n    \"rdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\", \"period\"],\n      multiValue: ',',\n      detectType: function(string) {\n        if (string.indexOf('/') !== -1) {\n          return 'period';\n        }\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n    \"recurrence-id\": DEFAULT_TYPE_DATETIME_DATE,\n    \"resources\": DEFAULT_TYPE_TEXT_MULTI,\n    \"request-status\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"rrule\": DEFAULT_TYPE_RECUR,\n    \"sequence\": DEFAULT_TYPE_INTEGER,\n    \"status\": DEFAULT_TYPE_TEXT,\n    \"summary\": DEFAULT_TYPE_TEXT,\n    \"transp\": DEFAULT_TYPE_TEXT,\n    \"trigger\": { defaultType: \"duration\", allowedTypes: [\"duration\", \"date-time\"] },\n    \"tzoffsetfrom\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzoffsetto\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzurl\": DEFAULT_TYPE_URI,\n    \"tzid\": DEFAULT_TYPE_TEXT,\n    \"tzname\": DEFAULT_TYPE_TEXT\n  });\n\n  // When adding a value here, be sure to add it to the parameter types!\n  var vcardValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n    uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n\n    date: {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date\");\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function(aValue) {\n        if (aValue.length == 8) {\n          return icalValues.date.fromICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 6) {\n          return aValue.substr(0, 4) + '-' + aValue.substr(4);\n        } else {\n          return aValue;\n        }\n      },\n      toICAL: function(aValue) {\n        if (aValue.length == 10) {\n          return icalValues.date.toICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 7) {\n          return aValue.substr(0, 4) + aValue.substr(5);\n        } else {\n          return aValue;\n        }\n      }\n    },\n\n    time: {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(\"T\" + aValue, \"time\");\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue, true);\n        var zone = splitzone[0], value = splitzone[1];\n\n        //console.log(\"SPLIT: \",splitzone);\n\n        if (value.length == 6) {\n          value = value.substr(0, 2) + ':' +\n                  value.substr(2, 2) + ':' +\n                  value.substr(4, 2);\n        } else if (value.length == 4 && value[0] != '-') {\n          value = value.substr(0, 2) + ':' + value.substr(2, 2);\n        } else if (value.length == 5) {\n          value = value.substr(0, 3) + ':' + value.substr(3, 2);\n        }\n\n        if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + ':' + zone.substr(3);\n        }\n\n        return value + zone;\n      },\n\n      toICAL: function(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue);\n        var zone = splitzone[0], value = splitzone[1];\n\n        if (value.length == 8) {\n          value = value.substr(0, 2) +\n                  value.substr(3, 2) +\n                  value.substr(6, 2);\n        } else if (value.length == 5 && value[0] != '-') {\n          value = value.substr(0, 2) + value.substr(3, 2);\n        } else if (value.length == 6) {\n          value = value.substr(0, 3) + value.substr(4, 2);\n        }\n\n        if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + zone.substr(4);\n        }\n\n        return value + zone;\n      },\n\n      _splitZone: function(aValue, isFromIcal) {\n        var lastChar = aValue.length - 1;\n        var signChar = aValue.length - (isFromIcal ? 5 : 6);\n        var sign = aValue[signChar];\n        var zone, value;\n\n        if (aValue[lastChar] == 'Z') {\n          zone = aValue[lastChar];\n          value = aValue.substr(0, lastChar);\n        } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {\n          zone = aValue.substr(signChar);\n          value = aValue.substr(0, signChar);\n        } else {\n          zone = \"\";\n          value = aValue;\n        }\n\n        return [zone, value];\n      }\n    },\n\n    \"date-time\": {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-time\");\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        return vcardValues['date-and-or-time'].fromICAL(aValue);\n      },\n\n      toICAL: function(aValue) {\n        return vcardValues['date-and-or-time'].toICAL(aValue);\n      }\n    },\n\n    \"date-and-or-time\": {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-and-or-time\");\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        var parts = aValue.split('T');\n        return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') +\n               (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');\n      },\n\n      toICAL: function(aValue) {\n        var parts = aValue.split('T');\n        return vcardValues.date.toICAL(parts[0]) +\n               (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');\n\n      }\n    },\n    timestamp: icalValues['date-time'],\n    \"language-tag\": {\n      matches: /^[a-zA-Z0-9-]+$/ // Could go with a more strict regex here\n    }\n  });\n\n  var vcardParams = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"time\", \"date-time\", \"date-and-or-time\",\n               \"timestamp\", \"boolean\", \"integer\", \"float\", \"utc-offset\",\n               \"language-tag\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  var vcardProperties = ICAL.helpers.extend(commonProperties, {\n    \"adr\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    \"anniversary\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"bday\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"caladruri\": DEFAULT_TYPE_URI,\n    \"caluri\": DEFAULT_TYPE_URI,\n    \"clientpidmap\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"email\": DEFAULT_TYPE_TEXT,\n    \"fburl\": DEFAULT_TYPE_URI,\n    \"fn\": DEFAULT_TYPE_TEXT,\n    \"gender\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"geo\": DEFAULT_TYPE_URI,\n    \"impp\": DEFAULT_TYPE_URI,\n    \"key\": DEFAULT_TYPE_URI,\n    \"kind\": DEFAULT_TYPE_TEXT,\n    \"lang\": { defaultType: \"language-tag\" },\n    \"logo\": DEFAULT_TYPE_URI,\n    \"member\": DEFAULT_TYPE_URI,\n    \"n\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    \"nickname\": DEFAULT_TYPE_TEXT_MULTI,\n    \"note\": DEFAULT_TYPE_TEXT,\n    \"org\": { defaultType: \"text\", structuredValue: \";\" },\n    \"photo\": DEFAULT_TYPE_URI,\n    \"related\": DEFAULT_TYPE_URI,\n    \"rev\": { defaultType: \"timestamp\" },\n    \"role\": DEFAULT_TYPE_TEXT,\n    \"sound\": DEFAULT_TYPE_URI,\n    \"source\": DEFAULT_TYPE_URI,\n    \"tel\": { defaultType: \"uri\", allowedTypes: [\"uri\", \"text\"] },\n    \"title\": DEFAULT_TYPE_TEXT,\n    \"tz\": { defaultType: \"text\", allowedTypes: [\"text\", \"utc-offset\", \"uri\"] },\n    \"xml\": DEFAULT_TYPE_TEXT\n  });\n\n  var vcard3Values = ICAL.helpers.extend(commonValues, {\n    binary: icalValues.binary,\n    date: vcardValues.date,\n    \"date-time\": vcardValues[\"date-time\"],\n    \"phone-number\": {\n      // TODO\n      /* ... */\n    },\n    uri: icalValues.uri,\n    text: icalValues.text,\n    time: icalValues.time,\n    vcard: icalValues.text,\n    \"utc-offset\": {\n      toICAL: function(aValue) {\n        return aValue.substr(0, 7);\n      },\n\n      fromICAL: function(aValue) {\n        return aValue.substr(0, 7);\n      },\n\n      decorate: function(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    }\n  });\n\n  var vcard3Params = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"date-time\", \"phone-number\", \"time\",\n               \"boolean\", \"integer\", \"float\", \"utc-offset\", \"vcard\", \"binary\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  var vcard3Properties = ICAL.helpers.extend(commonProperties, {\n    fn: DEFAULT_TYPE_TEXT,\n    n: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    nickname: DEFAULT_TYPE_TEXT_MULTI,\n    photo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n    bday: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function(string) {\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n\n    adr: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    label: DEFAULT_TYPE_TEXT,\n\n    tel: { defaultType: \"phone-number\" },\n    email: DEFAULT_TYPE_TEXT,\n    mailer: DEFAULT_TYPE_TEXT,\n\n    tz: { defaultType: \"utc-offset\", allowedTypes: [\"utc-offset\", \"text\"] },\n    geo: { defaultType: \"float\", structuredValue: \";\" },\n\n    title: DEFAULT_TYPE_TEXT,\n    role: DEFAULT_TYPE_TEXT,\n    logo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n    agent: { defaultType: \"vcard\", allowedTypes: [\"vcard\", \"text\", \"uri\"] },\n    org: DEFAULT_TYPE_TEXT_STRUCTURED,\n\n    note: DEFAULT_TYPE_TEXT_MULTI,\n    prodid: DEFAULT_TYPE_TEXT,\n    rev: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function(string) {\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n    \"sort-string\": DEFAULT_TYPE_TEXT,\n    sound: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n\n    class: DEFAULT_TYPE_TEXT,\n    key: { defaultType: \"binary\", allowedTypes: [\"binary\", \"text\"] }\n  });\n\n  /**\n   * iCalendar design set\n   * @type {ICAL.design.designSet}\n   */\n  var icalSet = {\n    value: icalValues,\n    param: icalParams,\n    property: icalProperties\n  };\n\n  /**\n   * vCard 4.0 design set\n   * @type {ICAL.design.designSet}\n   */\n  var vcardSet = {\n    value: vcardValues,\n    param: vcardParams,\n    property: vcardProperties\n  };\n\n  /**\n   * vCard 3.0 design set\n   * @type {ICAL.design.designSet}\n   */\n  var vcard3Set = {\n    value: vcard3Values,\n    param: vcard3Params,\n    property: vcard3Properties\n  };\n\n  /**\n   * The design data, used by the parser to determine types for properties and\n   * other metadata needed to produce correct jCard/jCal data.\n   *\n   * @alias ICAL.design\n   * @namespace\n   */\n  var design = {\n    /**\n     * A designSet describes value, parameter and property data. It is used by\n     * ther parser and stringifier in components and properties to determine they\n     * should be represented.\n     *\n     * @typedef {Object} designSet\n     * @memberOf ICAL.design\n     * @property {Object} value       Definitions for value types, keys are type names\n     * @property {Object} param       Definitions for params, keys are param names\n     * @property {Object} property    Defintions for properties, keys are property names\n     */\n\n    /**\n     * Can be set to false to make the parser more lenient.\n     */\n    strict: true,\n\n    /**\n     * The default set for new properties and components if none is specified.\n     * @type {ICAL.design.designSet}\n     */\n    defaultSet: icalSet,\n\n    /**\n     * The default type for unknown properties\n     * @type {String}\n     */\n    defaultType: 'unknown',\n\n    /**\n     * Holds the design set for known top-level components\n     *\n     * @type {Object}\n     * @property {ICAL.design.designSet} vcard       vCard VCARD\n     * @property {ICAL.design.designSet} vevent      iCalendar VEVENT\n     * @property {ICAL.design.designSet} vtodo       iCalendar VTODO\n     * @property {ICAL.design.designSet} vjournal    iCalendar VJOURNAL\n     * @property {ICAL.design.designSet} valarm      iCalendar VALARM\n     * @property {ICAL.design.designSet} vtimezone   iCalendar VTIMEZONE\n     * @property {ICAL.design.designSet} daylight    iCalendar DAYLIGHT\n     * @property {ICAL.design.designSet} standard    iCalendar STANDARD\n     *\n     * @example\n     * var propertyName = 'fn';\n     * var componentDesign = ICAL.design.components.vcard;\n     * var propertyDetails = componentDesign.property[propertyName];\n     * if (propertyDetails.defaultType == 'text') {\n     *   // Yep, sure is...\n     * }\n     */\n    components: {\n      vcard: vcardSet,\n      vcard3: vcard3Set,\n      vevent: icalSet,\n      vtodo: icalSet,\n      vjournal: icalSet,\n      valarm: icalSet,\n      vtimezone: icalSet,\n      daylight: icalSet,\n      standard: icalSet\n    },\n\n\n    /**\n     * The design set for iCalendar (rfc5545/rfc7265) components.\n     * @type {ICAL.design.designSet}\n     */\n    icalendar: icalSet,\n\n    /**\n     * The design set for vCard (rfc6350/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard: vcardSet,\n\n    /**\n     * The design set for vCard (rfc2425/rfc2426/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard3: vcard3Set,\n\n    /**\n     * Gets the design set for the given component name.\n     *\n     * @param {String} componentName        The name of the component\n     * @return {ICAL.design.designSet}      The design set for the component\n     */\n    getDesignSet: function(componentName) {\n      var isInDesign = componentName && componentName in design.components;\n      return isInDesign ? design.components[componentName] : design.defaultSet;\n    }\n  };\n\n  return design;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * Contains various functions to convert jCal and jCard data back into\n * iCalendar and vCard.\n * @namespace\n */\nICAL.stringify = (function() {\n  'use strict';\n\n  var LINE_ENDING = '\\r\\n';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n\n  /**\n   * Convert a full jCal/jCard array into a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify\n   * @variation function\n   * @param {Array} jCal    The jCal/jCard document\n   * @return {String}       The stringified iCalendar/vCard document\n   */\n  function stringify(jCal) {\n    if (typeof jCal[0] == \"string\") {\n      // This is a single component\n      jCal = [jCal];\n    }\n\n    var i = 0;\n    var len = jCal.length;\n    var result = '';\n\n    for (; i < len; i++) {\n      result += stringify.component(jCal[i]) + LINE_ENDING;\n    }\n\n    return result;\n  }\n\n  /**\n   * Converts an jCal component array into a ICAL string.\n   * Recursive will resolve sub-components.\n   *\n   * Exact component/property order is not saved all\n   * properties will come before subcomponents.\n   *\n   * @function ICAL.stringify.component\n   * @param {Array} component\n   *        jCal/jCard fragment of a component\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this component\n   * @return {String}       The iCalendar/vCard string\n   */\n  stringify.component = function(component, designSet) {\n    var name = component[0].toUpperCase();\n    var result = 'BEGIN:' + name + LINE_ENDING;\n\n    var props = component[1];\n    var propIdx = 0;\n    var propLen = props.length;\n\n    var designSetName = component[0];\n    // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n    if (designSetName === 'vcard' && component[1].length > 0 &&\n            !(component[1][0][0] === \"version\" && component[1][0][3] === \"4.0\")) {\n      designSetName = \"vcard3\";\n    }\n    designSet = designSet || design.getDesignSet(designSetName);\n\n    for (; propIdx < propLen; propIdx++) {\n      result += stringify.property(props[propIdx], designSet) + LINE_ENDING;\n    }\n\n    // Ignore subcomponents if none exist, e.g. in vCard.\n    var comps = component[2] || [];\n    var compIdx = 0;\n    var compLen = comps.length;\n\n    for (; compIdx < compLen; compIdx++) {\n      result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;\n    }\n\n    result += 'END:' + name;\n    return result;\n  };\n\n  /**\n   * Converts a single jCal/jCard property to a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify.property\n   * @param {Array} property\n   *        jCal/jCard property array\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   * @param {Boolean} noFold\n   *        If true, the line is not folded\n   * @return {String}       The iCalendar/vCard string\n   */\n  stringify.property = function(property, designSet, noFold) {\n    var name = property[0].toUpperCase();\n    var jsName = property[0];\n    var params = property[1];\n\n    var line = name;\n\n    var paramName;\n    for (paramName in params) {\n      var value = params[paramName];\n\n      /* istanbul ignore else */\n      if (params.hasOwnProperty(paramName)) {\n        var multiValue = (paramName in designSet.param) && designSet.param[paramName].multiValue;\n        if (multiValue && Array.isArray(value)) {\n          if (designSet.param[paramName].multiValueSeparateDQuote) {\n            multiValue = '\"' + multiValue + '\"';\n          }\n          value = value.map(stringify._rfc6868Unescape);\n          value = stringify.multiValue(value, multiValue, \"unknown\", null, designSet);\n        } else {\n          value = stringify._rfc6868Unescape(value);\n        }\n\n\n        line += ';' + paramName.toUpperCase();\n        line += '=' + stringify.propertyValue(value);\n      }\n    }\n\n    if (property.length === 3) {\n      // If there are no values, we must assume a blank value\n      return line + ':';\n    }\n\n    var valueType = property[2];\n\n    if (!designSet) {\n      designSet = design.defaultSet;\n    }\n\n    var propDetails;\n    var multiValue = false;\n    var structuredValue = false;\n    var isDefault = false;\n\n    if (jsName in designSet.property) {\n      propDetails = designSet.property[jsName];\n\n      if ('multiValue' in propDetails) {\n        multiValue = propDetails.multiValue;\n      }\n\n      if (('structuredValue' in propDetails) && Array.isArray(property[3])) {\n        structuredValue = propDetails.structuredValue;\n      }\n\n      if ('defaultType' in propDetails) {\n        if (valueType === propDetails.defaultType) {\n          isDefault = true;\n        }\n      } else {\n        if (valueType === DEFAULT_VALUE_TYPE) {\n          isDefault = true;\n        }\n      }\n    } else {\n      if (valueType === DEFAULT_VALUE_TYPE) {\n        isDefault = true;\n      }\n    }\n\n    // push the VALUE property if type is not the default\n    // for the current property.\n    if (!isDefault) {\n      // value will never contain ;/:/, so we don't escape it here.\n      line += ';VALUE=' + valueType.toUpperCase();\n    }\n\n    line += ':';\n\n    if (multiValue && structuredValue) {\n      line += stringify.multiValue(\n        property[3], structuredValue, valueType, multiValue, designSet, structuredValue\n      );\n    } else if (multiValue) {\n      line += stringify.multiValue(\n        property.slice(3), multiValue, valueType, null, designSet, false\n      );\n    } else if (structuredValue) {\n      line += stringify.multiValue(\n        property[3], structuredValue, valueType, null, designSet, structuredValue\n      );\n    } else {\n      line += stringify.value(property[3], valueType, designSet, false);\n    }\n\n    return noFold ? line : ICAL.helpers.foldline(line);\n  };\n\n  /**\n   * Handles escaping of property values that may contain:\n   *\n   *    COLON (:), SEMICOLON (;), or COMMA (,)\n   *\n   * If any of the above are present the result is wrapped\n   * in double quotes.\n   *\n   * @function ICAL.stringify.propertyValue\n   * @param {String} value      Raw property value\n   * @return {String}           Given or escaped value when needed\n   */\n  stringify.propertyValue = function(value) {\n\n    if ((helpers.unescapedIndexOf(value, ',') === -1) &&\n        (helpers.unescapedIndexOf(value, ':') === -1) &&\n        (helpers.unescapedIndexOf(value, ';') === -1)) {\n\n      return value;\n    }\n\n    return '\"' + value + '\"';\n  };\n\n  /**\n   * Converts an array of ical values into a single\n   * string based on a type and a delimiter value (like \",\").\n   *\n   * @function ICAL.stringify.multiValue\n   * @param {Array} values      List of values to convert\n   * @param {String} delim      Used to join the values (\",\", \";\", \":\")\n   * @param {String} type       Lowecase ical value type\n   *        (like boolean, date-time, etc..)\n   * @param {?String} innerMulti If set, each value will again be processed\n   *        Used for structured values\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   *\n   * @return {String}           iCalendar/vCard string for value\n   */\n  stringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {\n    var result = '';\n    var len = values.length;\n    var i = 0;\n\n    for (; i < len; i++) {\n      if (innerMulti && Array.isArray(values[i])) {\n        result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);\n      } else {\n        result += stringify.value(values[i], type, designSet, structuredValue);\n      }\n\n      if (i !== (len - 1)) {\n        result += delim;\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   * Processes a single ical value runs the associated \"toICAL\" method from the\n   * design value type if available to convert the value.\n   *\n   * @function ICAL.stringify.value\n   * @param {String|Number} value       A formatted value\n   * @param {String} type               Lowercase iCalendar/vCard value type\n   *  (like boolean, date-time, etc..)\n   * @return {String}                   iCalendar/vCard value for single value\n   */\n  stringify.value = function(value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'toICAL' in designSet.value[type]) {\n      return designSet.value[type].toICAL(value, structuredValue);\n    }\n    return value;\n  };\n\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.stringify so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @param {String} val        The value to unescape\n   * @return {String}           The escaped value\n   */\n  stringify._rfc6868Unescape = function(val) {\n    return val.replace(/[\\n^\"]/g, function(x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n  var RFC6868_REPLACE_MAP = { '\"': \"^'\", \"\\n\": \"^n\", \"^\": \"^^\" };\n\n  return stringify;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * Contains various functions to parse iCalendar and vCard data.\n * @namespace\n */\nICAL.parse = (function() {\n  'use strict';\n\n  var CHAR = /[^ \\t]/;\n  var MULTIVALUE_DELIMITER = ',';\n  var VALUE_DELIMITER = ':';\n  var PARAM_DELIMITER = ';';\n  var PARAM_NAME_DELIMITER = '=';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n  var DEFAULT_PARAM_TYPE = 'text';\n\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n\n  /**\n   * An error that occurred during parsing.\n   *\n   * @param {String} message        The error message\n   * @memberof ICAL.parse\n   * @extends {Error}\n   * @class\n   */\n  function ParserError(message) {\n    this.message = message;\n    this.name = 'ParserError';\n\n    try {\n      throw new Error();\n    } catch (e) {\n      if (e.stack) {\n        var split = e.stack.split('\\n');\n        split.shift();\n        this.stack = split.join('\\n');\n      }\n    }\n  }\n\n  ParserError.prototype = Error.prototype;\n\n  /**\n   * Parses iCalendar or vCard data into a raw jCal object. Consult\n   * documentation on the {@tutorial layers|layers of parsing} for more\n   * details.\n   *\n   * @function ICAL.parse\n   * @variation function\n   * @todo Fix the API to be more clear on the return type\n   * @param {String} input      The string data to parse\n   * @return {Object|Object[]}  A single jCal object, or an array thereof\n   */\n  function parser(input) {\n    var state = {};\n    var root = state.component = [];\n\n    state.stack = [root];\n\n    parser._eachLine(input, function(err, line) {\n      parser._handleContentLine(line, state);\n    });\n\n\n    // when there are still items on the stack\n    // throw a fatal error, a component was not closed\n    // correctly in that case.\n    if (state.stack.length > 1) {\n      throw new ParserError(\n        'invalid ical body. component began but did not end'\n      );\n    }\n\n    state = null;\n\n    return (root.length == 1 ? root[0] : root);\n  }\n\n  /**\n   * Parse an iCalendar property value into the jCal for a single property\n   *\n   * @function ICAL.parse.property\n   * @param {String} str\n   *   The iCalendar property string to parse\n   * @param {ICAL.design.designSet=} designSet\n   *   The design data to use for this property\n   * @return {Object}\n   *   The jCal Object containing the property\n   */\n  parser.property = function(str, designSet) {\n    var state = {\n      component: [[], []],\n      designSet: designSet || design.defaultSet\n    };\n    parser._handleContentLine(str, state);\n    return state.component[1][0];\n  };\n\n  /**\n   * Convenience method to parse a component. You can use ICAL.parse() directly\n   * instead.\n   *\n   * @function ICAL.parse.component\n   * @see ICAL.parse(function)\n   * @param {String} str    The iCalendar component string to parse\n   * @return {Object}       The jCal Object containing the component\n   */\n  parser.component = function(str) {\n    return parser(str);\n  };\n\n  // classes & constants\n  parser.ParserError = ParserError;\n\n  /**\n   * The state for parsing content lines from an iCalendar/vCard string.\n   *\n   * @private\n   * @memberof ICAL.parse\n   * @typedef {Object} parserState\n   * @property {ICAL.design.designSet} designSet    The design set to use for parsing\n   * @property {ICAL.Component[]} stack             The stack of components being processed\n   * @property {ICAL.Component} component           The currently active component\n   */\n\n\n  /**\n   * Handles a single line of iCalendar/vCard, updating the state.\n   *\n   * @private\n   * @function ICAL.parse._handleContentLine\n   * @param {String} line               The content line to process\n   * @param {ICAL.parse.parserState}    The current state of the line parsing\n   */\n  parser._handleContentLine = function(line, state) {\n    // break up the parts of the line\n    var valuePos = line.indexOf(VALUE_DELIMITER);\n    var paramPos = line.indexOf(PARAM_DELIMITER);\n\n    var lastParamIndex;\n    var lastValuePos;\n\n    // name of property or begin/end\n    var name;\n    var value;\n    // params is only overridden if paramPos !== -1.\n    // we can't do params = params || {} later on\n    // because it sacrifices ops.\n    var params = {};\n\n    /**\n     * Different property cases\n     *\n     *\n     * 1. RRULE:FREQ=foo\n     *    // FREQ= is not a param but the value\n     *\n     * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;\n     *    // ROLE= is a param because : has not happened yet\n     */\n      // when the parameter delimiter is after the\n      // value delimiter then it is not a parameter.\n\n    if ((paramPos !== -1 && valuePos !== -1)) {\n      // when the parameter delimiter is after the\n      // value delimiter then it is not a parameter.\n      if (paramPos > valuePos) {\n        paramPos = -1;\n      }\n    }\n\n    var parsedParams;\n    if (paramPos !== -1) {\n      name = line.substring(0, paramPos).toLowerCase();\n      parsedParams = parser._parseParameters(line.substring(paramPos), 0, state.designSet);\n      if (parsedParams[2] == -1) {\n        throw new ParserError(\"Invalid parameters in '\" + line + \"'\");\n      }\n      params = parsedParams[0];\n      lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos;\n      if ((lastValuePos =\n        line.substring(lastParamIndex).indexOf(VALUE_DELIMITER)) !== -1) {\n        value = line.substring(lastParamIndex + lastValuePos + 1);\n      } else {\n        throw new ParserError(\"Missing parameter value in '\" + line + \"'\");\n      }\n    } else if (valuePos !== -1) {\n      // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)\n      name = line.substring(0, valuePos).toLowerCase();\n      value = line.substring(valuePos + 1);\n\n      if (name === 'begin') {\n        var newComponent = [value.toLowerCase(), [], []];\n        if (state.stack.length === 1) {\n          state.component.push(newComponent);\n        } else {\n          state.component[2].push(newComponent);\n        }\n        state.stack.push(state.component);\n        state.component = newComponent;\n        if (!state.designSet) {\n          state.designSet = design.getDesignSet(state.component[0]);\n        }\n        return;\n      } else if (name === 'end') {\n        state.component = state.stack.pop();\n        return;\n      }\n      // If it is not begin/end, then this is a property with an empty value,\n      // which should be considered valid.\n    } else {\n      /**\n       * Invalid line.\n       * The rational to throw an error is we will\n       * never be certain that the rest of the file\n       * is sane and it is unlikely that we can serialize\n       * the result correctly either.\n       */\n      throw new ParserError(\n        'invalid line (no token \";\" or \":\") \"' + line + '\"'\n      );\n    }\n\n    var valueType;\n    var multiValue = false;\n    var structuredValue = false;\n    var propertyDetails;\n\n    if (name in state.designSet.property) {\n      propertyDetails = state.designSet.property[name];\n\n      if ('multiValue' in propertyDetails) {\n        multiValue = propertyDetails.multiValue;\n      }\n\n      if ('structuredValue' in propertyDetails) {\n        structuredValue = propertyDetails.structuredValue;\n      }\n\n      if (value && 'detectType' in propertyDetails) {\n        valueType = propertyDetails.detectType(value);\n      }\n    }\n\n    // attempt to determine value\n    if (!valueType) {\n      if (!('value' in params)) {\n        if (propertyDetails) {\n          valueType = propertyDetails.defaultType;\n        } else {\n          valueType = DEFAULT_VALUE_TYPE;\n        }\n      } else {\n        // possible to avoid this?\n        valueType = params.value.toLowerCase();\n      }\n    }\n\n    delete params.value;\n\n    /**\n     * Note on `var result` juggling:\n     *\n     * I observed that building the array in pieces has adverse\n     * effects on performance, so where possible we inline the creation.\n     * It is a little ugly but resulted in ~2000 additional ops/sec.\n     */\n\n    var result;\n    if (multiValue && structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else if (multiValue) {\n      result = [name, params, valueType];\n      parser._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);\n    } else if (structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else {\n      value = parser._parseValue(value, valueType, state.designSet, false);\n      result = [name, params, valueType, value];\n    }\n    // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n    if (state.component[0] === 'vcard' && state.component[1].length === 0 &&\n            !(name === 'version' && value === '4.0')) {\n      state.designSet = design.getDesignSet(\"vcard3\");\n    }\n    state.component[1].push(result);\n  };\n\n  /**\n   * Parse a value from the raw value into the jCard/jCal value.\n   *\n   * @private\n   * @function ICAL.parse._parseValue\n   * @param {String} value          Original value\n   * @param {String} type           Type of value\n   * @param {Object} designSet      The design data to use for this value\n   * @return {Object} varies on type\n   */\n  parser._parseValue = function(value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'fromICAL' in designSet.value[type]) {\n      return designSet.value[type].fromICAL(value, structuredValue);\n    }\n    return value;\n  };\n\n  /**\n   * Parse parameters from a string to object.\n   *\n   * @function ICAL.parse._parseParameters\n   * @private\n   * @param {String} line           A single unfolded line\n   * @param {Numeric} start         Position to start looking for properties\n   * @param {Object} designSet      The design data to use for this property\n   * @return {Object} key/value pairs\n   */\n  parser._parseParameters = function(line, start, designSet) {\n    var lastParam = start;\n    var pos = 0;\n    var delim = PARAM_NAME_DELIMITER;\n    var result = {};\n    var name, lcname;\n    var value, valuePos = -1;\n    var type, multiValue, mvdelim;\n\n    // find the next '=' sign\n    // use lastParam and pos to find name\n    // check if \" is used if so get value from \"->\"\n    // then increment pos to find next ;\n\n    while ((pos !== false) &&\n           (pos = helpers.unescapedIndexOf(line, delim, pos + 1)) !== -1) {\n\n      name = line.substr(lastParam + 1, pos - lastParam - 1);\n      if (name.length == 0) {\n        throw new ParserError(\"Empty parameter name in '\" + line + \"'\");\n      }\n      lcname = name.toLowerCase();\n      mvdelim = false;\n      multiValue = false;\n\n      if (lcname in designSet.param && designSet.param[lcname].valueType) {\n        type = designSet.param[lcname].valueType;\n      } else {\n        type = DEFAULT_PARAM_TYPE;\n      }\n\n      if (lcname in designSet.param) {\n        multiValue = designSet.param[lcname].multiValue;\n        if (designSet.param[lcname].multiValueSeparateDQuote) {\n          mvdelim = parser._rfc6868Escape('\"' + multiValue + '\"');\n        }\n      }\n\n      var nextChar = line[pos + 1];\n      if (nextChar === '\"') {\n        valuePos = pos + 2;\n        pos = helpers.unescapedIndexOf(line, '\"', valuePos);\n        if (multiValue && pos != -1) {\n            var extendedValue = true;\n            while (extendedValue) {\n              if (line[pos + 1] == multiValue && line[pos + 2] == '\"') {\n                pos = helpers.unescapedIndexOf(line, '\"', pos + 3);\n              } else {\n                extendedValue = false;\n              }\n            }\n          }\n        if (pos === -1) {\n          throw new ParserError(\n            'invalid line (no matching double quote) \"' + line + '\"'\n          );\n        }\n        value = line.substr(valuePos, pos - valuePos);\n        lastParam = helpers.unescapedIndexOf(line, PARAM_DELIMITER, pos);\n        if (lastParam === -1) {\n          pos = false;\n        }\n      } else {\n        valuePos = pos + 1;\n\n        // move to next \";\"\n        var nextPos = helpers.unescapedIndexOf(line, PARAM_DELIMITER, valuePos);\n        var propValuePos = helpers.unescapedIndexOf(line, VALUE_DELIMITER, valuePos);\n        if (propValuePos !== -1 && nextPos > propValuePos) {\n          // this is a delimiter in the property value, let's stop here\n          nextPos = propValuePos;\n          pos = false;\n        } else if (nextPos === -1) {\n          // no \";\"\n          if (propValuePos === -1) {\n            nextPos = line.length;\n          } else {\n            nextPos = propValuePos;\n          }\n          pos = false;\n        } else {\n          lastParam = nextPos;\n          pos = nextPos;\n        }\n\n        value = line.substr(valuePos, nextPos - valuePos);\n      }\n\n      value = parser._rfc6868Escape(value);\n      if (multiValue) {\n        var delimiter = mvdelim || multiValue;\n        value = parser._parseMultiValue(value, delimiter, type, [], null, designSet);\n      } else {\n        value = parser._parseValue(value, type, designSet);\n      }\n\n      if (multiValue && (lcname in result)) {\n        if (Array.isArray(result[lcname])) {\n          result[lcname].push(value);\n        } else {\n          result[lcname] = [\n            result[lcname],\n            value\n          ];\n        }\n      } else {\n        result[lcname] = value;\n      }\n    }\n    return [result, value, valuePos];\n  };\n\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.parse so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @function ICAL.parse._rfc6868Escape\n   * @param {String} val        The value to escape\n   * @return {String}           The escaped value\n   */\n  parser._rfc6868Escape = function(val) {\n    return val.replace(/\\^['n^]/g, function(x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n  var RFC6868_REPLACE_MAP = { \"^'\": '\"', \"^n\": \"\\n\", \"^^\": \"^\" };\n\n  /**\n   * Parse a multi value string. This function is used either for parsing\n   * actual multi-value property's values, or for handling parameter values. It\n   * can be used for both multi-value properties and structured value properties.\n   *\n   * @private\n   * @function ICAL.parse._parseMultiValue\n   * @param {String} buffer     The buffer containing the full value\n   * @param {String} delim      The multi-value delimiter\n   * @param {String} type       The value type to be parsed\n   * @param {Array.<?>} result        The array to append results to, varies on value type\n   * @param {String} innerMulti The inner delimiter to split each value with\n   * @param {ICAL.design.designSet} designSet   The design data for this value\n   * @return {?|Array.<?>}            Either an array of results, or the first result\n   */\n  parser._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {\n    var pos = 0;\n    var lastPos = 0;\n    var value;\n    if (delim.length === 0) {\n      return buffer;\n    }\n\n    // split each piece\n    while ((pos = helpers.unescapedIndexOf(buffer, delim, lastPos)) !== -1) {\n      value = buffer.substr(lastPos, pos - lastPos);\n      if (innerMulti) {\n        value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n      } else {\n        value = parser._parseValue(value, type, designSet, structuredValue);\n      }\n      result.push(value);\n      lastPos = pos + delim.length;\n    }\n\n    // on the last piece take the rest of string\n    value = buffer.substr(lastPos);\n    if (innerMulti) {\n      value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n    } else {\n      value = parser._parseValue(value, type, designSet, structuredValue);\n    }\n    result.push(value);\n\n    return result.length == 1 ? result[0] : result;\n  };\n\n  /**\n   * Process a complete buffer of iCalendar/vCard data line by line, correctly\n   * unfolding content. Each line will be processed with the given callback\n   *\n   * @private\n   * @function ICAL.parse._eachLine\n   * @param {String} buffer                         The buffer to process\n   * @param {function(?String, String)} callback    The callback for each line\n   */\n  parser._eachLine = function(buffer, callback) {\n    var len = buffer.length;\n    var lastPos = buffer.search(CHAR);\n    var pos = lastPos;\n    var line;\n    var firstChar;\n\n    var newlineOffset;\n\n    do {\n      pos = buffer.indexOf('\\n', lastPos) + 1;\n\n      if (pos > 1 && buffer[pos - 2] === '\\r') {\n        newlineOffset = 2;\n      } else {\n        newlineOffset = 1;\n      }\n\n      if (pos === 0) {\n        pos = len;\n        newlineOffset = 0;\n      }\n\n      firstChar = buffer[lastPos];\n\n      if (firstChar === ' ' || firstChar === '\\t') {\n        // add to line\n        line += buffer.substr(\n          lastPos + 1,\n          pos - lastPos - (newlineOffset + 1)\n        );\n      } else {\n        if (line)\n          callback(null, line);\n        // push line\n        line = buffer.substr(\n          lastPos,\n          pos - lastPos - newlineOffset\n        );\n      }\n\n      lastPos = pos;\n    } while (pos !== len);\n\n    // extra ending line\n    line = line.trim();\n\n    if (line.length)\n      callback(null, line);\n  };\n\n  return parser;\n\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Component = (function() {\n  'use strict';\n\n  var PROPERTY_INDEX = 1;\n  var COMPONENT_INDEX = 2;\n  var NAME_INDEX = 0;\n\n  /**\n   * @classdesc\n   * Wraps a jCal component, adding convenience methods to add, remove and\n   * update subcomponents and properties.\n   *\n   * @class\n   * @alias ICAL.Component\n   * @param {Array|String} jCal         Raw jCal component data OR name of new\n   *                                      component\n   * @param {ICAL.Component} parent     Parent component to associate\n   */\n  function Component(jCal, parent) {\n    if (typeof(jCal) === 'string') {\n      // jCal spec (name, properties, components)\n      jCal = [jCal, [], []];\n    }\n\n    // mostly for legacy reasons.\n    this.jCal = jCal;\n\n    this.parent = parent || null;\n  }\n\n  Component.prototype = {\n    /**\n     * Hydrated properties are inserted into the _properties array at the same\n     * position as in the jCal array, so it is possible that the array contains\n     * undefined values for unhydrdated properties. To avoid iterating the\n     * array when checking if all properties have been hydrated, we save the\n     * count here.\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedPropertyCount: 0,\n\n    /**\n     * The same count as for _hydratedPropertyCount, but for subcomponents\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedComponentCount: 0,\n\n    /**\n     * The name of this component\n     * @readonly\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The design set for this component, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      var parentDesign = this.parent && this.parent._designSet;\n      return parentDesign || ICAL.design.getDesignSet(this.name);\n    },\n\n    _hydrateComponent: function(index) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (this._components[index]) {\n        return this._components[index];\n      }\n\n      var comp = new Component(\n        this.jCal[COMPONENT_INDEX][index],\n        this\n      );\n\n      this._hydratedComponentCount++;\n      return (this._components[index] = comp);\n    },\n\n    _hydrateProperty: function(index) {\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (this._properties[index]) {\n        return this._properties[index];\n      }\n\n      var prop = new ICAL.Property(\n        this.jCal[PROPERTY_INDEX][index],\n        this\n      );\n\n      this._hydratedPropertyCount++;\n      return (this._properties[index] = prop);\n    },\n\n    /**\n     * Finds first sub component, optionally filtered by name.\n     *\n     * @param {String=} name        Optional name to filter by\n     * @return {?ICAL.Component}     The found subcomponent\n     */\n    getFirstSubcomponent: function(name) {\n      if (name) {\n        var i = 0;\n        var comps = this.jCal[COMPONENT_INDEX];\n        var len = comps.length;\n\n        for (; i < len; i++) {\n          if (comps[i][NAME_INDEX] === name) {\n            var result = this._hydrateComponent(i);\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[COMPONENT_INDEX].length) {\n          return this._hydrateComponent(0);\n        }\n      }\n\n      // ensure we return a value (strict mode)\n      return null;\n    },\n\n    /**\n     * Finds all sub components, optionally filtering by name.\n     *\n     * @param {String=} name            Optional name to filter by\n     * @return {ICAL.Component[]}       The found sub components\n     */\n    getAllSubcomponents: function(name) {\n      var jCalLen = this.jCal[COMPONENT_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var comps = this.jCal[COMPONENT_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === comps[i][NAME_INDEX]) {\n            result.push(\n              this._hydrateComponent(i)\n            );\n          }\n        }\n        return result;\n      } else {\n        if (!this._components ||\n            (this._hydratedComponentCount !== jCalLen)) {\n          for (; i < jCalLen; i++) {\n            this._hydrateComponent(i);\n          }\n        }\n\n        return this._components || [];\n      }\n    },\n\n    /**\n     * Returns true when a named property exists.\n     *\n     * @param {String} name     The property name\n     * @return {Boolean}        True, when property is found\n     */\n    hasProperty: function(name) {\n      var props = this.jCal[PROPERTY_INDEX];\n      var len = props.length;\n\n      var i = 0;\n      for (; i < len; i++) {\n        // 0 is property name\n        if (props[i][NAME_INDEX] === name) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Finds the first property, optionally with the given name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {?ICAL.Property}     The found property\n     */\n    getFirstProperty: function(name) {\n      if (name) {\n        var i = 0;\n        var props = this.jCal[PROPERTY_INDEX];\n        var len = props.length;\n\n        for (; i < len; i++) {\n          if (props[i][NAME_INDEX] === name) {\n            var result = this._hydrateProperty(i);\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[PROPERTY_INDEX].length) {\n          return this._hydrateProperty(0);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Returns first property's value, if available.\n     *\n     * @param {String=} name    Lowercase property name\n     * @return {?String}        The found property value.\n     */\n    getFirstPropertyValue: function(name) {\n      var prop = this.getFirstProperty(name);\n      if (prop) {\n        return prop.getFirstValue();\n      }\n\n      return null;\n    },\n\n    /**\n     * Get all properties in the component, optionally filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {ICAL.Property[]}    List of properties\n     */\n    getAllProperties: function(name) {\n      var jCalLen = this.jCal[PROPERTY_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var props = this.jCal[PROPERTY_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === props[i][NAME_INDEX]) {\n            result.push(\n              this._hydrateProperty(i)\n            );\n          }\n        }\n        return result;\n      } else {\n        if (!this._properties ||\n            (this._hydratedPropertyCount !== jCalLen)) {\n          for (; i < jCalLen; i++) {\n            this._hydrateProperty(i);\n          }\n        }\n\n        return this._properties || [];\n      }\n    },\n\n    _removeObjectByIndex: function(jCalIndex, cache, index) {\n      cache = cache || [];\n      // remove cached version\n      if (cache[index]) {\n        var obj = cache[index];\n        if (\"parent\" in obj) {\n            obj.parent = null;\n        }\n      }\n\n      cache.splice(index, 1);\n\n      // remove it from the jCal\n      this.jCal[jCalIndex].splice(index, 1);\n    },\n\n    _removeObject: function(jCalIndex, cache, nameOrObject) {\n      var i = 0;\n      var objects = this.jCal[jCalIndex];\n      var len = objects.length;\n      var cached = this[cache];\n\n      if (typeof(nameOrObject) === 'string') {\n        for (; i < len; i++) {\n          if (objects[i][NAME_INDEX] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n            return true;\n          }\n        }\n      } else if (cached) {\n        for (; i < len; i++) {\n          if (cached[i] && cached[i] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    _removeAllObjects: function(jCalIndex, cache, name) {\n      var cached = this[cache];\n\n      // Unfortunately we have to run through all children to reset their\n      // parent property.\n      var objects = this.jCal[jCalIndex];\n      var i = objects.length - 1;\n\n      // descending search required because splice\n      // is used and will effect the indices.\n      for (; i >= 0; i--) {\n        if (!name || objects[i][NAME_INDEX] === name) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n        }\n      }\n    },\n\n    /**\n     * Adds a single sub component.\n     *\n     * @param {ICAL.Component} component        The component to add\n     * @return {ICAL.Component}                 The passed in component\n     */\n    addSubcomponent: function(component) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (component.parent) {\n        component.parent.removeSubcomponent(component);\n      }\n\n      var idx = this.jCal[COMPONENT_INDEX].push(component.jCal);\n      this._components[idx - 1] = component;\n      this._hydratedComponentCount++;\n      component.parent = this;\n      return component;\n    },\n\n    /**\n     * Removes a single component by name or the instance of a specific\n     * component.\n     *\n     * @param {ICAL.Component|String} nameOrComp    Name of component, or component\n     * @return {Boolean}                            True when comp is removed\n     */\n    removeSubcomponent: function(nameOrComp) {\n      var removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);\n      if (removed) {\n        this._hydratedComponentCount--;\n      }\n      return removed;\n    },\n\n    /**\n     * Removes all components or (if given) all components by a particular\n     * name.\n     *\n     * @param {String=} name            Lowercase component name\n     */\n    removeAllSubcomponents: function(name) {\n      var removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);\n      this._hydratedComponentCount = 0;\n      return removed;\n    },\n\n    /**\n     * Adds an {@link ICAL.Property} to the component.\n     *\n     * @param {ICAL.Property} property      The property to add\n     * @return {ICAL.Property}              The passed in property\n     */\n    addProperty: function(property) {\n      if (!(property instanceof ICAL.Property)) {\n        throw new TypeError('must instance of ICAL.Property');\n      }\n\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (property.parent) {\n        property.parent.removeProperty(property);\n      }\n\n      var idx = this.jCal[PROPERTY_INDEX].push(property.jCal);\n      this._properties[idx - 1] = property;\n      this._hydratedPropertyCount++;\n      property.parent = this;\n      return property;\n    },\n\n    /**\n     * Helper method to add a property with a value to the component.\n     *\n     * @param {String}               name         Property name to add\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    addPropertyWithValue: function(name, value) {\n      var prop = new ICAL.Property(name);\n      prop.setValue(value);\n\n      this.addProperty(prop);\n\n      return prop;\n    },\n\n    /**\n     * Helper method that will update or create a property of the given name\n     * and sets its value. If multiple properties with the given name exist,\n     * only the first is updated.\n     *\n     * @param {String}               name         Property name to update\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    updatePropertyWithValue: function(name, value) {\n      var prop = this.getFirstProperty(name);\n\n      if (prop) {\n        prop.setValue(value);\n      } else {\n        prop = this.addPropertyWithValue(name, value);\n      }\n\n      return prop;\n    },\n\n    /**\n     * Removes a single property by name or the instance of the specific\n     * property.\n     *\n     * @param {String|ICAL.Property} nameOrProp     Property name or instance to remove\n     * @return {Boolean}                            True, when deleted\n     */\n    removeProperty: function(nameOrProp) {\n      var removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);\n      if (removed) {\n        this._hydratedPropertyCount--;\n      }\n      return removed;\n    },\n\n    /**\n     * Removes all properties associated with this component, optionally\n     * filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {Boolean}            True, when deleted\n     */\n    removeAllProperties: function(name) {\n      var removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);\n      this._hydratedPropertyCount = 0;\n      return removed;\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toString: function() {\n      return ICAL.stringify.component(\n        this.jCal, this._designSet\n      );\n    }\n  };\n\n  /**\n   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.\n   *\n   * @param {String} str        The iCalendar string to parse\n   */\n  Component.fromString = function(str) {\n    return new Component(ICAL.parse.component(str));\n  };\n\n  return Component;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Property = (function() {\n  'use strict';\n\n  var NAME_INDEX = 0;\n  var PROP_INDEX = 1;\n  var TYPE_INDEX = 2;\n  var VALUE_INDEX = 3;\n\n  var design = ICAL.design;\n\n  /**\n   * @classdesc\n   * Provides a layer on top of the raw jCal object for manipulating a single\n   * property, with its parameters and value.\n   *\n   * @description\n   * It is important to note that mutations done in the wrapper\n   * directly mutate the jCal object used to initialize.\n   *\n   * Can also be used to create new properties by passing\n   * the name of the property (as a String).\n   *\n   * @class\n   * @alias ICAL.Property\n   * @param {Array|String} jCal         Raw jCal representation OR\n   *  the new name of the property\n   *\n   * @param {ICAL.Component=} parent    Parent component\n   */\n  function Property(jCal, parent) {\n    this._parent = parent || null;\n\n    if (typeof(jCal) === 'string') {\n      // We are creating the property by name and need to detect the type\n      this.jCal = [jCal, {}, design.defaultType];\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n    } else {\n      this.jCal = jCal;\n    }\n    this._updateType();\n  }\n\n  Property.prototype = {\n\n    /**\n     * The value type for this property\n     * @readonly\n     * @type {String}\n     */\n    get type() {\n      return this.jCal[TYPE_INDEX];\n    },\n\n    /**\n     * The name of this property, in lowercase.\n     * @readonly\n     * @type {String}\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The parent component for this property.\n     * @type {ICAL.Component}\n     */\n    get parent() {\n      return this._parent;\n    },\n\n    set parent(p) {\n      // Before setting the parent, check if the design set has changed. If it\n      // has, we later need to update the type if it was unknown before.\n      var designSetChanged = !this._parent || (p && p._designSet != this._parent._designSet);\n\n      this._parent = p;\n\n      if (this.type == design.defaultType && designSetChanged) {\n        this.jCal[TYPE_INDEX] = this.getDefaultType();\n        this._updateType();\n      }\n\n      return p;\n    },\n\n    /**\n     * The design set for this property, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      return this.parent ? this.parent._designSet : design.defaultSet;\n    },\n\n    /**\n     * Updates the type metadata from the current jCal type and design set.\n     *\n     * @private\n     */\n    _updateType: function() {\n      var designSet = this._designSet;\n\n      if (this.type in designSet.value) {\n        var designType = designSet.value[this.type];\n\n        if ('decorate' in designSet.value[this.type]) {\n          this.isDecorated = true;\n        } else {\n          this.isDecorated = false;\n        }\n\n        if (this.name in designSet.property) {\n          this.isMultiValue = ('multiValue' in designSet.property[this.name]);\n          this.isStructuredValue = ('structuredValue' in designSet.property[this.name]);\n        }\n      }\n    },\n\n    /**\n     * Hydrate a single value. The act of hydrating means turning the raw jCal\n     * value into a potentially wrapped object, for example {@link ICAL.Time}.\n     *\n     * @private\n     * @param {Number} index        The index of the value to hydrate\n     * @return {Object}             The decorated value.\n     */\n    _hydrateValue: function(index) {\n      if (this._values && this._values[index]) {\n        return this._values[index];\n      }\n\n      // for the case where there is no value.\n      if (this.jCal.length <= (VALUE_INDEX + index)) {\n        return null;\n      }\n\n      if (this.isDecorated) {\n        if (!this._values) {\n          this._values = [];\n        }\n        return (this._values[index] = this._decorate(\n          this.jCal[VALUE_INDEX + index]\n        ));\n      } else {\n        return this.jCal[VALUE_INDEX + index];\n      }\n    },\n\n    /**\n     * Decorate a single value, returning its wrapped object. This is used by\n     * the hydrate function to actually wrap the value.\n     *\n     * @private\n     * @param {?} value         The value to decorate\n     * @return {Object}         The decorated value\n     */\n    _decorate: function(value) {\n      return this._designSet.value[this.type].decorate(value, this);\n    },\n\n    /**\n     * Undecorate a single value, returning its raw jCal data.\n     *\n     * @private\n     * @param {Object} value         The value to undecorate\n     * @return {?}                   The undecorated value\n     */\n    _undecorate: function(value) {\n      return this._designSet.value[this.type].undecorate(value, this);\n    },\n\n    /**\n     * Sets the value at the given index while also hydrating it. The passed\n     * value can either be a decorated or undecorated value.\n     *\n     * @private\n     * @param {?} value             The value to set\n     * @param {Number} index        The index to set it at\n     */\n    _setDecoratedValue: function(value, index) {\n      if (!this._values) {\n        this._values = [];\n      }\n\n      if (typeof(value) === 'object' && 'icaltype' in value) {\n        // decorated value\n        this.jCal[VALUE_INDEX + index] = this._undecorate(value);\n        this._values[index] = value;\n      } else {\n        // undecorated value\n        this.jCal[VALUE_INDEX + index] = value;\n        this._values[index] = this._decorate(value);\n      }\n    },\n\n    /**\n     * Gets a parameter on the property.\n     *\n     * @param {String}        name   Parameter name (lowercase)\n     * @return {Array|String}        Parameter value\n     */\n    getParameter: function(name) {\n      if (name in this.jCal[PROP_INDEX]) {\n        return this.jCal[PROP_INDEX][name];\n      } else {\n        return undefined;\n      }\n    },\n\n    /**\n     * Gets first parameter on the property.\n     *\n     * @param {String}        name   Parameter name (lowercase)\n     * @return {String}        Parameter value\n     */\n    getFirstParameter: function(name) {\n      var parameters = this.getParameter(name);\n\n      if (Array.isArray(parameters)) {\n        return parameters[0];\n      }\n\n      return parameters;\n    },\n\n    /**\n     * Sets a parameter on the property.\n     *\n     * @param {String}       name     The parameter name\n     * @param {Array|String} value    The parameter value\n     */\n    setParameter: function(name, value) {\n      var lcname = name.toLowerCase();\n      if (typeof value === \"string\" &&\n          lcname in this._designSet.param &&\n          'multiValue' in this._designSet.param[lcname]) {\n          value = [value];\n      }\n      this.jCal[PROP_INDEX][name] = value;\n    },\n\n    /**\n     * Removes a parameter\n     *\n     * @param {String} name     The parameter name\n     */\n    removeParameter: function(name) {\n      delete this.jCal[PROP_INDEX][name];\n    },\n\n    /**\n     * Get the default type based on this property's name.\n     *\n     * @return {String}     The default type for this property\n     */\n    getDefaultType: function() {\n      var name = this.jCal[NAME_INDEX];\n      var designSet = this._designSet;\n\n      if (name in designSet.property) {\n        var details = designSet.property[name];\n        if ('defaultType' in details) {\n          return details.defaultType;\n        }\n      }\n      return design.defaultType;\n    },\n\n    /**\n     * Sets type of property and clears out any existing values of the current\n     * type.\n     *\n     * @param {String} type     New iCAL type (see design.*.values)\n     */\n    resetType: function(type) {\n      this.removeAllValues();\n      this.jCal[TYPE_INDEX] = type;\n      this._updateType();\n    },\n\n    /**\n     * Finds the first property value.\n     *\n     * @return {String}         First property value\n     */\n    getFirstValue: function() {\n      return this._hydrateValue(0);\n    },\n\n    /**\n     * Gets all values on the property.\n     *\n     * NOTE: this creates an array during each call.\n     *\n     * @return {Array}          List of values\n     */\n    getValues: function() {\n      var len = this.jCal.length - VALUE_INDEX;\n\n      if (len < 1) {\n        // it is possible for a property to have no value.\n        return [];\n      }\n\n      var i = 0;\n      var result = [];\n\n      for (; i < len; i++) {\n        result[i] = this._hydrateValue(i);\n      }\n\n      return result;\n    },\n\n    /**\n     * Removes all values from this property\n     */\n    removeAllValues: function() {\n      if (this._values) {\n        this._values.length = 0;\n      }\n      this.jCal.length = 3;\n    },\n\n    /**\n     * Sets the values of the property.  Will overwrite the existing values.\n     * This can only be used for multi-value properties.\n     *\n     * @param {Array} values    An array of values\n     */\n    setValues: function(values) {\n      if (!this.isMultiValue) {\n        throw new Error(\n          this.name + ': does not not support mulitValue.\\n' +\n          'override isMultiValue'\n        );\n      }\n\n      var len = values.length;\n      var i = 0;\n      this.removeAllValues();\n\n      if (len > 0 &&\n          typeof(values[0]) === 'object' &&\n          'icaltype' in values[0]) {\n        this.resetType(values[0].icaltype);\n      }\n\n      if (this.isDecorated) {\n        for (; i < len; i++) {\n          this._setDecoratedValue(values[i], i);\n        }\n      } else {\n        for (; i < len; i++) {\n          this.jCal[VALUE_INDEX + i] = values[i];\n        }\n      }\n    },\n\n    /**\n     * Sets the current value of the property. If this is a multi-value\n     * property, all other values will be removed.\n     *\n     * @param {String|Object} value     New property value.\n     */\n    setValue: function(value) {\n      this.removeAllValues();\n      if (typeof(value) === 'object' && 'icaltype' in value) {\n        this.resetType(value.icaltype);\n      }\n\n      if (this.isDecorated) {\n        this._setDecoratedValue(value, 0);\n      } else {\n        this.jCal[VALUE_INDEX] = value;\n      }\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toICALString: function() {\n      return ICAL.stringify.property(\n        this.jCal, this._designSet, true\n      );\n    }\n  };\n\n  /**\n   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.\n   *\n   * @param {String} str                        The iCalendar string to parse\n   * @param {ICAL.design.designSet=} designSet  The design data to use for this property\n   * @return {ICAL.Property}                    The created iCalendar property\n   */\n  Property.fromString = function(str, designSet) {\n    return new Property(ICAL.parse.property(str, designSet));\n  };\n\n  return Property;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.UtcOffset = (function() {\n\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.UtcOffset\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  function UtcOffset(aData) {\n    this.fromData(aData);\n  }\n\n  UtcOffset.prototype = {\n\n    /**\n     * The hours in the utc-offset\n     * @type {Number}\n     */\n    hours: 0,\n\n    /**\n     * The minutes in the utc-offset\n     * @type {Number}\n     */\n    minutes: 0,\n\n    /**\n     * The sign of the utc offset, 1 for positive offset, -1 for negative\n     * offsets.\n     * @type {Number}\n     */\n    factor: 1,\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"utc-offset\"\n     */\n    icaltype: \"utc-offset\",\n\n    /**\n     * Returns a clone of the utc offset object.\n     *\n     * @return {ICAL.UtcOffset}     The cloned object\n     */\n    clone: function() {\n      return ICAL.UtcOffset.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData          An object with members of the utc offset\n     * @param {Number=} aData.hours   The hours for the utc offset\n     * @param {Number=} aData.minutes The minutes in the utc offset\n     * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n     */\n    fromData: function(aData) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (aData.hasOwnProperty(key)) {\n            this[key] = aData[key];\n          }\n        }\n      }\n      this._normalize();\n    },\n\n    /**\n     * Sets up the current instance from the given seconds value. The seconds\n     * value is truncated to the minute. Offsets are wrapped when the world\n     * ends, the hour after UTC+14:00 is UTC-12:00.\n     *\n     * @param {Number} aSeconds         The seconds to convert into an offset\n     */\n    fromSeconds: function(aSeconds) {\n      var secs = Math.abs(aSeconds);\n\n      this.factor = aSeconds < 0 ? -1 : 1;\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n\n      secs -= (this.hours * 3600);\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      return this;\n    },\n\n    /**\n     * Convert the current offset to a value in seconds\n     *\n     * @return {Number}                 The offset in seconds\n     */\n    toSeconds: function() {\n      return this.factor * (60 * this.minutes + 3600 * this.hours);\n    },\n\n    /**\n     * Compare this utc offset with another one.\n     *\n     * @param {ICAL.UtcOffset} other        The other offset to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toSeconds();\n      var b = other.toSeconds();\n      return (a > b) - (b > a);\n    },\n\n    _normalize: function() {\n      // Range: 97200 seconds (with 1 hour inbetween)\n      var secs = this.toSeconds();\n      var factor = this.factor;\n      while (secs < -43200) { // = UTC-12:00\n        secs += 97200;\n      }\n      while (secs > 50400) { // = UTC+14:00\n        secs -= 97200;\n      }\n\n      this.fromSeconds(secs);\n\n      // Avoid changing the factor when on zero seconds\n      if (secs == 0) {\n        this.factor = factor;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this utc-offset.\n     * @return {String}\n     */\n    toICALString: function() {\n      return ICAL.design.icalendar.value['utc-offset'].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this utc-offset.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.factor == 1 ? \"+\" : \"-\") +\n              ICAL.helpers.pad2(this.hours) + ':' +\n              ICAL.helpers.pad2(this.minutes);\n    }\n  };\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.\n   *\n   * @param {String} aString    The string to parse\n   * @return {ICAL.Duration}    The created utc-offset instance\n   */\n  UtcOffset.fromString = function(aString) {\n    // -05:00\n    var options = {};\n    //TODO: support seconds per rfc5545 ?\n    options.factor = (aString[0] === '+') ? 1 : -1;\n    options.hours = ICAL.helpers.strictParseInt(aString.substr(1, 2));\n    options.minutes = ICAL.helpers.strictParseInt(aString.substr(4, 2));\n\n    return new ICAL.UtcOffset(options);\n  };\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds\n   * value.\n   *\n   * @param {Number} aSeconds       The number of seconds to convert\n   */\n  UtcOffset.fromSeconds = function(aSeconds) {\n    var instance = new UtcOffset();\n    instance.fromSeconds(aSeconds);\n    return instance;\n  };\n\n  return UtcOffset;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Binary = (function() {\n\n  /**\n   * @classdesc\n   * Represents the BINARY value type, which contains extra methods for\n   * encoding and decoding.\n   *\n   * @class\n   * @alias ICAL.Binary\n   * @param {String} aValue     The binary data for this value\n   */\n  function Binary(aValue) {\n    this.value = aValue;\n  }\n\n  Binary.prototype = {\n    /**\n     * The type name, to be used in the jCal object.\n     * @default \"binary\"\n     * @constant\n     */\n    icaltype: \"binary\",\n\n    /**\n     * Base64 decode the current value\n     *\n     * @return {String}         The base64-decoded value\n     */\n    decodeValue: function decodeValue() {\n      return this._b64_decode(this.value);\n    },\n\n    /**\n     * Encodes the passed parameter with base64 and sets the internal\n     * value to the result.\n     *\n     * @param {String} aValue      The raw binary value to encode\n     */\n    setEncodedValue: function setEncodedValue(aValue) {\n      this.value = this._b64_encode(aValue);\n    },\n\n    _b64_encode: function base64_encode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Bayron Guevara\n      // +   improved by: Thunder.m\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   improved by: Rafał Kukawski (http://kukawski.pl)\n      // *     example 1: base64_encode('Kevin van Zonneveld');\n      // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['atob'] == 'function') {\n      //    return atob(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n                \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        enc = \"\",\n        tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      do { // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n\n        bits = o1 << 16 | o2 << 8 | o3;\n\n        h1 = bits >> 18 & 0x3f;\n        h2 = bits >> 12 & 0x3f;\n        h3 = bits >> 6 & 0x3f;\n        h4 = bits & 0x3f;\n\n        // use hexets to index into b64, and append result to encoded string\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n      } while (i < data.length);\n\n      enc = tmp_arr.join('');\n\n      var r = data.length % 3;\n\n      return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\n    },\n\n    _b64_decode: function base64_decode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Thunder.m\n      // +      input by: Aman Gupta\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Onno Marsman\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +      input by: Brett Zamir (http://brett-zamir.me)\n      // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n      // *     returns 1: 'Kevin van Zonneveld'\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['btoa'] == 'function') {\n      //    return btoa(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n                \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        dec = \"\",\n        tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      data += '';\n\n      do { // unpack four hexets into three octets using index points in b64\n        h1 = b64.indexOf(data.charAt(i++));\n        h2 = b64.indexOf(data.charAt(i++));\n        h3 = b64.indexOf(data.charAt(i++));\n        h4 = b64.indexOf(data.charAt(i++));\n\n        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n\n        o1 = bits >> 16 & 0xff;\n        o2 = bits >> 8 & 0xff;\n        o3 = bits & 0xff;\n\n        if (h3 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1);\n        } else if (h4 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2);\n        } else {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n        }\n      } while (i < data.length);\n\n      dec = tmp_arr.join('');\n\n      return dec;\n    },\n\n    /**\n     * The string representation of this value\n     * @return {String}\n     */\n    toString: function() {\n      return this.value;\n    }\n  };\n\n  /**\n   * Creates a binary value from the given string.\n   *\n   * @param {String} aString        The binary value string\n   * @return {ICAL.Binary}          The binary value instance\n   */\n  Binary.fromString = function(aString) {\n    return new Binary(aString);\n  };\n\n  return Binary;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  /**\n   * @classdesc\n   * This class represents the \"period\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @description\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @class\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   */\n  ICAL.Period = function icalperiod(aData) {\n    this.wrappedJSObject = this;\n\n    if (aData && 'start' in aData) {\n      if (aData.start && !(aData.start instanceof ICAL.Time)) {\n        throw new TypeError('.start must be an instance of ICAL.Time');\n      }\n      this.start = aData.start;\n    }\n\n    if (aData && aData.end && aData.duration) {\n      throw new Error('cannot accept both end and duration');\n    }\n\n    if (aData && 'end' in aData) {\n      if (aData.end && !(aData.end instanceof ICAL.Time)) {\n        throw new TypeError('.end must be an instance of ICAL.Time');\n      }\n      this.end = aData.end;\n    }\n\n    if (aData && 'duration' in aData) {\n      if (aData.duration && !(aData.duration instanceof ICAL.Duration)) {\n        throw new TypeError('.duration must be an instance of ICAL.Duration');\n      }\n      this.duration = aData.duration;\n    }\n  };\n\n  ICAL.Period.prototype = {\n\n    /**\n     * The start of the period\n     * @type {ICAL.Time}\n     */\n    start: null,\n\n    /**\n     * The end of the period\n     * @type {ICAL.Time}\n     */\n    end: null,\n\n    /**\n     * The duration of the period\n     * @type {ICAL.Duration}\n     */\n    duration: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalperiod\"\n     */\n    icalclass: \"icalperiod\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"period\"\n     */\n    icaltype: \"period\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Period}      The cloned object\n     */\n    clone: function() {\n      return ICAL.Period.fromData({\n        start: this.start ? this.start.clone() : null,\n        end: this.end ? this.end.clone() : null,\n        duration: this.duration ? this.duration.clone() : null\n      });\n    },\n\n    /**\n     * Calculates the duration of the period, either directly or by subtracting\n     * start from end date.\n     *\n     * @return {ICAL.Duration}      The calculated duration\n     */\n    getDuration: function duration() {\n      if (this.duration) {\n        return this.duration;\n      } else {\n        return this.end.subtractDate(this.start);\n      }\n    },\n\n    /**\n     * Calculates the end date of the period, either directly or by adding\n     * duration to start date.\n     *\n     * @return {ICAL.Time}          The calculated end date\n     */\n    getEnd: function() {\n      if (this.end) {\n        return this.end;\n      } else {\n        var end = this.start.clone();\n        end.addDuration(this.duration);\n        return end;\n      }\n    },\n\n    /**\n     * The string representation of this period.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.start + \"/\" + (this.end || this.duration);\n    },\n\n    /**\n     * The jCal representation of this period type.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return [this.start.toString(), (this.end || this.duration).toString()];\n    },\n\n    /**\n     * The iCalendar string representation of this period.\n     * @return {String}\n     */\n    toICALString: function() {\n      return this.start.toICALString() + \"/\" +\n             (this.end || this.duration).toICALString();\n    }\n  };\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the passed string.\n   *\n   * @param {String} str            The string to parse\n   * @param {ICAL.Property} prop    The property this period will be on\n   * @return {ICAL.Period}          The created period instance\n   */\n  ICAL.Period.fromString = function fromString(str, prop) {\n    var parts = str.split('/');\n\n    if (parts.length !== 2) {\n      throw new Error(\n        'Invalid string value: \"' + str + '\" must contain a \"/\" char.'\n      );\n    }\n\n    var options = {\n      start: ICAL.Time.fromDateTimeString(parts[0], prop)\n    };\n\n    var end = parts[1];\n\n    if (ICAL.Duration.isValueString(end)) {\n      options.duration = ICAL.Duration.fromString(end);\n    } else {\n      options.end = ICAL.Time.fromDateTimeString(end, prop);\n    }\n\n    return new ICAL.Period(options);\n  };\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the given data object.\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   * @return {ICAL.Period}                  The period instance\n   */\n  ICAL.Period.fromData = function fromData(aData) {\n    return new ICAL.Period(aData);\n  };\n\n  /**\n   * Returns a new period instance from the given jCal data array. The first\n   * member is always the start date string, the second member is either a\n   * duration or end date string.\n   *\n   * @param {Array<String,String>} aData    The jCal data array\n   * @param {ICAL.Property} aProp           The property this jCal data is on\n   * @param {Boolean} aLenient              If true, data value can be both date and date-time\n   * @return {ICAL.Period}                  The period instance\n   */\n  ICAL.Period.fromJSON = function(aData, aProp, aLenient) {\n    function fromDateOrDateTimeString(aValue, aProp) {\n      if (aLenient) {\n        return ICAL.Time.fromString(aValue, aProp);\n      } else {\n        return ICAL.Time.fromDateTimeString(aValue, aProp);\n      }\n    }\n\n    if (ICAL.Duration.isValueString(aData[1])) {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        duration: ICAL.Duration.fromString(aData[1])\n      });\n    } else {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        end: fromDateOrDateTimeString(aData[1], aProp)\n      });\n    }\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  var DURATION_LETTERS = /([PDWHMTS]{1,1})/;\n\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Duration\n   * @param {Object} data               An object with members of the duration\n   * @param {Number} data.weeks         Duration in weeks\n   * @param {Number} data.days          Duration in days\n   * @param {Number} data.hours         Duration in hours\n   * @param {Number} data.minutes       Duration in minutes\n   * @param {Number} data.seconds       Duration in seconds\n   * @param {Boolean} data.isNegative   If true, the duration is negative\n   */\n  ICAL.Duration = function icalduration(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Duration.prototype = {\n    /**\n     * The weeks in this duration\n     * @type {Number}\n     * @default 0\n     */\n    weeks: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    days: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    hours: 0,\n\n    /**\n     * The minutes in this duration\n     * @type {Number}\n     * @default 0\n     */\n    minutes: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Number}\n     * @default 0\n     */\n    seconds: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Boolean}\n     * @default false\n     */\n    isNegative: false,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalduration\"\n     */\n    icalclass: \"icalduration\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"duration\"\n     */\n    icaltype: \"duration\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Duration}      The cloned object\n     */\n    clone: function clone() {\n      return ICAL.Duration.fromData(this);\n    },\n\n    /**\n     * The duration value expressed as a number of seconds.\n     *\n     * @return {Number}             The duration value in seconds\n     */\n    toSeconds: function toSeconds() {\n      var seconds = this.seconds + 60 * this.minutes + 3600 * this.hours +\n                    86400 * this.days + 7 * 86400 * this.weeks;\n      return (this.isNegative ? -seconds : seconds);\n    },\n\n    /**\n     * Reads the passed seconds value into this duration object. Afterwards,\n     * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up\n     * accordingly.\n     *\n     * @param {Number} aSeconds     The duration value in seconds\n     * @return {ICAL.Duration}      Returns this instance\n     */\n    fromSeconds: function fromSeconds(aSeconds) {\n      var secs = Math.abs(aSeconds);\n\n      this.isNegative = (aSeconds < 0);\n      this.days = ICAL.helpers.trunc(secs / 86400);\n\n      // If we have a flat number of weeks, use them.\n      if (this.days % 7 == 0) {\n        this.weeks = this.days / 7;\n        this.days = 0;\n      } else {\n        this.weeks = 0;\n      }\n\n      secs -= (this.days + 7 * this.weeks) * 86400;\n\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n      secs -= this.hours * 3600;\n\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      secs -= this.minutes * 60;\n\n      this.seconds = secs;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData               An object with members of the duration\n     * @param {Number} aData.weeks         Duration in weeks\n     * @param {Number} aData.days          Duration in days\n     * @param {Number} aData.hours         Duration in hours\n     * @param {Number} aData.minutes       Duration in minutes\n     * @param {Number} aData.seconds       Duration in seconds\n     * @param {Boolean} aData.isNegative   If true, the duration is negative\n     */\n    fromData: function fromData(aData) {\n      var propsToCopy = [\"weeks\", \"days\", \"hours\",\n                         \"minutes\", \"seconds\", \"isNegative\"];\n      for (var key in propsToCopy) {\n        /* istanbul ignore if */\n        if (!propsToCopy.hasOwnProperty(key)) {\n          continue;\n        }\n        var prop = propsToCopy[key];\n        if (aData && prop in aData) {\n          this[prop] = aData[prop];\n        } else {\n          this[prop] = 0;\n        }\n      }\n    },\n\n    /**\n     * Resets the duration instance to the default values, i.e. PT0S\n     */\n    reset: function reset() {\n      this.isNegative = false;\n      this.weeks = 0;\n      this.days = 0;\n      this.hours = 0;\n      this.minutes = 0;\n      this.seconds = 0;\n    },\n\n    /**\n     * Compares the duration instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function compare(aOther) {\n      var thisSeconds = this.toSeconds();\n      var otherSeconds = aOther.toSeconds();\n      return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);\n    },\n\n    /**\n     * Normalizes the duration instance. For example, a duration with a value\n     * of 61 seconds will be normalized to 1 minute and 1 second.\n     */\n    normalize: function normalize() {\n      this.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * The string representation of this duration.\n     * @return {String}\n     */\n    toString: function toString() {\n      if (this.toSeconds() == 0) {\n        return \"PT0S\";\n      } else {\n        var str = \"\";\n        if (this.isNegative) str += \"-\";\n        str += \"P\";\n        if (this.weeks) str += this.weeks + \"W\";\n        if (this.days) str += this.days + \"D\";\n\n        if (this.hours || this.minutes || this.seconds) {\n          str += \"T\";\n          if (this.hours) str += this.hours + \"H\";\n          if (this.minutes) str += this.minutes + \"M\";\n          if (this.seconds) str += this.seconds + \"S\";\n        }\n        return str;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this duration.\n     * @return {String}\n     */\n    toICALString: function() {\n      return this.toString();\n    }\n  };\n\n  /**\n   * Returns a new ICAL.Duration instance from the passed seconds value.\n   *\n   * @param {Number} aSeconds       The seconds to create the instance from\n   * @return {ICAL.Duration}        The newly created duration instance\n   */\n  ICAL.Duration.fromSeconds = function icalduration_from_seconds(aSeconds) {\n    return (new ICAL.Duration()).fromSeconds(aSeconds);\n  };\n\n  /**\n   * Internal helper function to handle a chunk of a duration.\n   *\n   * @param {String} letter type of duration chunk\n   * @param {String} number numeric value or -/+\n   * @param {Object} dict target to assign values to\n   */\n  function parseDurationChunk(letter, number, object) {\n    var type;\n    switch (letter) {\n      case 'P':\n        if (number && number === '-') {\n          object.isNegative = true;\n        } else {\n          object.isNegative = false;\n        }\n        // period\n        break;\n      case 'D':\n        type = 'days';\n        break;\n      case 'W':\n        type = 'weeks';\n        break;\n      case 'H':\n        type = 'hours';\n        break;\n      case 'M':\n        type = 'minutes';\n        break;\n      case 'S':\n        type = 'seconds';\n        break;\n      default:\n        // Not a valid chunk\n        return 0;\n    }\n\n    if (type) {\n      if (!number && number !== 0) {\n        throw new Error(\n          'invalid duration value: Missing number before \"' + letter + '\"'\n        );\n      }\n      var num = parseInt(number, 10);\n      if (ICAL.helpers.isStrictlyNaN(num)) {\n        throw new Error(\n          'invalid duration value: Invalid number \"' + number + '\" before \"' + letter + '\"'\n        );\n      }\n      object[type] = num;\n    }\n\n    return 1;\n  }\n\n  /**\n   * Checks if the given string is an iCalendar duration value.\n   *\n   * @param {String} value      The raw ical value\n   * @return {Boolean}          True, if the given value is of the\n   *                              duration ical type\n   */\n  ICAL.Duration.isValueString = function(string) {\n    return (string[0] === 'P' || string[1] === 'P');\n  };\n\n  /**\n   * Creates a new {@link ICAL.Duration} instance from the passed string.\n   *\n   * @param {String} aStr       The string to parse\n   * @return {ICAL.Duration}    The created duration instance\n   */\n  ICAL.Duration.fromString = function icalduration_from_string(aStr) {\n    var pos = 0;\n    var dict = Object.create(null);\n    var chunks = 0;\n\n    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {\n      var type = aStr[pos];\n      var numeric = aStr.substr(0, pos);\n      aStr = aStr.substr(pos + 1);\n\n      chunks += parseDurationChunk(type, numeric, dict);\n    }\n\n    if (chunks < 2) {\n      // There must be at least a chunk with \"P\" and some unit chunk\n      throw new Error(\n        'invalid duration value: Not enough duration components in \"' + aStr + '\"'\n      );\n    }\n\n    return new ICAL.Duration(dict);\n  };\n\n  /**\n   * Creates a new ICAL.Duration instance from the given data object.\n   *\n   * @param {Object} aData               An object with members of the duration\n   * @param {Number} aData.weeks         Duration in weeks\n   * @param {Number} aData.days          Duration in days\n   * @param {Number} aData.hours         Duration in hours\n   * @param {Number} aData.minutes       Duration in minutes\n   * @param {Number} aData.seconds       Duration in seconds\n   * @param {Boolean} aData.isNegative   If true, the duration is negative\n   * @return {ICAL.Duration}             The createad duration instance\n   */\n  ICAL.Duration.fromData = function icalduration_from_data(aData) {\n    return new ICAL.Duration(aData);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2012 */\n\n\n\n(function() {\n  var OPTIONS = [\"tzid\", \"location\", \"tznames\",\n                 \"latitude\", \"longitude\"];\n\n  /**\n   * @classdesc\n   * Timezone representation, created by passing in a tzid and component.\n   *\n   * @example\n   * var vcalendar;\n   * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');\n   * var tzid = timezoneComp.getFirstPropertyValue('tzid');\n   *\n   * var timezone = new ICAL.Timezone({\n   *   component: timezoneComp,\n   *   tzid\n   * });\n   *\n   * @class\n   * @param {ICAL.Component|Object} data options for class\n   * @param {String|ICAL.Component} data.component\n   *        If data is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} data.tzid      The timezone identifier\n   * @param {String} data.location  The timezone locationw\n   * @param {String} data.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} data.latitude  The latitude of the timezone\n   * @param {Number} data.longitude The longitude of the timezone\n   */\n  ICAL.Timezone = function icaltimezone(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Timezone.prototype = {\n\n    /**\n     * Timezone identifier\n     * @type {String}\n     */\n    tzid: \"\",\n\n    /**\n     * Timezone location\n     * @type {String}\n     */\n    location: \"\",\n\n    /**\n     * Alternative timezone name, for the string representation\n     * @type {String}\n     */\n    tznames: \"\",\n\n    /**\n     * The primary latitude for the timezone.\n     * @type {Number}\n     */\n    latitude: 0.0,\n\n    /**\n     * The primary longitude for the timezone.\n     * @type {Number}\n     */\n    longitude: 0.0,\n\n    /**\n     * The vtimezone component for this timezone.\n     * @type {ICAL.Component}\n     */\n    component: null,\n\n    /**\n     * The year this timezone has been expanded to. All timezone transition\n     * dates until this year are known and can be used for calculation\n     *\n     * @private\n     * @type {Number}\n     */\n    expandedUntilYear: 0,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltimezone\"\n     */\n    icalclass: \"icaltimezone\",\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {ICAL.Component|Object} aData options for class\n     * @param {String|ICAL.Component} aData.component\n     *        If aData is a simple object, then this member can be set to either a\n     *        string containing the component data, or an already parsed\n     *        ICAL.Component\n     * @param {String} aData.tzid      The timezone identifier\n     * @param {String} aData.location  The timezone locationw\n     * @param {String} aData.tznames   An alternative string representation of the\n     *                                  timezone\n     * @param {Number} aData.latitude  The latitude of the timezone\n     * @param {Number} aData.longitude The longitude of the timezone\n     */\n    fromData: function fromData(aData) {\n      this.expandedUntilYear = 0;\n      this.changes = [];\n\n      if (aData instanceof ICAL.Component) {\n        // Either a component is passed directly\n        this.component = aData;\n      } else {\n        // Otherwise the component may be in the data object\n        if (aData && \"component\" in aData) {\n          if (typeof aData.component == \"string\") {\n            // If a string was passed, parse it as a component\n            var jCal = ICAL.parse(aData.component);\n            this.component = new ICAL.Component(jCal);\n          } else if (aData.component instanceof ICAL.Component) {\n            // If it was a component already, then just set it\n            this.component = aData.component;\n          } else {\n            // Otherwise just null out the component\n            this.component = null;\n          }\n        }\n\n        // Copy remaining passed properties\n        for (var key in OPTIONS) {\n          /* istanbul ignore else */\n          if (OPTIONS.hasOwnProperty(key)) {\n            var prop = OPTIONS[key];\n            if (aData && prop in aData) {\n              this[prop] = aData[prop];\n            }\n          }\n        }\n      }\n\n      // If we have a component but no TZID, attempt to get it from the\n      // component's properties.\n      if (this.component instanceof ICAL.Component && !this.tzid) {\n        this.tzid = this.component.getFirstPropertyValue('tzid');\n      }\n\n      return this;\n    },\n\n    /**\n     * Finds the utcOffset the given time would occur in this timezone.\n     *\n     * @param {ICAL.Time} tt        The time to check for\n     * @return {Number} utc offset in seconds\n     */\n    utcOffset: function utcOffset(tt) {\n      if (this == ICAL.Timezone.utcTimezone || this == ICAL.Timezone.localTimezone) {\n        return 0;\n      }\n\n      this._ensureCoverage(tt.year);\n\n      if (!this.changes.length) {\n        return 0;\n      }\n\n      var tt_change = {\n        year: tt.year,\n        month: tt.month,\n        day: tt.day,\n        hour: tt.hour,\n        minute: tt.minute,\n        second: tt.second\n      };\n\n      var change_num = this._findNearbyChange(tt_change);\n      var change_num_to_use = -1;\n      var step = 1;\n\n      // TODO: replace with bin search?\n      for (;;) {\n        var change = ICAL.helpers.clone(this.changes[change_num], true);\n        if (change.utcOffset < change.prevUtcOffset) {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);\n        } else {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                          change.prevUtcOffset);\n        }\n\n        var cmp = ICAL.Timezone._compare_change_fn(tt_change, change);\n\n        if (cmp >= 0) {\n          change_num_to_use = change_num;\n        } else {\n          step = -1;\n        }\n\n        if (step == -1 && change_num_to_use != -1) {\n          break;\n        }\n\n        change_num += step;\n\n        if (change_num < 0) {\n          return 0;\n        }\n\n        if (change_num >= this.changes.length) {\n          break;\n        }\n      }\n\n      var zone_change = this.changes[change_num_to_use];\n      var utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;\n\n      if (utcOffset_change < 0 && change_num_to_use > 0) {\n        var tmp_change = ICAL.helpers.clone(zone_change, true);\n        ICAL.Timezone.adjust_change(tmp_change, 0, 0, 0,\n                                        tmp_change.prevUtcOffset);\n\n        if (ICAL.Timezone._compare_change_fn(tt_change, tmp_change) < 0) {\n          var prev_zone_change = this.changes[change_num_to_use - 1];\n\n          var want_daylight = false; // TODO\n\n          if (zone_change.is_daylight != want_daylight &&\n              prev_zone_change.is_daylight == want_daylight) {\n            zone_change = prev_zone_change;\n          }\n        }\n      }\n\n      // TODO return is_daylight?\n      return zone_change.utcOffset;\n    },\n\n    _findNearbyChange: function icaltimezone_find_nearby_change(change) {\n      // find the closest match\n      var idx = ICAL.helpers.binsearchInsert(\n        this.changes,\n        change,\n        ICAL.Timezone._compare_change_fn\n      );\n\n      if (idx >= this.changes.length) {\n        return this.changes.length - 1;\n      }\n\n      return idx;\n    },\n\n    _ensureCoverage: function(aYear) {\n      if (ICAL.Timezone._minimumExpansionYear == -1) {\n        var today = ICAL.Time.now();\n        ICAL.Timezone._minimumExpansionYear = today.year;\n      }\n\n      var changesEndYear = aYear;\n      if (changesEndYear < ICAL.Timezone._minimumExpansionYear) {\n        changesEndYear = ICAL.Timezone._minimumExpansionYear;\n      }\n\n      changesEndYear += ICAL.Timezone.EXTRA_COVERAGE;\n\n      if (changesEndYear > ICAL.Timezone.MAX_YEAR) {\n        changesEndYear = ICAL.Timezone.MAX_YEAR;\n      }\n\n      if (!this.changes.length || this.expandedUntilYear < aYear) {\n        var subcomps = this.component.getAllSubcomponents();\n        var compLen = subcomps.length;\n        var compIdx = 0;\n\n        for (; compIdx < compLen; compIdx++) {\n          this._expandComponent(\n            subcomps[compIdx], changesEndYear, this.changes\n          );\n        }\n\n        this.changes.sort(ICAL.Timezone._compare_change_fn);\n        this.expandedUntilYear = changesEndYear;\n      }\n    },\n\n    _expandComponent: function(aComponent, aYear, changes) {\n      if (!aComponent.hasProperty(\"dtstart\") ||\n          !aComponent.hasProperty(\"tzoffsetto\") ||\n          !aComponent.hasProperty(\"tzoffsetfrom\")) {\n        return null;\n      }\n\n      var dtstart = aComponent.getFirstProperty(\"dtstart\").getFirstValue();\n      var change;\n\n      function convert_tzoffset(offset) {\n        return offset.factor * (offset.hours * 3600 + offset.minutes * 60);\n      }\n\n      function init_changes() {\n        var changebase = {};\n        changebase.is_daylight = (aComponent.name == \"daylight\");\n        changebase.utcOffset = convert_tzoffset(\n          aComponent.getFirstProperty(\"tzoffsetto\").getFirstValue()\n        );\n\n        changebase.prevUtcOffset = convert_tzoffset(\n          aComponent.getFirstProperty(\"tzoffsetfrom\").getFirstValue()\n        );\n\n        return changebase;\n      }\n\n      if (!aComponent.hasProperty(\"rrule\") && !aComponent.hasProperty(\"rdate\")) {\n        change = init_changes();\n        change.year = dtstart.year;\n        change.month = dtstart.month;\n        change.day = dtstart.day;\n        change.hour = dtstart.hour;\n        change.minute = dtstart.minute;\n        change.second = dtstart.second;\n\n        ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                        -change.prevUtcOffset);\n        changes.push(change);\n      } else {\n        var props = aComponent.getAllProperties(\"rdate\");\n        for (var rdatekey in props) {\n          /* istanbul ignore if */\n          if (!props.hasOwnProperty(rdatekey)) {\n            continue;\n          }\n          var rdate = props[rdatekey];\n          var time = rdate.getFirstValue();\n          change = init_changes();\n\n          change.year = time.year;\n          change.month = time.month;\n          change.day = time.day;\n\n          if (time.isDate) {\n            change.hour = dtstart.hour;\n            change.minute = dtstart.minute;\n            change.second = dtstart.second;\n\n            if (dtstart.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                              -change.prevUtcOffset);\n            }\n          } else {\n            change.hour = time.hour;\n            change.minute = time.minute;\n            change.second = time.second;\n\n            if (time.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                              -change.prevUtcOffset);\n            }\n          }\n\n          changes.push(change);\n        }\n\n        var rrule = aComponent.getFirstProperty(\"rrule\");\n\n        if (rrule) {\n          rrule = rrule.getFirstValue();\n          change = init_changes();\n\n          if (rrule.until && rrule.until.zone == ICAL.Timezone.utcTimezone) {\n            rrule.until.adjust(0, 0, 0, change.prevUtcOffset);\n            rrule.until.zone = ICAL.Timezone.localTimezone;\n          }\n\n          var iterator = rrule.iterator(dtstart);\n\n          var occ;\n          while ((occ = iterator.next())) {\n            change = init_changes();\n            if (occ.year > aYear || !occ) {\n              break;\n            }\n\n            change.year = occ.year;\n            change.month = occ.month;\n            change.day = occ.day;\n            change.hour = occ.hour;\n            change.minute = occ.minute;\n            change.second = occ.second;\n            change.isDate = occ.isDate;\n\n            ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                            -change.prevUtcOffset);\n            changes.push(change);\n          }\n        }\n      }\n\n      return changes;\n    },\n\n    /**\n     * The string representation of this timezone.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.tznames ? this.tznames : this.tzid);\n    }\n  };\n\n  ICAL.Timezone._compare_change_fn = function icaltimezone_compare_change_fn(a, b) {\n    if (a.year < b.year) return -1;\n    else if (a.year > b.year) return 1;\n\n    if (a.month < b.month) return -1;\n    else if (a.month > b.month) return 1;\n\n    if (a.day < b.day) return -1;\n    else if (a.day > b.day) return 1;\n\n    if (a.hour < b.hour) return -1;\n    else if (a.hour > b.hour) return 1;\n\n    if (a.minute < b.minute) return -1;\n    else if (a.minute > b.minute) return 1;\n\n    if (a.second < b.second) return -1;\n    else if (a.second > b.second) return 1;\n\n    return 0;\n  };\n\n  /**\n   * Convert the date/time from one zone to the next.\n   *\n   * @param {ICAL.Time} tt                  The time to convert\n   * @param {ICAL.Timezone} from_zone       The source zone to convert from\n   * @param {ICAL.Timezone} to_zone         The target zone to convert to\n   * @return {ICAL.Time}                    The converted date/time object\n   */\n  ICAL.Timezone.convert_time = function icaltimezone_convert_time(tt, from_zone, to_zone) {\n    if (tt.isDate ||\n        from_zone.tzid == to_zone.tzid ||\n        from_zone == ICAL.Timezone.localTimezone ||\n        to_zone == ICAL.Timezone.localTimezone) {\n      tt.zone = to_zone;\n      return tt;\n    }\n\n    var utcOffset = from_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, - utcOffset);\n\n    utcOffset = to_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, utcOffset);\n\n    return null;\n  };\n\n  /**\n   * Creates a new ICAL.Timezone instance from the passed data object.\n   *\n   * @param {ICAL.Component|Object} aData options for class\n   * @param {String|ICAL.Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  ICAL.Timezone.fromData = function icaltimezone_fromData(aData) {\n    var tt = new ICAL.Timezone();\n    return tt.fromData(aData);\n  };\n\n  /**\n   * The instance describing the UTC timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n  ICAL.Timezone.utcTimezone = ICAL.Timezone.fromData({\n    tzid: \"UTC\"\n  });\n\n  /**\n   * The instance describing the local timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n  ICAL.Timezone.localTimezone = ICAL.Timezone.fromData({\n    tzid: \"floating\"\n  });\n\n  /**\n   * Adjust a timezone change object.\n   * @private\n   * @param {Object} change     The timezone change object\n   * @param {Number} days       The extra amount of days\n   * @param {Number} hours      The extra amount of hours\n   * @param {Number} minutes    The extra amount of minutes\n   * @param {Number} seconds    The extra amount of seconds\n   */\n  ICAL.Timezone.adjust_change = function icaltimezone_adjust_change(change, days, hours, minutes, seconds) {\n    return ICAL.Time.prototype.adjust.call(\n      change,\n      days,\n      hours,\n      minutes,\n      seconds,\n      change\n    );\n  };\n\n  ICAL.Timezone._minimumExpansionYear = -1;\n  ICAL.Timezone.MAX_YEAR = 2035; // TODO this is because of time_t, which we don't need. Still usefull?\n  ICAL.Timezone.EXTRA_COVERAGE = 5;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.TimezoneService = (function() {\n  var zones;\n\n  /**\n   * @classdesc\n   * Singleton class to contain timezones.  Right now it is all manual registry in\n   * the future we may use this class to download timezone information or handle\n   * loading pre-expanded timezones.\n   *\n   * @namespace\n   * @alias ICAL.TimezoneService\n   */\n  var TimezoneService = {\n    get count() {\n      return Object.keys(zones).length;\n    },\n\n    reset: function() {\n      zones = Object.create(null);\n      var utc = ICAL.Timezone.utcTimezone;\n\n      zones.Z = utc;\n      zones.UTC = utc;\n      zones.GMT = utc;\n    },\n\n    /**\n     * Checks if timezone id has been registered.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {Boolean}        False, when not present\n     */\n    has: function(tzid) {\n      return !!zones[tzid];\n    },\n\n    /**\n     * Returns a timezone by its tzid if present.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The timezone, or null if not found\n     */\n    get: function(tzid) {\n      return zones[tzid];\n    },\n\n    /**\n     * Registers a timezone object or component.\n     *\n     * @param {String=} name\n     *        The name of the timezone. Defaults to the component's TZID if not\n     *        passed.\n     * @param {ICAL.Component|ICAL.Timezone} zone\n     *        The initialized zone or vtimezone.\n     */\n    register: function(name, timezone) {\n      if (name instanceof ICAL.Component) {\n        if (name.name === 'vtimezone') {\n          timezone = new ICAL.Timezone(name);\n          name = timezone.tzid;\n        }\n      }\n\n      if (timezone instanceof ICAL.Timezone) {\n        zones[name] = timezone;\n      } else {\n        throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');\n      }\n    },\n\n    /**\n     * Removes a timezone by its tzid from the list.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The removed timezone, or null if not registered\n     */\n    remove: function(tzid) {\n      return (delete zones[tzid]);\n    }\n  };\n\n  // initialize defaults\n  TimezoneService.reset();\n\n  return TimezoneService;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n\n  /**\n   * @classdesc\n   * iCalendar Time representation (similar to JS Date object).  Fully\n   * independent of system (OS) timezone / time.  Unlike JS Date, the month\n   * January is 1, not zero.\n   *\n   * @example\n   * var time = new ICAL.Time({\n   *   year: 2012,\n   *   month: 10,\n   *   day: 11\n   *   minute: 0,\n   *   second: 0,\n   *   isDate: false\n   * });\n   *\n   *\n   * @alias ICAL.Time\n   * @class\n   * @param {Object} data           Time initialization\n   * @param {Number=} data.year     The year for this date\n   * @param {Number=} data.month    The month for this date\n   * @param {Number=} data.day      The day for this date\n   * @param {Number=} data.hour     The hour for this date\n   * @param {Number=} data.minute   The minute for this date\n   * @param {Number=} data.second   The second for this date\n   * @param {Boolean=} data.isDate  If true, the instance represents a date (as\n   *                                  opposed to a date-time)\n   * @param {ICAL.Timezone} zone timezone this position occurs in\n   */\n  ICAL.Time = function icaltime(data, zone) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n\n    /* time defaults */\n    time.year = 0;\n    time.month = 1;\n    time.day = 1;\n    time.hour = 0;\n    time.minute = 0;\n    time.second = 0;\n    time.isDate = false;\n\n    this.fromData(data, zone);\n  };\n\n  ICAL.Time._dowCache = {};\n  ICAL.Time._wnCache = {};\n\n  ICAL.Time.prototype = {\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltime\"\n     */\n    icalclass: \"icaltime\",\n    _cachedUnixTime: null,\n\n    /**\n     * The type name, to be used in the jCal object. This value may change and\n     * is strictly defined by the {@link ICAL.Time#isDate isDate} member.\n     * @readonly\n     * @type {String}\n     * @default \"date-time\"\n     */\n    get icaltype() {\n      return this.isDate ? 'date' : 'date-time';\n    },\n\n    /**\n     * The timezone for this time.\n     * @type {ICAL.Timezone}\n     */\n    zone: null,\n\n    /**\n     * Internal uses to indicate that a change has been made and the next read\n     * operation must attempt to normalize the value (for example changing the\n     * day to 33).\n     *\n     * @type {Boolean}\n     * @private\n     */\n    _pendingNormalization: false,\n\n    /**\n     * Returns a clone of the time object.\n     *\n     * @return {ICAL.Time}              The cloned object\n     */\n    clone: function() {\n      return new ICAL.Time(this._time, this.zone);\n    },\n\n    /**\n     * Reset the time instance to epoch time\n     */\n    reset: function icaltime_reset() {\n      this.fromData(ICAL.Time.epochTime);\n      this.zone = ICAL.Timezone.utcTimezone;\n    },\n\n    /**\n     * Reset the time instance to the given date/time values.\n     *\n     * @param {Number} year             The year to set\n     * @param {Number} month            The month to set\n     * @param {Number} day              The day to set\n     * @param {Number} hour             The hour to set\n     * @param {Number} minute           The minute to set\n     * @param {Number} second           The second to set\n     * @param {ICAL.Timezone} timezone  The timezone to set\n     */\n    resetTo: function icaltime_resetTo(year, month, day,\n                                       hour, minute, second, timezone) {\n      this.fromData({\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute,\n        second: second,\n        zone: timezone\n      });\n    },\n\n    /**\n     * Set up the current instance from the Javascript date value.\n     *\n     * @param {?Date} aDate     The Javascript Date to read, or null to reset\n     * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n     */\n    fromJSDate: function icaltime_fromJSDate(aDate, useUTC) {\n      if (!aDate) {\n        this.reset();\n      } else {\n        if (useUTC) {\n          this.zone = ICAL.Timezone.utcTimezone;\n          this.year = aDate.getUTCFullYear();\n          this.month = aDate.getUTCMonth() + 1;\n          this.day = aDate.getUTCDate();\n          this.hour = aDate.getUTCHours();\n          this.minute = aDate.getUTCMinutes();\n          this.second = aDate.getUTCSeconds();\n        } else {\n          this.zone = ICAL.Timezone.localTimezone;\n          this.year = aDate.getFullYear();\n          this.month = aDate.getMonth() + 1;\n          this.day = aDate.getDate();\n          this.hour = aDate.getHours();\n          this.minute = aDate.getMinutes();\n          this.second = aDate.getSeconds();\n        }\n      }\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData            Time initialization\n     * @param {Number=} aData.year      The year for this date\n     * @param {Number=} aData.month     The month for this date\n     * @param {Number=} aData.day       The day for this date\n     * @param {Number=} aData.hour      The hour for this date\n     * @param {Number=} aData.minute    The minute for this date\n     * @param {Number=} aData.second    The second for this date\n     * @param {Boolean=} aData.isDate   If true, the instance represents a date\n     *                                    (as opposed to a date-time)\n     * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n     */\n    fromData: function fromData(aData, aZone) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (Object.prototype.hasOwnProperty.call(aData, key)) {\n            // ical type cannot be set\n            if (key === 'icaltype') continue;\n            this[key] = aData[key];\n          }\n        }\n      }\n\n      if (aZone) {\n        this.zone = aZone;\n      }\n\n      if (aData && !(\"isDate\" in aData)) {\n        this.isDate = !(\"hour\" in aData);\n      } else if (aData && (\"isDate\" in aData)) {\n        this.isDate = aData.isDate;\n      }\n\n      if (aData && \"timezone\" in aData) {\n        var zone = ICAL.TimezoneService.get(\n          aData.timezone\n        );\n\n        this.zone = zone || ICAL.Timezone.localTimezone;\n      }\n\n      if (aData && \"zone\" in aData) {\n        this.zone = aData.zone;\n      }\n\n      if (!this.zone) {\n        this.zone = ICAL.Timezone.localTimezone;\n      }\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Calculate the day of week.\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time.weekDay}\n     */\n    dayOfWeek: function icaltime_dayOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var dowCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + firstDow;\n      if (dowCacheKey in ICAL.Time._dowCache) {\n        return ICAL.Time._dowCache[dowCacheKey];\n      }\n\n      // Using Zeller's algorithm\n      var q = this.day;\n      var m = this.month + (this.month < 3 ? 12 : 0);\n      var Y = this.year - (this.month < 3 ? 1 : 0);\n\n      var h = (q + Y + ICAL.helpers.trunc(((m + 1) * 26) / 10) + ICAL.helpers.trunc(Y / 4));\n      /* istanbul ignore else */\n      if (true /* gregorian */) {\n        h += ICAL.helpers.trunc(Y / 100) * 6 + ICAL.helpers.trunc(Y / 400);\n      } else {\n        h += 5;\n      }\n\n      // Normalize to 1 = wkst\n      h = ((h + 7 - firstDow) % 7) + 1;\n      ICAL.Time._dowCache[dowCacheKey] = h;\n      return h;\n    },\n\n    /**\n     * Calculate the day of year.\n     * @return {Number}\n     */\n    dayOfYear: function dayOfYear() {\n      var is_leap = (ICAL.Time.isLeapYear(this.year) ? 1 : 0);\n      var diypm = ICAL.Time.daysInYearPassedMonth;\n      return diypm[is_leap][this.month - 1] + this.day;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * week. The resulting ICAL.Time instance is of icaltype date, even if this\n     * is a date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The start of the week (cloned)\n     */\n    startOfWeek: function startOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day -= ((this.dayOfWeek() + 7 - firstDow) % 7);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the week.\n     * The resulting ICAL.Time instance is of icaltype date, even if this is a\n     * date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The end of the week (cloned)\n     */\n    endOfWeek: function endOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day += (7 - this.dayOfWeek() + firstDow - ICAL.Time.SUNDAY) % 7;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * month. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the month (cloned)\n     */\n    startOfMonth: function startOfMonth() {\n      var result = this.clone();\n      result.day = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * month.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the month (cloned)\n     */\n    endOfMonth: function endOfMonth() {\n      var result = this.clone();\n      result.day = ICAL.Time.daysInMonth(result.month, result.year);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * year. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the year (cloned)\n     */\n    startOfYear: function startOfYear() {\n      var result = this.clone();\n      result.day = 1;\n      result.month = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * year.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the year (cloned)\n     */\n    endOfYear: function endOfYear() {\n      var result = this.clone();\n      result.day = 31;\n      result.month = 12;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * First calculates the start of the week, then returns the day of year for\n     * this date. If the day falls into the previous year, the day is zero or negative.\n     *\n     * @param {ICAL.Time.weekDay=} aFirstDayOfWeek\n     *        The week start weekday, defaults to SUNDAY\n     * @return {Number}     The calculated day of year\n     */\n    startDoyWeek: function startDoyWeek(aFirstDayOfWeek) {\n      var firstDow = aFirstDayOfWeek || ICAL.Time.SUNDAY;\n      var delta = this.dayOfWeek() - firstDow;\n      if (delta < 0) delta += 7;\n      return this.dayOfYear() - delta;\n    },\n\n    /**\n     * Get the dominical letter for the current year. Letters range from A - G\n     * for common years, and AG to GF for leap years.\n     *\n     * @param {Number} yr           The year to retrieve the letter for\n     * @return {String}             The dominical letter.\n     */\n    getDominicalLetter: function() {\n      return ICAL.Time.getDominicalLetter(this.year);\n    },\n\n    /**\n     * Finds the nthWeekDay relative to the current month (not day).  The\n     * returned value is a day relative the month that this month belongs to so\n     * 1 would indicate the first of the month and 40 would indicate a day in\n     * the following month.\n     *\n     * @param {Number} aDayOfWeek   Day of the week see the day name constants\n     * @param {Number} aPos         Nth occurrence of a given week day values\n     *        of 1 and 0 both indicate the first weekday of that type. aPos may\n     *        be either positive or negative\n     *\n     * @return {Number} numeric value indicating a day relative\n     *                   to the current month of this time object\n     */\n    nthWeekDay: function icaltime_nthWeekDay(aDayOfWeek, aPos) {\n      var daysInMonth = ICAL.Time.daysInMonth(this.month, this.year);\n      var weekday;\n      var pos = aPos;\n\n      var start = 0;\n\n      var otherDay = this.clone();\n\n      if (pos >= 0) {\n        otherDay.day = 1;\n\n        // because 0 means no position has been given\n        // 1 and 0 indicate the same day.\n        if (pos != 0) {\n          // remove the extra numeric value\n          pos--;\n        }\n\n        // set current start offset to current day.\n        start = otherDay.day;\n\n        // find the current day of week\n        var startDow = otherDay.dayOfWeek();\n\n        // calculate the difference between current\n        // day of the week and desired day of the week\n        var offset = aDayOfWeek - startDow;\n\n\n        // if the offset goes into the past\n        // week we add 7 so it goes into the next\n        // week. We only want to go forward in time here.\n        if (offset < 0)\n          // this is really important otherwise we would\n          // end up with dates from in the past.\n          offset += 7;\n\n        // add offset to start so start is the same\n        // day of the week as the desired day of week.\n        start += offset;\n\n        // because we are going to add (and multiply)\n        // the numeric value of the day we subtract it\n        // from the start position so not to add it twice.\n        start -= aDayOfWeek;\n\n        // set week day\n        weekday = aDayOfWeek;\n      } else {\n\n        // then we set it to the last day in the current month\n        otherDay.day = daysInMonth;\n\n        // find the ends weekday\n        var endDow = otherDay.dayOfWeek();\n\n        pos++;\n\n        weekday = (endDow - aDayOfWeek);\n\n        if (weekday < 0) {\n          weekday += 7;\n        }\n\n        weekday = daysInMonth - weekday;\n      }\n\n      weekday += pos * 7;\n\n      return start + weekday;\n    },\n\n    /**\n     * Checks if current time is the nth weekday, relative to the current\n     * month.  Will always return false when rule resolves outside of current\n     * month.\n     *\n     * @param {ICAL.Time.weekDay} aDayOfWeek       Day of week to check\n     * @param {Number} aPos                        Relative position\n     * @return {Boolean}                           True, if it is the nth weekday\n     */\n    isNthWeekDay: function(aDayOfWeek, aPos) {\n      var dow = this.dayOfWeek();\n\n      if (aPos === 0 && dow === aDayOfWeek) {\n        return true;\n      }\n\n      // get pos\n      var day = this.nthWeekDay(aDayOfWeek, aPos);\n\n      if (day === this.day) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Calculates the ISO 8601 week number. The first week of a year is the\n     * week that contains the first Thursday. The year can have 53 weeks, if\n     * January 1st is a Friday.\n     *\n     * Note there are regions where the first week of the year is the one that\n     * starts on January 1st, which may offset the week number. Also, if a\n     * different week start is specified, this will also affect the week\n     * number.\n     *\n     * @see ICAL.Time.weekOneStarts\n     * @param {ICAL.Time.weekDay} aWeekStart        The weekday the week starts with\n     * @return {Number}                             The ISO week number\n     */\n    weekNumber: function weekNumber(aWeekStart) {\n      var wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;\n      if (wnCacheKey in ICAL.Time._wnCache) {\n        return ICAL.Time._wnCache[wnCacheKey];\n      }\n      // This function courtesty of Julian Bucknall, published under the MIT license\n      // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html\n      // plus some fixes to be able to use different week starts.\n      var week1;\n\n      var dt = this.clone();\n      dt.isDate = true;\n      var isoyear = this.year;\n\n      if (dt.month == 12 && dt.day > 25) {\n        week1 = ICAL.Time.weekOneStarts(isoyear + 1, aWeekStart);\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        } else {\n          isoyear++;\n        }\n      } else {\n        week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(--isoyear, aWeekStart);\n        }\n      }\n\n      var daysBetween = (dt.subtractDate(week1).toSeconds() / 86400);\n      var answer = ICAL.helpers.trunc(daysBetween / 7) + 1;\n      ICAL.Time._wnCache[wnCacheKey] = answer;\n      return answer;\n    },\n\n    /**\n     * Adds the duration to the current time. The instance is modified in\n     * place.\n     *\n     * @param {ICAL.Duration} aDuration         The duration to add\n     */\n    addDuration: function icaltime_add(aDuration) {\n      var mult = (aDuration.isNegative ? -1 : 1);\n\n      // because of the duration optimizations it is much\n      // more efficient to grab all the values up front\n      // then set them directly (which will avoid a normalization call).\n      // So we don't actually normalize until we need it.\n      var second = this.second;\n      var minute = this.minute;\n      var hour = this.hour;\n      var day = this.day;\n\n      second += mult * aDuration.seconds;\n      minute += mult * aDuration.minutes;\n      hour += mult * aDuration.hours;\n      day += mult * aDuration.days;\n      day += mult * 7 * aDuration.weeks;\n\n      this.second = second;\n      this.minute = minute;\n      this.hour = hour;\n      this.day = day;\n\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Subtract the date details (_excluding_ timezone).  Useful for finding\n     * the relative difference between two time objects excluding their\n     * timezone differences.\n     *\n     * @param {ICAL.Time} aDate     The date to substract\n     * @return {ICAL.Duration}      The difference as a duration\n     */\n    subtractDate: function icaltime_subtract(aDate) {\n      var unixTime = this.toUnixTime() + this.utcOffset();\n      var other = aDate.toUnixTime() + aDate.utcOffset();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Subtract the date details, taking timezones into account.\n     *\n     * @param {ICAL.Time} aDate  The date to subtract\n     * @return {ICAL.Duration}  The difference in duration\n     */\n    subtractDateTz: function icaltime_subtract_abs(aDate) {\n      var unixTime = this.toUnixTime();\n      var other = aDate.toUnixTime();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Compares the ICAL.Time instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toUnixTime();\n      var b = other.toUnixTime();\n\n      if (a > b) return 1;\n      if (b > a) return -1;\n      return 0;\n    },\n\n    /**\n     * Compares only the date part of this instance with another one.\n     *\n     * @param {ICAL.Duration} other         The instance to compare with\n     * @param {ICAL.Timezone} tz            The timezone to compare in\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compareDateOnlyTz: function icaltime_compareDateOnlyTz(other, tz) {\n      function cmp(attr) {\n        return ICAL.Time._cmp_attr(a, b, attr);\n      }\n      var a = this.convertToZone(tz);\n      var b = other.convertToZone(tz);\n      var rc = 0;\n\n      if ((rc = cmp(\"year\")) != 0) return rc;\n      if ((rc = cmp(\"month\")) != 0) return rc;\n      if ((rc = cmp(\"day\")) != 0) return rc;\n\n      return rc;\n    },\n\n    /**\n     * Convert the instance into another timezone. The returned ICAL.Time\n     * instance is always a copy.\n     *\n     * @param {ICAL.Timezone} zone      The zone to convert to\n     * @return {ICAL.Time}              The copy, converted to the zone\n     */\n    convertToZone: function convertToZone(zone) {\n      var copy = this.clone();\n      var zone_equals = (this.zone.tzid == zone.tzid);\n\n      if (!this.isDate && !zone_equals) {\n        ICAL.Timezone.convert_time(copy, this.zone, zone);\n      }\n\n      copy.zone = zone;\n      return copy;\n    },\n\n    /**\n     * Calculates the UTC offset of the current date/time in the timezone it is\n     * in.\n     *\n     * @return {Number}     UTC offset in seconds\n     */\n    utcOffset: function utc_offset() {\n      if (this.zone == ICAL.Timezone.localTimezone ||\n          this.zone == ICAL.Timezone.utcTimezone) {\n        return 0;\n      } else {\n        return this.zone.utcOffset(this);\n      }\n    },\n\n    /**\n     * Returns an RFC 5545 compliant ical representation of this object.\n     *\n     * @return {String} ical date/date-time\n     */\n    toICALString: function() {\n      var string = this.toString();\n\n      if (string.length > 10) {\n        return ICAL.design.icalendar.value['date-time'].toICAL(string);\n      } else {\n        return ICAL.design.icalendar.value.date.toICAL(string);\n      }\n    },\n\n    /**\n     * The string representation of this date/time, in jCal form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var result = this.year + '-' +\n                   ICAL.helpers.pad2(this.month) + '-' +\n                   ICAL.helpers.pad2(this.day);\n\n      if (!this.isDate) {\n          result += 'T' + ICAL.helpers.pad2(this.hour) + ':' +\n                    ICAL.helpers.pad2(this.minute) + ':' +\n                    ICAL.helpers.pad2(this.second);\n\n        if (this.zone === ICAL.Timezone.utcTimezone) {\n          result += 'Z';\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Converts the current instance to a Javascript date\n     * @return {Date}\n     */\n    toJSDate: function toJSDate() {\n      if (this.zone == ICAL.Timezone.localTimezone) {\n        if (this.isDate) {\n          return new Date(this.year, this.month - 1, this.day);\n        } else {\n          return new Date(this.year, this.month - 1, this.day,\n                          this.hour, this.minute, this.second, 0);\n        }\n      } else {\n        return new Date(this.toUnixTime() * 1000);\n      }\n    },\n\n    _normalize: function icaltime_normalize() {\n      var isDate = this._time.isDate;\n      if (this._time.isDate) {\n        this._time.hour = 0;\n        this._time.minute = 0;\n        this._time.second = 0;\n      }\n      this.adjust(0, 0, 0, 0);\n\n      return this;\n    },\n\n    /**\n     * Adjust the date/time by the given offset\n     *\n     * @param {Number} aExtraDays       The extra amount of days\n     * @param {Number} aExtraHours      The extra amount of hours\n     * @param {Number} aExtraMinutes    The extra amount of minutes\n     * @param {Number} aExtraSeconds    The extra amount of seconds\n     * @param {Number=} aTime           The time to adjust, defaults to the\n     *                                    current instance.\n     */\n    adjust: function icaltime_adjust(aExtraDays, aExtraHours,\n                                     aExtraMinutes, aExtraSeconds, aTime) {\n\n      var minutesOverflow, hoursOverflow,\n          daysOverflow = 0, yearsOverflow = 0;\n\n      var second, minute, hour, day;\n      var daysInMonth;\n\n      var time = aTime || this._time;\n\n      if (!time.isDate) {\n        second = time.second + aExtraSeconds;\n        time.second = second % 60;\n        minutesOverflow = ICAL.helpers.trunc(second / 60);\n        if (time.second < 0) {\n          time.second += 60;\n          minutesOverflow--;\n        }\n\n        minute = time.minute + aExtraMinutes + minutesOverflow;\n        time.minute = minute % 60;\n        hoursOverflow = ICAL.helpers.trunc(minute / 60);\n        if (time.minute < 0) {\n          time.minute += 60;\n          hoursOverflow--;\n        }\n\n        hour = time.hour + aExtraHours + hoursOverflow;\n\n        time.hour = hour % 24;\n        daysOverflow = ICAL.helpers.trunc(hour / 24);\n        if (time.hour < 0) {\n          time.hour += 24;\n          daysOverflow--;\n        }\n      }\n\n\n      // Adjust month and year first, because we need to know what month the day\n      // is in before adjusting it.\n      if (time.month > 12) {\n        yearsOverflow = ICAL.helpers.trunc((time.month - 1) / 12);\n      } else if (time.month < 1) {\n        yearsOverflow = ICAL.helpers.trunc(time.month / 12) - 1;\n      }\n\n      time.year += yearsOverflow;\n      time.month -= 12 * yearsOverflow;\n\n      // Now take care of the days (and adjust month if needed)\n      day = time.day + aExtraDays + daysOverflow;\n\n      if (day > 0) {\n        for (;;) {\n          daysInMonth = ICAL.Time.daysInMonth(time.month, time.year);\n          if (day <= daysInMonth) {\n            break;\n          }\n\n          time.month++;\n          if (time.month > 12) {\n            time.year++;\n            time.month = 1;\n          }\n\n          day -= daysInMonth;\n        }\n      } else {\n        while (day <= 0) {\n          if (time.month == 1) {\n            time.year--;\n            time.month = 12;\n          } else {\n            time.month--;\n          }\n\n          day += ICAL.Time.daysInMonth(time.month, time.year);\n        }\n      }\n\n      time.day = day;\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance from unix time, the number of seconds since\n     * January 1st, 1970.\n     *\n     * @param {Number} seconds      The seconds to set up with\n     */\n    fromUnixTime: function fromUnixTime(seconds) {\n      this.zone = ICAL.Timezone.utcTimezone;\n      var epoch = ICAL.Time.epochTime.clone();\n      epoch.adjust(0, 0, 0, seconds);\n\n      this.year = epoch.year;\n      this.month = epoch.month;\n      this.day = epoch.day;\n      this.hour = epoch.hour;\n      this.minute = epoch.minute;\n      this.second = Math.floor(epoch.second);\n\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Converts the current instance to seconds since January 1st 1970.\n     *\n     * @return {Number}         Seconds since 1970\n     */\n    toUnixTime: function toUnixTime() {\n      if (this._cachedUnixTime !== null) {\n        return this._cachedUnixTime;\n      }\n      var offset = this.utcOffset();\n\n      // we use the offset trick to ensure\n      // that we are getting the actual UTC time\n      var ms = Date.UTC(\n        this.year,\n        this.month - 1,\n        this.day,\n        this.hour,\n        this.minute,\n        this.second - offset\n      );\n\n      // seconds\n      this._cachedUnixTime = ms / 1000;\n      return this._cachedUnixTime;\n    },\n\n    /**\n     * Converts time to into Object which can be serialized then re-created\n     * using the constructor.\n     *\n     * @example\n     * // toJSON will automatically be called\n     * var json = JSON.stringify(mytime);\n     *\n     * var deserialized = JSON.parse(json);\n     *\n     * var time = new ICAL.Time(deserialized);\n     *\n     * @return {Object}\n     */\n    toJSON: function() {\n      var copy = [\n        'year',\n        'month',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'isDate'\n      ];\n\n      var result = Object.create(null);\n\n      var i = 0;\n      var len = copy.length;\n      var prop;\n\n      for (; i < len; i++) {\n        prop = copy[i];\n        result[prop] = this[prop];\n      }\n\n      if (this.zone) {\n        result.timezone = this.zone.tzid;\n      }\n\n      return result;\n    }\n\n  };\n\n  (function setupNormalizeAttributes() {\n    // This needs to run before any instances are created!\n    function defineAttr(attr) {\n      Object.defineProperty(ICAL.Time.prototype, attr, {\n        get: function getTimeAttr() {\n          if (this._pendingNormalization) {\n            this._normalize();\n            this._pendingNormalization = false;\n          }\n\n          return this._time[attr];\n        },\n        set: function setTimeAttr(val) {\n          // Check if isDate will be set and if was not set to normalize date.\n          // This avoids losing days when seconds, minutes and hours are zeroed\n          // what normalize will do when time is a date.\n          if (attr === \"isDate\" && val && !this._time.isDate) {\n            this.adjust(0, 0, 0, 0);\n          }\n          this._cachedUnixTime = null;\n          this._pendingNormalization = true;\n          this._time[attr] = val;\n\n          return val;\n        }\n      });\n\n    }\n\n    /* istanbul ignore else */\n    if (\"defineProperty\" in Object) {\n      defineAttr(\"year\");\n      defineAttr(\"month\");\n      defineAttr(\"day\");\n      defineAttr(\"hour\");\n      defineAttr(\"minute\");\n      defineAttr(\"second\");\n      defineAttr(\"isDate\");\n    }\n  })();\n\n  /**\n   * Returns the days in the given month\n   *\n   * @param {Number} month      The month to check\n   * @param {Number} year       The year to check\n   * @return {Number}           The number of days in the month\n   */\n  ICAL.Time.daysInMonth = function icaltime_daysInMonth(month, year) {\n    var _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var days = 30;\n\n    if (month < 1 || month > 12) return days;\n\n    days = _daysInMonth[month];\n\n    if (month == 2) {\n      days += ICAL.Time.isLeapYear(year);\n    }\n\n    return days;\n  };\n\n  /**\n   * Checks if the year is a leap year\n   *\n   * @param {Number} year       The year to check\n   * @return {Boolean}          True, if the year is a leap year\n   */\n  ICAL.Time.isLeapYear = function isLeapYear(year) {\n    if (year <= 1752) {\n      return ((year % 4) == 0);\n    } else {\n      return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0));\n    }\n  };\n\n  /**\n   * Create a new ICAL.Time from the day of year and year. The date is returned\n   * in floating timezone.\n   *\n   * @param {Number} aDayOfYear     The day of year\n   * @param {Number} aYear          The year to create the instance in\n   * @return {ICAL.Time}            The created instance with the calculated date\n   */\n  ICAL.Time.fromDayOfYear = function icaltime_fromDayOfYear(aDayOfYear, aYear) {\n    var year = aYear;\n    var doy = aDayOfYear;\n    var tt = new ICAL.Time();\n    tt.auto_normalize = false;\n    var is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n\n    if (doy < 1) {\n      year--;\n      is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n      doy += ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      return ICAL.Time.fromDayOfYear(doy, year);\n    } else if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][12]) {\n      is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n      doy -= ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      year++;\n      return ICAL.Time.fromDayOfYear(doy, year);\n    }\n\n    tt.year = year;\n    tt.isDate = true;\n\n    for (var month = 11; month >= 0; month--) {\n      if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][month]) {\n        tt.month = month + 1;\n        tt.day = doy - ICAL.Time.daysInYearPassedMonth[is_leap][month];\n        break;\n      }\n    }\n\n    tt.auto_normalize = true;\n    return tt;\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @deprecated                Use {@link ICAL.Time.fromDateString} instead\n   * @param {String} str        The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n  ICAL.Time.fromStringv2 = function fromString(str) {\n    return new ICAL.Time({\n      year: parseInt(str.substr(0, 4), 10),\n      month: parseInt(str.substr(5, 2), 10),\n      day: parseInt(str.substr(8, 2), 10),\n      isDate: true\n    });\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @param {String} aValue     The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n  ICAL.Time.fromDateString = function(aValue) {\n    // Dates should have no timezone.\n    // Google likes to sometimes specify Z on dates\n    // we specifically ignore that to avoid issues.\n\n    // YYYY-MM-DD\n    // 2012-10-10\n    return new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      isDate: true\n    });\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date-time string, e.g\n   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up\n   * from the property's TZID parameter.\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n  ICAL.Time.fromDateTimeString = function(aValue, prop) {\n    if (aValue.length < 19) {\n      throw new Error(\n        'invalid date-time value: \"' + aValue + '\"'\n      );\n    }\n\n    var zone;\n\n    if (aValue[19] && aValue[19] === 'Z') {\n      zone = 'Z';\n    } else if (prop) {\n      zone = prop.getParameter('tzid');\n    }\n\n    // 2012-10-10T10:10:10(Z)?\n    var time = new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      hour: ICAL.helpers.strictParseInt(aValue.substr(11, 2)),\n      minute: ICAL.helpers.strictParseInt(aValue.substr(14, 2)),\n      second: ICAL.helpers.strictParseInt(aValue.substr(17, 2)),\n      timezone: zone\n    });\n\n    return time;\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date or date-time string,\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n  ICAL.Time.fromString = function fromString(aValue, aProperty) {\n    if (aValue.length > 10) {\n      return ICAL.Time.fromDateTimeString(aValue, aProperty);\n    } else {\n      return ICAL.Time.fromDateString(aValue);\n    }\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the given Javascript Date.\n   *\n   * @param {?Date} aDate     The Javascript Date to read, or null to reset\n   * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n   */\n  ICAL.Time.fromJSDate = function fromJSDate(aDate, useUTC) {\n    var tt = new ICAL.Time();\n    return tt.fromJSDate(aDate, useUTC);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the the passed data object.\n   *\n   * @param {Object} aData            Time initialization\n   * @param {Number=} aData.year      The year for this date\n   * @param {Number=} aData.month     The month for this date\n   * @param {Number=} aData.day       The day for this date\n   * @param {Number=} aData.hour      The hour for this date\n   * @param {Number=} aData.minute    The minute for this date\n   * @param {Number=} aData.second    The second for this date\n   * @param {Boolean=} aData.isDate   If true, the instance represents a date\n   *                                    (as opposed to a date-time)\n   * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n   */\n  ICAL.Time.fromData = function fromData(aData, aZone) {\n    var t = new ICAL.Time();\n    return t.fromData(aData, aZone);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the current moment.\n   * The instance is “floating” - has no timezone relation.\n   * To create an instance considering the time zone, call\n   * ICAL.Time.fromJSDate(new Date(), true)\n   * @return {ICAL.Time}\n   */\n  ICAL.Time.now = function icaltime_now() {\n    return ICAL.Time.fromJSDate(new Date(), false);\n  };\n\n  /**\n   * Returns the date on which ISO week number 1 starts.\n   *\n   * @see ICAL.Time#weekNumber\n   * @param {Number} aYear                  The year to search in\n   * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday, used for calculation.\n   * @return {ICAL.Time}                    The date on which week number 1 starts\n   */\n  ICAL.Time.weekOneStarts = function weekOneStarts(aYear, aWeekStart) {\n    var t = ICAL.Time.fromData({\n      year: aYear,\n      month: 1,\n      day: 1,\n      isDate: true\n    });\n\n    var dow = t.dayOfWeek();\n    var wkst = aWeekStart || ICAL.Time.DEFAULT_WEEK_START;\n    if (dow > ICAL.Time.THURSDAY) {\n      t.day += 7;\n    }\n    if (wkst > ICAL.Time.THURSDAY) {\n      t.day -= 7;\n    }\n\n    t.day -= dow - wkst;\n\n    return t;\n  };\n\n  /**\n   * Get the dominical letter for the given year. Letters range from A - G for\n   * common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  ICAL.Time.getDominicalLetter = function(yr) {\n    var LTRS = \"GFEDCBA\";\n    var dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;\n    var isLeap = ICAL.Time.isLeapYear(yr);\n    if (isLeap) {\n      return LTRS[(dom + 6) % 7] + LTRS[dom];\n    } else {\n      return LTRS[dom];\n    }\n  };\n\n  /**\n   * January 1st, 1970 as an ICAL.Time.\n   * @type {ICAL.Time}\n   * @constant\n   * @instance\n   */\n  ICAL.Time.epochTime = ICAL.Time.fromData({\n    year: 1970,\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    isDate: false,\n    timezone: \"Z\"\n  });\n\n  ICAL.Time._cmp_attr = function _cmp_attr(a, b, attr) {\n    if (a[attr] > b[attr]) return 1;\n    if (a[attr] < b[attr]) return -1;\n    return 0;\n  };\n\n  /**\n   * The days that have passed in the year after a given month. The array has\n   * two members, one being an array of passed days for non-leap years, the\n   * other analog for leap years.\n   * @example\n   * var isLeapYear = ICAL.Time.isLeapYear(year);\n   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];\n   * @type {Array.<Array.<Number>>}\n   */\n  ICAL.Time.daysInYearPassedMonth = [\n    [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],\n    [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]\n  ];\n\n  /**\n   * The weekday, 1 = SUNDAY, 7 = SATURDAY. Access via\n   * ICAL.Time.MONDAY, ICAL.Time.TUESDAY, ...\n   *\n   * @typedef {Number} weekDay\n   * @memberof ICAL.Time\n   */\n\n  ICAL.Time.SUNDAY = 1;\n  ICAL.Time.MONDAY = 2;\n  ICAL.Time.TUESDAY = 3;\n  ICAL.Time.WEDNESDAY = 4;\n  ICAL.Time.THURSDAY = 5;\n  ICAL.Time.FRIDAY = 6;\n  ICAL.Time.SATURDAY = 7;\n\n  /**\n   * The default weekday for the WKST part.\n   * @constant\n   * @default ICAL.Time.MONDAY\n   */\n  ICAL.Time.DEFAULT_WEEK_START = ICAL.Time.MONDAY;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2015 */\n\n\n\n(function() {\n\n  /**\n   * Describes a vCard time, which has slight differences to the ICAL.Time.\n   * Properties can be null if not specified, for example for dates with\n   * reduced accuracy or truncation.\n   *\n   * Note that currently not all methods are correctly re-implemented for\n   * VCardTime. For example, comparison will have undefined results when some\n   * members are null.\n   *\n   * Also, normalization is not yet implemented for this class!\n   *\n   * @alias ICAL.VCardTime\n   * @class\n   * @extends {ICAL.Time}\n   * @param {Object} data                           The data for the time instance\n   * @param {Number=} data.year                     The year for this date\n   * @param {Number=} data.month                    The month for this date\n   * @param {Number=} data.day                      The day for this date\n   * @param {Number=} data.hour                     The hour for this date\n   * @param {Number=} data.minute                   The minute for this date\n   * @param {Number=} data.second                   The second for this date\n   * @param {ICAL.Timezone|ICAL.UtcOffset} zone     The timezone to use\n   * @param {String} icaltype                       The type for this date/time object\n   */\n  ICAL.VCardTime = function(data, zone, icaltype) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n\n    time.year = null;\n    time.month = null;\n    time.day = null;\n    time.hour = null;\n    time.minute = null;\n    time.second = null;\n\n    this.icaltype = icaltype || \"date-and-or-time\";\n\n    this.fromData(data, zone);\n  };\n  ICAL.helpers.inherits(ICAL.Time, ICAL.VCardTime, /** @lends ICAL.VCardTime */ {\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"vcardtime\"\n     */\n    icalclass: \"vcardtime\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @type {String}\n     * @default \"date-and-or-time\"\n     */\n    icaltype: \"date-and-or-time\",\n\n    /**\n     * The timezone. This can either be floating, UTC, or an instance of\n     * ICAL.UtcOffset.\n     * @type {ICAL.Timezone|ICAL.UtcOFfset}\n     */\n    zone: null,\n\n    /**\n     * Returns a clone of the vcard date/time object.\n     *\n     * @return {ICAL.VCardTime}     The cloned object\n     */\n    clone: function() {\n      return new ICAL.VCardTime(this._time, this.zone, this.icaltype);\n    },\n\n    _normalize: function() {\n      return this;\n    },\n\n    /**\n     * @inheritdoc\n     */\n    utcOffset: function() {\n      if (this.zone instanceof ICAL.UtcOffset) {\n        return this.zone.toSeconds();\n      } else {\n        return ICAL.Time.prototype.utcOffset.apply(this, arguments);\n      }\n    },\n\n    /**\n     * Returns an RFC 6350 compliant representation of this object.\n     *\n     * @return {String}         vcard date/time string\n     */\n    toICALString: function() {\n      return ICAL.design.vcard.value[this.icaltype].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this date/time, in jCard form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var p2 = ICAL.helpers.pad2;\n      var y = this.year, m = this.month, d = this.day;\n      var h = this.hour, mm = this.minute, s = this.second;\n\n      var hasYear = y !== null, hasMonth = m !== null, hasDay = d !== null;\n      var hasHour = h !== null, hasMinute = mm !== null, hasSecond = s !== null;\n\n      var datepart = (hasYear ? p2(y) + (hasMonth || hasDay ? '-' : '') : (hasMonth || hasDay ? '--' : '')) +\n                     (hasMonth ? p2(m) : '') +\n                     (hasDay ? '-' + p2(d) : '');\n      var timepart = (hasHour ? p2(h) : '-') + (hasHour && hasMinute ? ':' : '') +\n                     (hasMinute ? p2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') +\n                     (hasMinute && hasSecond ? ':' : '') +\n                     (hasSecond ? p2(s) : '');\n\n      var zone;\n      if (this.zone === ICAL.Timezone.utcTimezone) {\n        zone = 'Z';\n      } else if (this.zone instanceof ICAL.UtcOffset) {\n        zone = this.zone.toString();\n      } else if (this.zone === ICAL.Timezone.localTimezone) {\n        zone = '';\n      } else if (this.zone instanceof ICAL.Timezone) {\n        var offset = ICAL.UtcOffset.fromSeconds(this.zone.utcOffset(this));\n        zone = offset.toString();\n      } else {\n        zone = '';\n      }\n\n      switch (this.icaltype) {\n        case \"time\":\n          return timepart + zone;\n        case \"date-and-or-time\":\n        case \"date-time\":\n          return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);\n        case \"date\":\n          return datepart;\n      }\n      return null;\n    }\n  });\n\n  /**\n   * Returns a new ICAL.VCardTime instance from a date and/or time string.\n   *\n   * @param {String} aValue     The string to create from\n   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time\n   * @return {ICAL.VCardTime}   The date/time instance\n   */\n  ICAL.VCardTime.fromDateAndOrTimeString = function(aValue, aIcalType) {\n    function part(v, s, e) {\n      return v ? ICAL.helpers.strictParseInt(v.substr(s, e)) : null;\n    }\n    var parts = aValue.split('T');\n    var dt = parts[0], tmz = parts[1];\n    var splitzone = tmz ? ICAL.design.vcard.value.time._splitZone(tmz) : [];\n    var zone = splitzone[0], tm = splitzone[1];\n\n    var stoi = ICAL.helpers.strictParseInt;\n    var dtlen = dt ? dt.length : 0;\n    var tmlen = tm ? tm.length : 0;\n\n    var hasDashDate = dt && dt[0] == '-' && dt[1] == '-';\n    var hasDashTime = tm && tm[0] == '-';\n\n    var o = {\n      year: hasDashDate ? null : part(dt, 0, 4),\n      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,\n      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,\n\n      hour: hasDashTime ? null : part(tm, 0, 2),\n      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,\n      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null\n    };\n\n    if (zone == 'Z') {\n      zone = ICAL.Timezone.utcTimezone;\n    } else if (zone && zone[3] == ':') {\n      zone = ICAL.UtcOffset.fromString(zone);\n    } else {\n      zone = null;\n    }\n\n    return new ICAL.VCardTime(o, zone, aIcalType);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  var DOW_MAP = {\n    SU: ICAL.Time.SUNDAY,\n    MO: ICAL.Time.MONDAY,\n    TU: ICAL.Time.TUESDAY,\n    WE: ICAL.Time.WEDNESDAY,\n    TH: ICAL.Time.THURSDAY,\n    FR: ICAL.Time.FRIDAY,\n    SA: ICAL.Time.SATURDAY\n  };\n\n  var REVERSE_DOW_MAP = {};\n  for (var key in DOW_MAP) {\n    /* istanbul ignore else */\n    if (DOW_MAP.hasOwnProperty(key)) {\n      REVERSE_DOW_MAP[DOW_MAP[key]] = key;\n    }\n  }\n\n  var COPY_PARTS = [\"BYSECOND\", \"BYMINUTE\", \"BYHOUR\", \"BYDAY\",\n                    \"BYMONTHDAY\", \"BYYEARDAY\", \"BYWEEKNO\",\n                    \"BYMONTH\", \"BYSETPOS\"];\n\n  /**\n   * @classdesc\n   * This class represents the \"recur\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Recur\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n   * @param {ICAL.Time=} data.until                     The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  ICAL.Recur = function icalrecur(data) {\n    this.wrappedJSObject = this;\n    this.parts = {};\n\n    if (data && typeof(data) === 'object') {\n      this.fromData(data);\n    }\n  };\n\n  ICAL.Recur.prototype = {\n    /**\n     * An object holding the BY-parts of the recurrence rule\n     * @type {Object}\n     */\n    parts: null,\n\n    /**\n     * The interval value for the recurrence rule.\n     * @type {Number}\n     */\n    interval: 1,\n\n    /**\n     * The week start day\n     *\n     * @type {ICAL.Time.weekDay}\n     * @default ICAL.Time.MONDAY\n     */\n    wkst: ICAL.Time.MONDAY,\n\n    /**\n     * The end of the recurrence\n     * @type {?ICAL.Time}\n     */\n    until: null,\n\n    /**\n     * The maximum number of occurrences\n     * @type {?Number}\n     */\n    count: null,\n\n    /**\n     * The frequency value.\n     * @type {ICAL.Recur.frequencyValues}\n     */\n    freq: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalrecur\"\n     */\n    icalclass: \"icalrecur\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"recur\"\n     */\n    icaltype: \"recur\",\n\n    /**\n     * Create a new iterator for this recurrence rule. The passed start date\n     * must be the start date of the event, not the start of the range to\n     * search in.\n     *\n     * @example\n     * var recur = comp.getFirstPropertyValue('rrule');\n     * var dtstart = comp.getFirstPropertyValue('dtstart');\n     * var iter = recur.iterator(dtstart);\n     * for (var next = iter.next(); next; next = iter.next()) {\n     *   if (next.compare(rangeStart) < 0) {\n     *     continue;\n     *   }\n     *   console.log(next.toString());\n     * }\n     *\n     * @param {ICAL.Time} aStart        The item's start date\n     * @return {ICAL.RecurIterator}     The recurrence iterator\n     */\n    iterator: function(aStart) {\n      return new ICAL.RecurIterator({\n        rule: this,\n        dtstart: aStart\n      });\n    },\n\n    /**\n     * Returns a clone of the recurrence object.\n     *\n     * @return {ICAL.Recur}      The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.Recur(this.toJSON());\n    },\n\n    /**\n     * Checks if the current rule is finite, i.e. has a count or until part.\n     *\n     * @return {Boolean}        True, if the rule is finite\n     */\n    isFinite: function isfinite() {\n      return !!(this.count || this.until);\n    },\n\n    /**\n     * Checks if the current rule has a count part, and not limited by an until\n     * part.\n     *\n     * @return {Boolean}        True, if the rule is by count\n     */\n    isByCount: function isbycount() {\n      return !!(this.count && !this.until);\n    },\n\n    /**\n     * Adds a component (part) to the recurrence rule. This is not a component\n     * in the sense of {@link ICAL.Component}, but a part of the recurrence\n     * rule, i.e. BYMONTH.\n     *\n     * @param {String} aType            The name of the component part\n     * @param {Array|String} aValue     The component value\n     */\n    addComponent: function addPart(aType, aValue) {\n      var ucname = aType.toUpperCase();\n      if (ucname in this.parts) {\n        this.parts[ucname].push(aValue);\n      } else {\n        this.parts[ucname] = [aValue];\n      }\n    },\n\n    /**\n     * Sets the component value for the given by-part.\n     *\n     * @param {String} aType        The component part name\n     * @param {Array} aValues       The component values\n     */\n    setComponent: function setComponent(aType, aValues) {\n      this.parts[aType.toUpperCase()] = aValues.slice();\n    },\n\n    /**\n     * Gets (a copy) of the requested component value.\n     *\n     * @param {String} aType        The component part name\n     * @return {Array}              The component part value\n     */\n    getComponent: function getComponent(aType) {\n      var ucname = aType.toUpperCase();\n      return (ucname in this.parts ? this.parts[ucname].slice() : []);\n    },\n\n    /**\n     * Retrieves the next occurrence after the given recurrence id. See the\n     * guide on {@tutorial terminology} for more details.\n     *\n     * NOTE: Currently, this method iterates all occurrences from the start\n     * date. It should not be called in a loop for performance reasons. If you\n     * would like to get more than one occurrence, you can iterate the\n     * occurrences manually, see the example on the\n     * {@link ICAL.Recur#iterator iterator} method.\n     *\n     * @param {ICAL.Time} aStartTime        The start of the event series\n     * @param {ICAL.Time} aRecurrenceId     The date of the last occurrence\n     * @return {ICAL.Time}                  The next occurrence after\n     */\n    getNextOccurrence: function getNextOccurrence(aStartTime, aRecurrenceId) {\n      var iter = this.iterator(aStartTime);\n      var next, cdt;\n\n      do {\n        next = iter.next();\n      } while (next && next.compare(aRecurrenceId) <= 0);\n\n      if (next && aRecurrenceId.zone) {\n        next.zone = aRecurrenceId.zone;\n      }\n\n      return next;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} data                               An object with members of the recurrence\n     * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n     * @param {Number=} data.interval                     The INTERVAL value\n     * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n     * @param {ICAL.Time=} data.until                     The end of the recurrence set\n     * @param {Number=} data.count                        The number of occurrences\n     * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n     * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n     * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n     * @param {Array.<String>=} data.byday                The BYDAY values\n     * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n     * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n     * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n     * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n     * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n     */\n    fromData: function(data) {\n      for (var key in data) {\n        var uckey = key.toUpperCase();\n\n        if (uckey in partDesign) {\n          if (Array.isArray(data[key])) {\n            this.parts[uckey] = data[key];\n          } else {\n            this.parts[uckey] = [data[key]];\n          }\n        } else {\n          this[key] = data[key];\n        }\n      }\n\n      if (this.interval && typeof this.interval != \"number\") {\n        optionDesign.INTERVAL(this.interval, this);\n      }\n\n      if (this.wkst && typeof this.wkst != \"number\") {\n        this.wkst = ICAL.Recur.icalDayToNumericDay(this.wkst);\n      }\n\n      if (this.until && !(this.until instanceof ICAL.Time)) {\n        this.until = ICAL.Time.fromString(this.until);\n      }\n    },\n\n    /**\n     * The jCal representation of this recurrence type.\n     * @return {Object}\n     */\n    toJSON: function() {\n      var res = Object.create(null);\n      res.freq = this.freq;\n\n      if (this.count) {\n        res.count = this.count;\n      }\n\n      if (this.interval > 1) {\n        res.interval = this.interval;\n      }\n\n      for (var k in this.parts) {\n        /* istanbul ignore if */\n        if (!this.parts.hasOwnProperty(k)) {\n          continue;\n        }\n        var kparts = this.parts[k];\n        if (Array.isArray(kparts) && kparts.length == 1) {\n          res[k.toLowerCase()] = kparts[0];\n        } else {\n          res[k.toLowerCase()] = ICAL.helpers.clone(this.parts[k]);\n        }\n      }\n\n      if (this.until) {\n        res.until = this.until.toString();\n      }\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        res.wkst = ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n      return res;\n    },\n\n    /**\n     * The string representation of this recurrence rule.\n     * @return {String}\n     */\n    toString: function icalrecur_toString() {\n      // TODO retain order\n      var str = \"FREQ=\" + this.freq;\n      if (this.count) {\n        str += \";COUNT=\" + this.count;\n      }\n      if (this.interval > 1) {\n        str += \";INTERVAL=\" + this.interval;\n      }\n      for (var k in this.parts) {\n        /* istanbul ignore else */\n        if (this.parts.hasOwnProperty(k)) {\n          str += \";\" + k + \"=\" + this.parts[k];\n        }\n      }\n      if (this.until) {\n        str += ';UNTIL=' + this.until.toICALString();\n      }\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        str += ';WKST=' + ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n      return str;\n    }\n  };\n\n  function parseNumericValue(type, min, max, value) {\n    var result = value;\n\n    if (value[0] === '+') {\n      result = value.substr(1);\n    }\n\n    result = ICAL.helpers.strictParseInt(result);\n\n    if (min !== undefined && value < min) {\n      throw new Error(\n        type + ': invalid value \"' + value + '\" must be > ' + min\n      );\n    }\n\n    if (max !== undefined && value > max) {\n      throw new Error(\n        type + ': invalid value \"' + value + '\" must be < ' + min\n      );\n    }\n\n    return result;\n  }\n\n  /**\n   * Convert an ical representation of a day (SU, MO, etc..)\n   * into a numeric value of that day.\n   *\n   * @param {String} string     The iCalendar day name\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}           Numeric value of given day\n   */\n  ICAL.Recur.icalDayToNumericDay = function toNumericDay(string, aWeekStart) {\n    //XXX: this is here so we can deal\n    //     with possibly invalid string values.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    return ((DOW_MAP[string] - firstDow + 7) % 7) + 1;\n  };\n\n  /**\n   * Convert a numeric day value into its ical representation (SU, MO, etc..)\n   *\n   * @param {Number} num        Numeric value of given day\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {String}           The ICAL day value, e.g SU,MO,...\n   */\n  ICAL.Recur.numericDayToIcalDay = function toIcalDay(num, aWeekStart) {\n    //XXX: this is here so we can deal with possibly invalid number values.\n    //     Also, this allows consistent mapping between day numbers and day\n    //     names for external users.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    var dow = (num + firstDow - ICAL.Time.SUNDAY);\n    if (dow > 7) {\n      dow -= 7;\n    }\n    return REVERSE_DOW_MAP[dow];\n  };\n\n  var VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;\n  var VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\n\n  /**\n   * Possible frequency values for the FREQ part\n   * (YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY, SECONDLY)\n   *\n   * @typedef {String} frequencyValues\n   * @memberof ICAL.Recur\n   */\n\n  var ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY',\n                      'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];\n\n  var optionDesign = {\n    FREQ: function(value, dict, fmtIcal) {\n      // yes this is actually equal or faster then regex.\n      // upside here is we can enumerate the valid values.\n      if (ALLOWED_FREQ.indexOf(value) !== -1) {\n        dict.freq = value;\n      } else {\n        throw new Error(\n          'invalid frequency \"' + value + '\" expected: \"' +\n          ALLOWED_FREQ.join(', ') + '\"'\n        );\n      }\n    },\n\n    COUNT: function(value, dict, fmtIcal) {\n      dict.count = ICAL.helpers.strictParseInt(value);\n    },\n\n    INTERVAL: function(value, dict, fmtIcal) {\n      dict.interval = ICAL.helpers.strictParseInt(value);\n      if (dict.interval < 1) {\n        // 0 or negative values are not allowed, some engines seem to generate\n        // it though. Assume 1 instead.\n        dict.interval = 1;\n      }\n    },\n\n    UNTIL: function(value, dict, fmtIcal) {\n      if (value.length > 10) {\n        dict.until = ICAL.design.icalendar.value['date-time'].fromICAL(value);\n      } else {\n        dict.until = ICAL.design.icalendar.value.date.fromICAL(value);\n      }\n      if (!fmtIcal) {\n        dict.until = ICAL.Time.fromString(dict.until);\n      }\n    },\n\n    WKST: function(value, dict, fmtIcal) {\n      if (VALID_DAY_NAMES.test(value)) {\n        dict.wkst = ICAL.Recur.icalDayToNumericDay(value);\n      } else {\n        throw new Error('invalid WKST value \"' + value + '\"');\n      }\n    }\n  };\n\n  var partDesign = {\n    BYSECOND: parseNumericValue.bind(this, 'BYSECOND', 0, 60),\n    BYMINUTE: parseNumericValue.bind(this, 'BYMINUTE', 0, 59),\n    BYHOUR: parseNumericValue.bind(this, 'BYHOUR', 0, 23),\n    BYDAY: function(value) {\n      if (VALID_BYDAY_PART.test(value)) {\n        return value;\n      } else {\n        throw new Error('invalid BYDAY value \"' + value + '\"');\n      }\n    },\n    BYMONTHDAY: parseNumericValue.bind(this, 'BYMONTHDAY', -31, 31),\n    BYYEARDAY: parseNumericValue.bind(this, 'BYYEARDAY', -366, 366),\n    BYWEEKNO: parseNumericValue.bind(this, 'BYWEEKNO', -53, 53),\n    BYMONTH: parseNumericValue.bind(this, 'BYMONTH', 1, 12),\n    BYSETPOS: parseNumericValue.bind(this, 'BYSETPOS', -366, 366)\n  };\n\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance from the passed string.\n   *\n   * @param {String} string         The string to parse\n   * @return {ICAL.Recur}           The created recurrence instance\n   */\n  ICAL.Recur.fromString = function(string) {\n    var data = ICAL.Recur._stringToData(string, false);\n    return new ICAL.Recur(data);\n  };\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance using members from the passed\n   * data object.\n   *\n   * @param {Object} aData                              An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} aData.freq    The frequency value\n   * @param {Number=} aData.interval                    The INTERVAL value\n   * @param {ICAL.Time.weekDay=} aData.wkst             The week start value\n   * @param {ICAL.Time=} aData.until                    The end of the recurrence set\n   * @param {Number=} aData.count                       The number of occurrences\n   * @param {Array.<Number>=} aData.bysecond            The seconds for the BYSECOND part\n   * @param {Array.<Number>=} aData.byminute            The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} aData.byhour              The hours for the BYHOUR part\n   * @param {Array.<String>=} aData.byday               The BYDAY values\n   * @param {Array.<Number>=} aData.bymonthday          The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} aData.byyearday           The days for the BYYEARDAY part\n   * @param {Array.<Number>=} aData.byweekno            The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} aData.bymonth             The month for the BYMONTH part\n   * @param {Array.<Number>=} aData.bysetpos            The positionals for the BYSETPOS part\n   */\n  ICAL.Recur.fromData = function(aData) {\n    return new ICAL.Recur(aData);\n  };\n\n  /**\n   * Converts a recurrence string to a data object, suitable for the fromData\n   * method.\n   *\n   * @param {String} string     The string to parse\n   * @param {Boolean} fmtIcal   If true, the string is considered to be an\n   *                              iCalendar string\n   * @return {ICAL.Recur}       The recurrence instance\n   */\n  ICAL.Recur._stringToData = function(string, fmtIcal) {\n    var dict = Object.create(null);\n\n    // split is slower in FF but fast enough.\n    // v8 however this is faster then manual split?\n    var values = string.split(';');\n    var len = values.length;\n\n    for (var i = 0; i < len; i++) {\n      var parts = values[i].split('=');\n      var ucname = parts[0].toUpperCase();\n      var lcname = parts[0].toLowerCase();\n      var name = (fmtIcal ? lcname : ucname);\n      var value = parts[1];\n\n      if (ucname in partDesign) {\n        var partArr = value.split(',');\n        var partArrIdx = 0;\n        var partArrLen = partArr.length;\n\n        for (; partArrIdx < partArrLen; partArrIdx++) {\n          partArr[partArrIdx] = partDesign[ucname](partArr[partArrIdx]);\n        }\n        dict[name] = (partArr.length == 1 ? partArr[0] : partArr);\n      } else if (ucname in optionDesign) {\n        optionDesign[ucname](value, dict, fmtIcal);\n      } else {\n        // Don't swallow unknown values. Just set them as they are.\n        dict[lcname] = value;\n      }\n    }\n\n    return dict;\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.RecurIterator = (function() {\n\n  /**\n   * @classdesc\n   * An iterator for a single recurrence rule. This class usually doesn't have\n   * to be instanciated directly, the convenience method\n   * {@link ICAL.Recur#iterator} can be used.\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration from a previous run\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration\n   * from a previous run.\n   *\n   * @class\n   * @alias ICAL.RecurIterator\n   * @param {Object} options                The iterator options\n   * @param {ICAL.Recur} options.rule       The rule to iterate.\n   * @param {ICAL.Time} options.dtstart     The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  function icalrecur_iterator(options) {\n    this.fromData(options);\n  }\n\n  icalrecur_iterator.prototype = {\n\n    /**\n     * True when iteration is finished.\n     * @type {Boolean}\n     */\n    completed: false,\n\n    /**\n     * The rule that is being iterated\n     * @type {ICAL.Recur}\n     */\n    rule: null,\n\n    /**\n     * The start date of the event being iterated.\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * The last occurrence that was returned from the\n     * {@link ICAL.RecurIterator#next} method.\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * The sequence number from the occurrence\n     * @type {Number}\n     */\n    occurrence_number: 0,\n\n    /**\n     * The indices used for the {@link ICAL.RecurIterator#by_data} object.\n     * @type {Object}\n     * @private\n     */\n    by_indices: null,\n\n    /**\n     * If true, the iterator has already been initialized\n     * @type {Boolean}\n     * @private\n     */\n    initialized: false,\n\n    /**\n     * The initializd by-data.\n     * @type {Object}\n     * @private\n     */\n    by_data: null,\n\n    /**\n     * The expanded yeardays\n     * @type {Array}\n     * @private\n     */\n    days: null,\n\n    /**\n     * The index in the {@link ICAL.RecurIterator#days} array.\n     * @type {Number}\n     * @private\n     */\n    days_index: 0,\n\n    /**\n     * Initialize the recurrence iterator from the passed data object. This\n     * method is usually not called directly, you can initialize the iterator\n     * through the constructor.\n     *\n     * @param {Object} options                The iterator options\n     * @param {ICAL.Recur} options.rule       The rule to iterate.\n     * @param {ICAL.Time} options.dtstart     The start date of the event.\n     * @param {Boolean=} options.initialized  When true, assume that options are\n     *        from a previously constructed iterator. Initialization will not be\n     *        repeated.\n     */\n    fromData: function(options) {\n      this.rule = ICAL.helpers.formatClassType(options.rule, ICAL.Recur);\n\n      if (!this.rule) {\n        throw new Error('iterator requires a (ICAL.Recur) rule');\n      }\n\n      this.dtstart = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!this.dtstart) {\n        throw new Error('iterator requires a (ICAL.Time) dtstart');\n      }\n\n      if (options.by_data) {\n        this.by_data = options.by_data;\n      } else {\n        this.by_data = ICAL.helpers.clone(this.rule.parts, true);\n      }\n\n      if (options.occurrence_number)\n        this.occurrence_number = options.occurrence_number;\n\n      this.days = options.days || [];\n      if (options.last) {\n        this.last = ICAL.helpers.formatClassType(options.last, ICAL.Time);\n      }\n\n      this.by_indices = options.by_indices;\n\n      if (!this.by_indices) {\n        this.by_indices = {\n          \"BYSECOND\": 0,\n          \"BYMINUTE\": 0,\n          \"BYHOUR\": 0,\n          \"BYDAY\": 0,\n          \"BYMONTH\": 0,\n          \"BYWEEKNO\": 0,\n          \"BYMONTHDAY\": 0\n        };\n      }\n\n      this.initialized = options.initialized || false;\n\n      if (!this.initialized) {\n        this.init();\n      }\n    },\n\n    /**\n     * Intialize the iterator\n     * @private\n     */\n    init: function icalrecur_iterator_init() {\n      this.initialized = true;\n      this.last = this.dtstart.clone();\n      var parts = this.by_data;\n\n      if (\"BYDAY\" in parts) {\n        // libical does this earlier when the rule is loaded, but we postpone to\n        // now so we can preserve the original order.\n        this.sort_byday_rules(parts.BYDAY);\n      }\n\n      // If the BYYEARDAY appares, no other date rule part may appear\n      if (\"BYYEARDAY\" in parts) {\n        if (\"BYMONTH\" in parts || \"BYWEEKNO\" in parts ||\n            \"BYMONTHDAY\" in parts || \"BYDAY\" in parts) {\n          throw new Error(\"Invalid BYYEARDAY rule\");\n        }\n      }\n\n      // BYWEEKNO and BYMONTHDAY rule parts may not both appear\n      if (\"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {\n        throw new Error(\"BYWEEKNO does not fit to BYMONTHDAY\");\n      }\n\n      // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor\n      // BYWEEKNO may appear.\n      if (this.rule.freq == \"MONTHLY\" &&\n          (\"BYYEARDAY\" in parts || \"BYWEEKNO\" in parts)) {\n        throw new Error(\"For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear\");\n      }\n\n      // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor\n      // BYYEARDAY may appear.\n      if (this.rule.freq == \"WEEKLY\" &&\n          (\"BYYEARDAY\" in parts || \"BYMONTHDAY\" in parts)) {\n        throw new Error(\"For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear\");\n      }\n\n      // BYYEARDAY may only appear in YEARLY rules\n      if (this.rule.freq != \"YEARLY\" && \"BYYEARDAY\" in parts) {\n        throw new Error(\"BYYEARDAY may only appear in YEARLY rules\");\n      }\n\n      this.last.second = this.setup_defaults(\"BYSECOND\", \"SECONDLY\", this.dtstart.second);\n      this.last.minute = this.setup_defaults(\"BYMINUTE\", \"MINUTELY\", this.dtstart.minute);\n      this.last.hour = this.setup_defaults(\"BYHOUR\", \"HOURLY\", this.dtstart.hour);\n      this.last.day = this.setup_defaults(\"BYMONTHDAY\", \"DAILY\", this.dtstart.day);\n      this.last.month = this.setup_defaults(\"BYMONTH\", \"MONTHLY\", this.dtstart.month);\n\n      if (this.rule.freq == \"WEEKLY\") {\n        if (\"BYDAY\" in parts) {\n          var bydayParts = this.ruleDayOfWeek(parts.BYDAY[0], this.rule.wkst);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var wkdy = dow - this.last.dayOfWeek(this.rule.wkst);\n          if ((this.last.dayOfWeek(this.rule.wkst) < dow && wkdy >= 0) || wkdy < 0) {\n            // Initial time is after first day of BYDAY data\n            this.last.day += wkdy;\n          }\n        } else {\n          var dayName = ICAL.Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());\n          parts.BYDAY = [dayName];\n        }\n      }\n\n      if (this.rule.freq == \"YEARLY\") {\n        for (;;) {\n          this.expand_year_days(this.last.year);\n          if (this.days.length > 0) {\n            break;\n          }\n          this.increment_year(this.rule.interval);\n        }\n\n        this._nextByYearDay();\n      }\n\n      if (this.rule.freq == \"MONTHLY\" && this.has_by_data(\"BYDAY\")) {\n        var tempLast = null;\n        var initLast = this.last.clone();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n\n        // Check every weekday in BYDAY with relative dow and pos.\n        for (var i in this.by_data.BYDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYDAY.hasOwnProperty(i)) {\n            continue;\n          }\n          this.last = initLast.clone();\n          var bydayParts = this.ruleDayOfWeek(this.by_data.BYDAY[i]);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var dayOfMonth = this.last.nthWeekDay(dow, pos);\n\n          // If |pos| >= 6, the byday is invalid for a monthly rule.\n          if (pos >= 6 || pos <= -6) {\n            throw new Error(\"Malformed values in BYDAY part\");\n          }\n\n          // If a Byday with pos=+/-5 is not in the current month it\n          // must be searched in the next months.\n          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n            // Skip if we have already found a \"last\" in this month.\n            if (tempLast && tempLast.month == initLast.month) {\n              continue;\n            }\n            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n              this.increment_month();\n              daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n              dayOfMonth = this.last.nthWeekDay(dow, pos);\n            }\n          }\n\n          this.last.day = dayOfMonth;\n          if (!tempLast || this.last.compare(tempLast) < 0) {\n            tempLast = this.last.clone();\n          }\n        }\n        this.last = tempLast.clone();\n\n        //XXX: This feels like a hack, but we need to initialize\n        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles\n        //     this case. It accepts a special flag which will avoid incrementing\n        //     the initial value without the flag days that match the start time\n        //     would be missed.\n        if (this.has_by_data('BYMONTHDAY')) {\n          this._byDayAndMonthDay(true);\n        }\n\n        if (this.last.day > daysInMonth || this.last.day == 0) {\n          throw new Error(\"Malformed values in BYDAY part\");\n        }\n\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        if (this.last.day < 0) {\n          var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n          this.last.day = daysInMonth + this.last.day + 1;\n        }\n      }\n\n    },\n\n    /**\n     * Retrieve the next occurrence from the iterator.\n     * @return {ICAL.Time}\n     */\n    next: function icalrecur_iterator_next() {\n      var before = (this.last ? this.last.clone() : null);\n\n      if ((this.rule.count && this.occurrence_number >= this.rule.count) ||\n          (this.rule.until && this.last.compare(this.rule.until) > 0)) {\n\n        //XXX: right now this is just a flag and has no impact\n        //     we can simplify the above case to check for completed later.\n        this.completed = true;\n\n        return null;\n      }\n\n      if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {\n        // First of all, give the instance that was initialized\n        this.occurrence_number++;\n        return this.last;\n      }\n\n\n      var valid;\n      do {\n        valid = 1;\n\n        switch (this.rule.freq) {\n        case \"SECONDLY\":\n          this.next_second();\n          break;\n        case \"MINUTELY\":\n          this.next_minute();\n          break;\n        case \"HOURLY\":\n          this.next_hour();\n          break;\n        case \"DAILY\":\n          this.next_day();\n          break;\n        case \"WEEKLY\":\n          this.next_week();\n          break;\n        case \"MONTHLY\":\n          valid = this.next_month();\n          break;\n        case \"YEARLY\":\n          this.next_year();\n          break;\n\n        default:\n          return null;\n        }\n      } while (!this.check_contracting_rules() ||\n               this.last.compare(this.dtstart) < 0 ||\n               !valid);\n\n      // TODO is this valid?\n      if (this.last.compare(before) == 0) {\n        throw new Error(\"Same occurrence found twice, protecting \" +\n                        \"you from death by recursion\");\n      }\n\n      if (this.rule.until && this.last.compare(this.rule.until) > 0) {\n        this.completed = true;\n        return null;\n      } else {\n        this.occurrence_number++;\n        return this.last;\n      }\n    },\n\n    next_second: function next_second() {\n      return this.next_generic(\"BYSECOND\", \"SECONDLY\", \"second\", \"minute\");\n    },\n\n    increment_second: function increment_second(inc) {\n      return this.increment_generic(inc, \"second\", 60, \"minute\");\n    },\n\n    next_minute: function next_minute() {\n      return this.next_generic(\"BYMINUTE\", \"MINUTELY\",\n                               \"minute\", \"hour\", \"next_second\");\n    },\n\n    increment_minute: function increment_minute(inc) {\n      return this.increment_generic(inc, \"minute\", 60, \"hour\");\n    },\n\n    next_hour: function next_hour() {\n      return this.next_generic(\"BYHOUR\", \"HOURLY\", \"hour\",\n                               \"monthday\", \"next_minute\");\n    },\n\n    increment_hour: function increment_hour(inc) {\n      this.increment_generic(inc, \"hour\", 24, \"monthday\");\n    },\n\n    next_day: function next_day() {\n      var has_by_day = (\"BYDAY\" in this.by_data);\n      var this_freq = (this.rule.freq == \"DAILY\");\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (this_freq) {\n        this.increment_monthday(this.rule.interval);\n      } else {\n        this.increment_monthday(1);\n      }\n\n      return 0;\n    },\n\n    next_week: function next_week() {\n      var end_of_data = 0;\n\n      if (this.next_weekday_by_week() == 0) {\n        return end_of_data;\n      }\n\n      if (this.has_by_data(\"BYWEEKNO\")) {\n        var idx = ++this.by_indices.BYWEEKNO;\n\n        if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {\n          this.by_indices.BYWEEKNO = 0;\n          end_of_data = 1;\n        }\n\n        // HACK should be first month of the year\n        this.last.month = 1;\n        this.last.day = 1;\n\n        var week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];\n\n        this.last.day += 7 * week_no;\n\n        if (end_of_data) {\n          this.increment_year(1);\n        }\n      } else {\n        // Jump to the next week\n        this.increment_monthday(7 * this.rule.interval);\n      }\n\n      return end_of_data;\n    },\n\n    /**\n     * Normalize each by day rule for a given year/month.\n     * Takes into account ordering and negative rules\n     *\n     * @private\n     * @param {Number} year         Current year.\n     * @param {Number} month        Current month.\n     * @param {Array}  rules        Array of rules.\n     *\n     * @return {Array} sorted and normalized rules.\n     *                 Negative rules will be expanded to their\n     *                 correct positive values for easier processing.\n     */\n    normalizeByMonthDayRules: function(year, month, rules) {\n      var daysInMonth = ICAL.Time.daysInMonth(month, year);\n\n      // XXX: This is probably bad for performance to allocate\n      //      a new array for each month we scan, if possible\n      //      we should try to optimize this...\n      var newRules = [];\n\n      var ruleIdx = 0;\n      var len = rules.length;\n      var rule;\n\n      for (; ruleIdx < len; ruleIdx++) {\n        rule = rules[ruleIdx];\n\n        // if this rule falls outside of given\n        // month discard it.\n        if (Math.abs(rule) > daysInMonth) {\n          continue;\n        }\n\n        // negative case\n        if (rule < 0) {\n          // we add (not subtract it is a negative number)\n          // one from the rule because 1 === last day of month\n          rule = daysInMonth + (rule + 1);\n        } else if (rule === 0) {\n          // skip zero: it is invalid.\n          continue;\n        }\n\n        // only add unique items...\n        if (newRules.indexOf(rule) === -1) {\n          newRules.push(rule);\n        }\n\n      }\n\n      // unique and sort\n      return newRules.sort(function(a, b) { return a - b; });\n    },\n\n    /**\n     * NOTES:\n     * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)\n     * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when\n     * both conditions match a given date (this.last.day) iteration stops.\n     *\n     * @private\n     * @param {Boolean=} isInit     When given true will not increment the\n     *                                current day (this.last).\n     */\n    _byDayAndMonthDay: function(isInit) {\n      var byMonthDay; // setup in initMonth\n      var byDay = this.by_data.BYDAY;\n\n      var date;\n      var dateIdx = 0;\n      var dateLen; // setup in initMonth\n      var dayLen = byDay.length;\n\n      // we are not valid by default\n      var dataIsValid = 0;\n\n      var daysInMonth;\n      var self = this;\n      // we need a copy of this, because a DateTime gets normalized\n      // automatically if the day is out of range. At some points we\n      // set the last day to 0 to start counting.\n      var lastDay = this.last.day;\n\n      function initMonth() {\n        daysInMonth = ICAL.Time.daysInMonth(\n          self.last.month, self.last.year\n        );\n\n        byMonthDay = self.normalizeByMonthDayRules(\n          self.last.year,\n          self.last.month,\n          self.by_data.BYMONTHDAY\n        );\n\n        dateLen = byMonthDay.length;\n\n        // For the case of more than one occurrence in one month\n        // we have to be sure to start searching after the last\n        // found date or at the last BYMONTHDAY, unless we are\n        // initializing the iterator because in this case we have\n        // to consider the last found date too.\n        while (byMonthDay[dateIdx] <= lastDay &&\n               !(isInit && byMonthDay[dateIdx] == lastDay) &&\n               dateIdx < dateLen - 1) {\n          dateIdx++;\n        }\n      }\n\n      function nextMonth() {\n        // since the day is incremented at the start\n        // of the loop below, we need to start at 0\n        lastDay = 0;\n        self.increment_month();\n        dateIdx = 0;\n        initMonth();\n      }\n\n      initMonth();\n\n      // should come after initMonth\n      if (isInit) {\n        lastDay -= 1;\n      }\n\n      // Use a counter to avoid an infinite loop with malformed rules.\n      // Stop checking after 4 years so we consider also a leap year.\n      var monthsCounter = 48;\n\n      while (!dataIsValid && monthsCounter) {\n        monthsCounter--;\n        // increment the current date. This is really\n        // important otherwise we may fall into the infinite\n        // loop trap. The initial date takes care of the case\n        // where the current date is the date we are looking\n        // for.\n        date = lastDay + 1;\n\n        if (date > daysInMonth) {\n          nextMonth();\n          continue;\n        }\n\n        // find next date\n        var next = byMonthDay[dateIdx++];\n\n        // this logic is dependant on the BYMONTHDAYS\n        // being in order (which is done by #normalizeByMonthDayRules)\n        if (next >= date) {\n          // if the next month day is in the future jump to it.\n          lastDay = next;\n        } else {\n          // in this case the 'next' monthday has past\n          // we must move to the month.\n          nextMonth();\n          continue;\n        }\n\n        // Now we can loop through the day rules to see\n        // if one matches the current month date.\n        for (var dayIdx = 0; dayIdx < dayLen; dayIdx++) {\n          var parts = this.ruleDayOfWeek(byDay[dayIdx]);\n          var pos = parts[0];\n          var dow = parts[1];\n\n          this.last.day = lastDay;\n          if (this.last.isNthWeekDay(dow, pos)) {\n            // when we find the valid one we can mark\n            // the conditions as met and break the loop.\n            // (Because we have this condition above\n            //  it will also break the parent loop).\n            dataIsValid = 1;\n            break;\n          }\n        }\n\n        // It is completely possible that the combination\n        // cannot be matched in the current month.\n        // When we reach the end of possible combinations\n        // in the current month we iterate to the next one.\n        // since dateIdx is incremented right after getting\n        // \"next\", we don't need dateLen -1 here.\n        if (!dataIsValid && dateIdx === dateLen) {\n          nextMonth();\n          continue;\n        }\n      }\n\n      if (monthsCounter <= 0) {\n        // Checked 4 years without finding a Byday that matches\n        // a Bymonthday. Maybe the rule is not correct.\n        throw new Error(\"Malformed values in BYDAY combined with BYMONTHDAY parts\");\n      }\n\n\n      return dataIsValid;\n    },\n\n    next_month: function next_month() {\n      var this_freq = (this.rule.freq == \"MONTHLY\");\n      var data_valid = 1;\n\n      if (this.next_hour() == 0) {\n        return data_valid;\n      }\n\n      if (this.has_by_data(\"BYDAY\") && this.has_by_data(\"BYMONTHDAY\")) {\n        data_valid = this._byDayAndMonthDay();\n      } else if (this.has_by_data(\"BYDAY\")) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var setpos = 0;\n        var setpos_total = 0;\n\n        if (this.has_by_data(\"BYSETPOS\")) {\n          var last_day = this.last.day;\n          for (var day = 1; day <= daysInMonth; day++) {\n            this.last.day = day;\n            if (this.is_day_in_byday(this.last)) {\n              setpos_total++;\n              if (day <= last_day) {\n                setpos++;\n              }\n            }\n          }\n          this.last.day = last_day;\n        }\n\n        data_valid = 0;\n        for (var day = this.last.day + 1; day <= daysInMonth; day++) {\n          this.last.day = day;\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") ||\n                this.check_set_position(++setpos) ||\n                this.check_set_position(setpos - setpos_total - 1)) {\n\n              data_valid = 1;\n              break;\n            }\n          }\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          this.increment_month();\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(1)) {\n              data_valid = 1;\n            }\n          } else {\n            data_valid = 0;\n          }\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        this.by_indices.BYMONTHDAY++;\n\n        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n          this.by_indices.BYMONTHDAY = 0;\n          this.increment_month();\n        }\n\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];\n\n        if (day < 0) {\n          day = daysInMonth + day + 1;\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          data_valid = this.is_day_in_byday(this.last);\n        } else {\n          this.last.day = day;\n        }\n\n      } else {\n        this.increment_month();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        if (this.by_data.BYMONTHDAY[0] > daysInMonth) {\n          data_valid = 0;\n        } else {\n          this.last.day = this.by_data.BYMONTHDAY[0];\n        }\n      }\n\n      return data_valid;\n    },\n\n    next_weekday_by_week: function next_weekday_by_week() {\n      var end_of_data = 0;\n\n      if (this.next_hour() == 0) {\n        return end_of_data;\n      }\n\n      if (!this.has_by_data(\"BYDAY\")) {\n        return 1;\n      }\n\n      for (;;) {\n        var tt = new ICAL.Time();\n        this.by_indices.BYDAY++;\n\n        if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {\n          this.by_indices.BYDAY = 0;\n          end_of_data = 1;\n        }\n\n        var coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];\n        var parts = this.ruleDayOfWeek(coded_day);\n        var dow = parts[1];\n\n        dow -= this.rule.wkst;\n\n        if (dow < 0) {\n          dow += 7;\n        }\n\n        tt.year = this.last.year;\n        tt.month = this.last.month;\n        tt.day = this.last.day;\n\n        var startOfWeek = tt.startDoyWeek(this.rule.wkst);\n\n        if (dow + startOfWeek < 1) {\n          // The selected date is in the previous year\n          if (!end_of_data) {\n            continue;\n          }\n        }\n\n        var next = ICAL.Time.fromDayOfYear(startOfWeek + dow,\n                                                  this.last.year);\n\n        /**\n         * The normalization horrors below are due to\n         * the fact that when the year/month/day changes\n         * it can effect the other operations that come after.\n         */\n        this.last.year = next.year;\n        this.last.month = next.month;\n        this.last.day = next.day;\n\n        return end_of_data;\n      }\n    },\n\n    next_year: function next_year() {\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (++this.days_index == this.days.length) {\n        this.days_index = 0;\n        do {\n          this.increment_year(this.rule.interval);\n          this.expand_year_days(this.last.year);\n        } while (this.days.length == 0);\n      }\n\n      this._nextByYearDay();\n\n      return 1;\n    },\n\n    _nextByYearDay: function _nextByYearDay() {\n        var doy = this.days[this.days_index];\n        var year = this.last.year;\n        if (doy < 1) {\n            // Time.fromDayOfYear(doy, year) indexes relative to the\n            // start of the given year. That is different from the\n            // semantics of BYYEARDAY where negative indexes are an\n            // offset from the end of the given year.\n            doy += 1;\n            year += 1;\n        }\n        var next = ICAL.Time.fromDayOfYear(doy, year);\n        this.last.day = next.day;\n        this.last.month = next.month;\n    },\n\n    /**\n     * @param dow (eg: '1TU', '-1MO')\n     * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday\n     * @return [pos, numericDow] (eg: [1, 3]) numericDow is relative to aWeekStart\n     */\n    ruleDayOfWeek: function ruleDayOfWeek(dow, aWeekStart) {\n      var matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);\n      if (matches) {\n        var pos = parseInt(matches[1] || 0, 10);\n        dow = ICAL.Recur.icalDayToNumericDay(matches[2], aWeekStart);\n        return [pos, dow];\n      } else {\n        return [0, 0];\n      }\n    },\n\n    next_generic: function next_generic(aRuleType, aInterval, aDateAttr,\n                                        aFollowingAttr, aPreviousIncr) {\n      var has_by_rule = (aRuleType in this.by_data);\n      var this_freq = (this.rule.freq == aInterval);\n      var end_of_data = 0;\n\n      if (aPreviousIncr && this[aPreviousIncr]() == 0) {\n        return end_of_data;\n      }\n\n      if (has_by_rule) {\n        this.by_indices[aRuleType]++;\n        var idx = this.by_indices[aRuleType];\n        var dta = this.by_data[aRuleType];\n\n        if (this.by_indices[aRuleType] == dta.length) {\n          this.by_indices[aRuleType] = 0;\n          end_of_data = 1;\n        }\n        this.last[aDateAttr] = dta[this.by_indices[aRuleType]];\n      } else if (this_freq) {\n        this[\"increment_\" + aDateAttr](this.rule.interval);\n      }\n\n      if (has_by_rule && end_of_data && this_freq) {\n        this[\"increment_\" + aFollowingAttr](1);\n      }\n\n      return end_of_data;\n    },\n\n    increment_monthday: function increment_monthday(inc) {\n      for (var i = 0; i < inc; i++) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        this.last.day++;\n\n        if (this.last.day > daysInMonth) {\n          this.last.day -= daysInMonth;\n          this.increment_month();\n        }\n      }\n    },\n\n    increment_month: function increment_month() {\n      this.last.day = 1;\n      if (this.has_by_data(\"BYMONTH\")) {\n        this.by_indices.BYMONTH++;\n\n        if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {\n          this.by_indices.BYMONTH = 0;\n          this.increment_year(1);\n        }\n\n        this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];\n      } else {\n        if (this.rule.freq == \"MONTHLY\") {\n          this.last.month += this.rule.interval;\n        } else {\n          this.last.month++;\n        }\n\n        this.last.month--;\n        var years = ICAL.helpers.trunc(this.last.month / 12);\n        this.last.month %= 12;\n        this.last.month++;\n\n        if (years != 0) {\n          this.increment_year(years);\n        }\n      }\n    },\n\n    increment_year: function increment_year(inc) {\n      this.last.year += inc;\n    },\n\n    increment_generic: function increment_generic(inc, aDateAttr,\n                                                  aFactor, aNextIncrement) {\n      this.last[aDateAttr] += inc;\n      var nextunit = ICAL.helpers.trunc(this.last[aDateAttr] / aFactor);\n      this.last[aDateAttr] %= aFactor;\n      if (nextunit != 0) {\n        this[\"increment_\" + aNextIncrement](nextunit);\n      }\n    },\n\n    has_by_data: function has_by_data(aRuleType) {\n      return (aRuleType in this.rule.parts);\n    },\n\n    expand_year_days: function expand_year_days(aYear) {\n      var t = new ICAL.Time();\n      this.days = [];\n\n      // We need our own copy with a few keys set\n      var parts = {};\n      var rules = [\"BYDAY\", \"BYWEEKNO\", \"BYMONTHDAY\", \"BYMONTH\", \"BYYEARDAY\"];\n      for (var p in rules) {\n        /* istanbul ignore else */\n        if (rules.hasOwnProperty(p)) {\n          var part = rules[p];\n          if (part in this.rule.parts) {\n            parts[part] = this.rule.parts[part];\n          }\n        }\n      }\n\n      if (\"BYMONTH\" in parts && \"BYWEEKNO\" in parts) {\n        var valid = 1;\n        var validWeeks = {};\n        t.year = aYear;\n        t.isDate = true;\n\n        for (var monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {\n          var month = this.by_data.BYMONTH[monthIdx];\n          t.month = month;\n          t.day = 1;\n          var first_week = t.weekNumber(this.rule.wkst);\n          t.day = ICAL.Time.daysInMonth(month, aYear);\n          var last_week = t.weekNumber(this.rule.wkst);\n          for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {\n            validWeeks[monthIdx] = 1;\n          }\n        }\n\n        for (var weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {\n          var weekno = this.by_data.BYWEEKNO[weekIdx];\n          if (weekno < 52) {\n            valid &= validWeeks[weekIdx];\n          } else {\n            valid = 0;\n          }\n        }\n\n        if (valid) {\n          delete parts.BYMONTH;\n        } else {\n          delete parts.BYWEEKNO;\n        }\n      }\n\n      var partCount = Object.keys(parts).length;\n\n      if (partCount == 0) {\n        var t1 = this.dtstart.clone();\n        t1.year = this.last.year;\n        this.days.push(t1.dayOfYear());\n      } else if (partCount == 1 && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var t2 = this.dtstart.clone();\n          t2.year = aYear;\n          t2.month = this.by_data.BYMONTH[monthkey];\n          t2.isDate = true;\n          this.days.push(t2.dayOfYear());\n        }\n      } else if (partCount == 1 && \"BYMONTHDAY\" in parts) {\n        for (var monthdaykey in this.by_data.BYMONTHDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n            continue;\n          }\n          var t3 = this.dtstart.clone();\n          var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n          if (day_ < 0) {\n            var daysInMonth = ICAL.Time.daysInMonth(t3.month, aYear);\n            day_ = day_ + daysInMonth + 1;\n          }\n          t3.day = day_;\n          t3.year = aYear;\n          t3.isDate = true;\n          this.days.push(t3.dayOfYear());\n        }\n      } else if (partCount == 2 &&\n                 \"BYMONTHDAY\" in parts &&\n                 \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var month_ = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month_, aYear);\n          for (var monthdaykey in this.by_data.BYMONTHDAY) {\n            /* istanbul ignore if */\n            if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n              continue;\n            }\n            var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n            if (day_ < 0) {\n              day_ = day_ + daysInMonth + 1;\n            }\n            t.day = day_;\n            t.month = month_;\n            t.year = aYear;\n            t.isDate = true;\n\n            this.days.push(t.dayOfYear());\n          }\n        }\n      } else if (partCount == 1 && \"BYWEEKNO\" in parts) {\n        // TODO unimplemented in libical\n      } else if (partCount == 2 &&\n                 \"BYWEEKNO\" in parts &&\n                 \"BYMONTHDAY\" in parts) {\n        // TODO unimplemented in libical\n      } else if (partCount == 1 && \"BYDAY\" in parts) {\n        this.days = this.days.concat(this.expand_by_day(aYear));\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var month = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month, aYear);\n\n          t.year = aYear;\n          t.month = this.by_data.BYMONTH[monthkey];\n          t.day = 1;\n          t.isDate = true;\n\n          var first_dow = t.dayOfWeek();\n          var doy_offset = t.dayOfYear() - 1;\n\n          t.day = daysInMonth;\n          var last_dow = t.dayOfWeek();\n\n          if (this.has_by_data(\"BYSETPOS\")) {\n            var set_pos_counter = 0;\n            var by_month_day = [];\n            for (var day = 1; day <= daysInMonth; day++) {\n              t.day = day;\n              if (this.is_day_in_byday(t)) {\n                by_month_day.push(day);\n              }\n            }\n\n            for (var spIndex = 0; spIndex < by_month_day.length; spIndex++) {\n              if (this.check_set_position(spIndex + 1) ||\n                  this.check_set_position(spIndex - by_month_day.length)) {\n                this.days.push(doy_offset + by_month_day[spIndex]);\n              }\n            }\n          } else {\n            for (var daycodedkey in this.by_data.BYDAY) {\n              /* istanbul ignore if */\n              if (!this.by_data.BYDAY.hasOwnProperty(daycodedkey)) {\n                continue;\n              }\n              var coded_day = this.by_data.BYDAY[daycodedkey];\n              var bydayParts = this.ruleDayOfWeek(coded_day);\n              var pos = bydayParts[0];\n              var dow = bydayParts[1];\n              var month_day;\n\n              var first_matching_day = ((dow + 7 - first_dow) % 7) + 1;\n              var last_matching_day = daysInMonth - ((last_dow + 7 - dow) % 7);\n\n              if (pos == 0) {\n                for (var day = first_matching_day; day <= daysInMonth; day += 7) {\n                  this.days.push(doy_offset + day);\n                }\n              } else if (pos > 0) {\n                month_day = first_matching_day + (pos - 1) * 7;\n\n                if (month_day <= daysInMonth) {\n                  this.days.push(doy_offset + month_day);\n                }\n              } else {\n                month_day = last_matching_day + (pos + 1) * 7;\n\n                if (month_day > 0) {\n                  this.days.push(doy_offset + month_day);\n                }\n              }\n            }\n          }\n        }\n        // Return dates in order of occurrence (1,2,3,...) instead\n        // of by groups of weekdays (1,8,15,...,2,9,16,...).\n        this.days.sort(function(a, b) { return a - b; }); // Comparator function allows to sort numbers.\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 &&\n                 \"BYDAY\" in parts &&\n                 \"BYMONTHDAY\" in parts &&\n                 \"BYMONTH\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n\n          if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 &&\n              this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          var weekno = tt.weekNumber(this.rule.wkst);\n\n          if (this.by_data.BYWEEKNO.indexOf(weekno)) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 &&\n                 \"BYDAY\" in parts &&\n                 \"BYWEEKNO\" in parts &&\n                 \"BYMONTHDAY\" in parts) {\n        // TODO unimplemted in libical\n      } else if (partCount == 1 && \"BYYEARDAY\" in parts) {\n        this.days = this.days.concat(this.by_data.BYYEARDAY);\n      } else {\n        this.days = [];\n      }\n      return 0;\n    },\n\n    expand_by_day: function expand_by_day(aYear) {\n\n      var days_list = [];\n      var tmp = this.last.clone();\n\n      tmp.year = aYear;\n      tmp.month = 1;\n      tmp.day = 1;\n      tmp.isDate = true;\n\n      var start_dow = tmp.dayOfWeek();\n\n      tmp.month = 12;\n      tmp.day = 31;\n      tmp.isDate = true;\n\n      var end_dow = tmp.dayOfWeek();\n      var end_year_day = tmp.dayOfYear();\n\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n\n        if (pos == 0) {\n          var tmp_start_doy = ((dow + 7 - start_dow) % 7) + 1;\n\n          for (var doy = tmp_start_doy; doy <= end_year_day; doy += 7) {\n            days_list.push(doy);\n          }\n\n        } else if (pos > 0) {\n          var first;\n          if (dow >= start_dow) {\n            first = dow - start_dow + 1;\n          } else {\n            first = dow - start_dow + 8;\n          }\n\n          days_list.push(first + (pos - 1) * 7);\n        } else {\n          var last;\n          pos = -pos;\n\n          if (dow <= end_dow) {\n            last = end_year_day - end_dow + dow;\n          } else {\n            last = end_year_day - end_dow + dow - 7;\n          }\n\n          days_list.push(last - (pos - 1) * 7);\n        }\n      }\n      return days_list;\n    },\n\n    is_day_in_byday: function is_day_in_byday(tt) {\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n        var this_dow = tt.dayOfWeek();\n\n        if ((pos == 0 && dow == this_dow) ||\n            (tt.nthWeekDay(dow, pos) == tt.day)) {\n          return 1;\n        }\n      }\n\n      return 0;\n    },\n\n    /**\n     * Checks if given value is in BYSETPOS.\n     *\n     * @private\n     * @param {Numeric} aPos position to check for.\n     * @return {Boolean} false unless BYSETPOS rules exist\n     *                   and the given value is present in rules.\n     */\n    check_set_position: function check_set_position(aPos) {\n      if (this.has_by_data('BYSETPOS')) {\n        var idx = this.by_data.BYSETPOS.indexOf(aPos);\n        // negative numbers are not false-y\n        return idx !== -1;\n      }\n      return false;\n    },\n\n    sort_byday_rules: function icalrecur_sort_byday_rules(aRules) {\n      for (var i = 0; i < aRules.length; i++) {\n        for (var j = 0; j < i; j++) {\n          var one = this.ruleDayOfWeek(aRules[j], this.rule.wkst)[1];\n          var two = this.ruleDayOfWeek(aRules[i], this.rule.wkst)[1];\n\n          if (one > two) {\n            var tmp = aRules[i];\n            aRules[i] = aRules[j];\n            aRules[j] = tmp;\n          }\n        }\n      }\n    },\n\n    check_contract_restriction: function check_contract_restriction(aRuleType, v) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n      var pass = false;\n\n      if (aRuleType in this.by_data &&\n          ruleMapValue == icalrecur_iterator.CONTRACT) {\n\n        var ruleType = this.by_data[aRuleType];\n\n        for (var bydatakey in ruleType) {\n          /* istanbul ignore else */\n          if (ruleType.hasOwnProperty(bydatakey)) {\n            if (ruleType[bydatakey] == v) {\n              pass = true;\n              break;\n            }\n          }\n        }\n      } else {\n        // Not a contracting byrule or has no data, test passes\n        pass = true;\n      }\n      return pass;\n    },\n\n    check_contracting_rules: function check_contracting_rules() {\n      var dow = this.last.dayOfWeek();\n      var weekNo = this.last.weekNumber(this.rule.wkst);\n      var doy = this.last.dayOfYear();\n\n      return (this.check_contract_restriction(\"BYSECOND\", this.last.second) &&\n              this.check_contract_restriction(\"BYMINUTE\", this.last.minute) &&\n              this.check_contract_restriction(\"BYHOUR\", this.last.hour) &&\n              this.check_contract_restriction(\"BYDAY\", ICAL.Recur.numericDayToIcalDay(dow)) &&\n              this.check_contract_restriction(\"BYWEEKNO\", weekNo) &&\n              this.check_contract_restriction(\"BYMONTHDAY\", this.last.day) &&\n              this.check_contract_restriction(\"BYMONTH\", this.last.month) &&\n              this.check_contract_restriction(\"BYYEARDAY\", doy));\n    },\n\n    setup_defaults: function setup_defaults(aRuleType, req, deftime) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n\n      if (ruleMapValue != icalrecur_iterator.CONTRACT) {\n        if (!(aRuleType in this.by_data)) {\n          this.by_data[aRuleType] = [deftime];\n        }\n        if (this.rule.freq != req) {\n          return this.by_data[aRuleType][0];\n        }\n      }\n      return deftime;\n    },\n\n    /**\n     * Convert iterator into a serialize-able object.  Will preserve current\n     * iteration sequence to ensure the seamless continuation of the recurrence\n     * rule.\n     * @return {Object}\n     */\n    toJSON: function() {\n      var result = Object.create(null);\n\n      result.initialized = this.initialized;\n      result.rule = this.rule.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.by_data = this.by_data;\n      result.days = this.days;\n      result.last = this.last.toJSON();\n      result.by_indices = this.by_indices;\n      result.occurrence_number = this.occurrence_number;\n\n      return result;\n    }\n  };\n\n  icalrecur_iterator._indexMap = {\n    \"BYSECOND\": 0,\n    \"BYMINUTE\": 1,\n    \"BYHOUR\": 2,\n    \"BYDAY\": 3,\n    \"BYMONTHDAY\": 4,\n    \"BYYEARDAY\": 5,\n    \"BYWEEKNO\": 6,\n    \"BYMONTH\": 7,\n    \"BYSETPOS\": 8\n  };\n\n  icalrecur_iterator._expandMap = {\n    \"SECONDLY\": [1, 1, 1, 1, 1, 1, 1, 1],\n    \"MINUTELY\": [2, 1, 1, 1, 1, 1, 1, 1],\n    \"HOURLY\": [2, 2, 1, 1, 1, 1, 1, 1],\n    \"DAILY\": [2, 2, 2, 1, 1, 1, 1, 1],\n    \"WEEKLY\": [2, 2, 2, 2, 3, 3, 1, 1],\n    \"MONTHLY\": [2, 2, 2, 2, 2, 3, 3, 1],\n    \"YEARLY\": [2, 2, 2, 2, 2, 2, 2, 2]\n  };\n  icalrecur_iterator.UNKNOWN = 0;\n  icalrecur_iterator.CONTRACT = 1;\n  icalrecur_iterator.EXPAND = 2;\n  icalrecur_iterator.ILLEGAL = 3;\n\n  return icalrecur_iterator;\n\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.RecurExpansion = (function() {\n  function formatTime(item) {\n    return ICAL.helpers.formatClassType(item, ICAL.Time);\n  }\n\n  function compareTime(a, b) {\n    return a.compare(b);\n  }\n\n  function isRecurringComponent(comp) {\n    return comp.hasProperty('rdate') ||\n           comp.hasProperty('rrule') ||\n           comp.hasProperty('recurrence-id');\n  }\n\n  /**\n   * @classdesc\n   * Primary class for expanding recurring rules.  Can take multiple rrules,\n   * rdates, exdate(s) and iterate (in order) over each next occurrence.\n   *\n   * Once initialized this class can also be serialized saved and continue\n   * iteration from the last point.\n   *\n   * NOTE: it is intended that this class is to be used\n   *       with ICAL.Event which handles recurrence exceptions.\n   *\n   * @example\n   * // assuming event is a parsed ical component\n   * var event;\n   *\n   * var expand = new ICAL.RecurExpansion({\n   *   component: event,\n   *   dtstart: event.getFirstPropertyValue('dtstart')\n   * });\n   *\n   * // remember there are infinite rules\n   * // so it is a good idea to limit the scope\n   * // of the iterations then resume later on.\n   *\n   * // next is always an ICAL.Time or null\n   * var next;\n   *\n   * while (someCondition && (next = expand.next())) {\n   *   // do something with next\n   * }\n   *\n   * // save instance for later\n   * var json = JSON.stringify(expand);\n   *\n   * //...\n   *\n   * // NOTE: if the component's properties have\n   * //       changed you will need to rebuild the\n   * //       class and start over. This only works\n   * //       when the component's recurrence info is the same.\n   * var expand = new ICAL.RecurExpansion(JSON.parse(json));\n   *\n   * @description\n   * The options object can be filled with the specified initial values. It can\n   * also contain additional members, as a result of serializing a previous\n   * expansion state, as shown in the example.\n   *\n   * @class\n   * @alias ICAL.RecurExpansion\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {ICAL.Time} options.dtstart\n   *        Start time of the event\n   * @param {ICAL.Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  function RecurExpansion(options) {\n    this.ruleDates = [];\n    this.exDates = [];\n    this.fromData(options);\n  }\n\n  RecurExpansion.prototype = {\n    /**\n     * True when iteration is fully completed.\n     * @type {Boolean}\n     */\n    complete: false,\n\n    /**\n     * Array of rrule iterators.\n     *\n     * @type {ICAL.RecurIterator[]}\n     * @private\n     */\n    ruleIterators: null,\n\n    /**\n     * Array of rdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    ruleDates: null,\n\n    /**\n     * Array of exdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    exDates: null,\n\n    /**\n     * Current position in ruleDates array.\n     * @type {Number}\n     * @private\n     */\n    ruleDateInc: 0,\n\n    /**\n     * Current position in exDates array\n     * @type {Number}\n     * @private\n     */\n    exDateInc: 0,\n\n    /**\n     * Current negative date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    exDate: null,\n\n    /**\n     * Current additional date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    ruleDate: null,\n\n    /**\n     * Start date of recurring rules.\n     *\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * Last expanded time\n     *\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * Initialize the recurrence expansion from the data object. The options\n     * object may also contain additional members, see the\n     * {@link ICAL.RecurExpansion constructor} for more details.\n     *\n     * @param {Object} options\n     *        Recurrence expansion options\n     * @param {ICAL.Time} options.dtstart\n     *        Start time of the event\n     * @param {ICAL.Component=} options.component\n     *        Component for expansion, required if not resuming.\n     */\n    fromData: function(options) {\n      var start = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!start) {\n        throw new Error('.dtstart (ICAL.Time) must be given');\n      } else {\n        this.dtstart = start;\n      }\n\n      if (options.component) {\n        this._init(options.component);\n      } else {\n        this.last = formatTime(options.last) || start.clone();\n\n        if (!options.ruleIterators) {\n          throw new Error('.ruleIterators or .component must be given');\n        }\n\n        this.ruleIterators = options.ruleIterators.map(function(item) {\n          return ICAL.helpers.formatClassType(item, ICAL.RecurIterator);\n        });\n\n        this.ruleDateInc = options.ruleDateInc;\n        this.exDateInc = options.exDateInc;\n\n        if (options.ruleDates) {\n          this.ruleDates = options.ruleDates.map(formatTime);\n          this.ruleDate = this.ruleDates[this.ruleDateInc];\n        }\n\n        if (options.exDates) {\n          this.exDates = options.exDates.map(formatTime);\n          this.exDate = this.exDates[this.exDateInc];\n        }\n\n        if (typeof(options.complete) !== 'undefined') {\n          this.complete = options.complete;\n        }\n      }\n    },\n\n    /**\n     * Retrieve the next occurrence in the series.\n     * @return {ICAL.Time}\n     */\n    next: function() {\n      var iter;\n      var ruleOfDay;\n      var next;\n      var compare;\n\n      var maxTries = 500;\n      var currentTry = 0;\n\n      while (true) {\n        if (currentTry++ > maxTries) {\n          throw new Error(\n            'max tries have occured, rule may be impossible to forfill.'\n          );\n        }\n\n        next = this.ruleDate;\n        iter = this._nextRecurrenceIter(this.last);\n\n        // no more matches\n        // because we increment the rule day or rule\n        // _after_ we choose a value this should be\n        // the only spot where we need to worry about the\n        // end of events.\n        if (!next && !iter) {\n          // there are no more iterators or rdates\n          this.complete = true;\n          break;\n        }\n\n        // no next rule day or recurrence rule is first.\n        if (!next || (iter && next.compare(iter.last) > 0)) {\n          // must be cloned, recur will reuse the time element.\n          next = iter.last.clone();\n          // move to next so we can continue\n          iter.next();\n        }\n\n        // if the ruleDate is still next increment it.\n        if (this.ruleDate === next) {\n          this._nextRuleDay();\n        }\n\n        this.last = next;\n\n        // check the negative rules\n        if (this.exDate) {\n          compare = this.exDate.compare(this.last);\n\n          if (compare < 0) {\n            this._nextExDay();\n          }\n\n          // if the current rule is excluded skip it.\n          if (compare === 0) {\n            this._nextExDay();\n            continue;\n          }\n        }\n\n        //XXX: The spec states that after we resolve the final\n        //     list of dates we execute exdate this seems somewhat counter\n        //     intuitive to what I have seen most servers do so for now\n        //     I exclude based on the original date not the one that may\n        //     have been modified by the exception.\n        return this.last;\n      }\n    },\n\n    /**\n     * Converts object into a serialize-able format. This format can be passed\n     * back into the expansion to resume iteration.\n     * @return {Object}\n     */\n    toJSON: function() {\n      function toJSON(item) {\n        return item.toJSON();\n      }\n\n      var result = Object.create(null);\n      result.ruleIterators = this.ruleIterators.map(toJSON);\n\n      if (this.ruleDates) {\n        result.ruleDates = this.ruleDates.map(toJSON);\n      }\n\n      if (this.exDates) {\n        result.exDates = this.exDates.map(toJSON);\n      }\n\n      result.ruleDateInc = this.ruleDateInc;\n      result.exDateInc = this.exDateInc;\n      result.last = this.last.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.complete = this.complete;\n\n      return result;\n    },\n\n    /**\n     * Extract all dates from the properties in the given component. The\n     * properties will be filtered by the property name.\n     *\n     * @private\n     * @param {ICAL.Component} component        The component to search in\n     * @param {String} propertyName             The property name to search for\n     * @return {ICAL.Time[]}                    The extracted dates.\n     */\n    _extractDates: function(component, propertyName) {\n      function handleProp(prop) {\n        idx = ICAL.helpers.binsearchInsert(\n          result,\n          prop,\n          compareTime\n        );\n\n        // ordered insert\n        result.splice(idx, 0, prop);\n      }\n\n      var result = [];\n      var props = component.getAllProperties(propertyName);\n      var len = props.length;\n      var i = 0;\n      var prop;\n\n      var idx;\n\n      for (; i < len; i++) {\n        props[i].getValues().forEach(handleProp);\n      }\n\n      return result;\n    },\n\n    /**\n     * Initialize the recurrence expansion.\n     *\n     * @private\n     * @param {ICAL.Component} component    The component to initialize from.\n     */\n    _init: function(component) {\n      this.ruleIterators = [];\n\n      this.last = this.dtstart.clone();\n\n      // to provide api consistency non-recurring\n      // events can also use the iterator though it will\n      // only return a single time.\n      if (!isRecurringComponent(component)) {\n        this.ruleDate = this.last.clone();\n        this.complete = true;\n        return;\n      }\n\n      if (component.hasProperty('rdate')) {\n        this.ruleDates = this._extractDates(component, 'rdate');\n\n        // special hack for cases where first rdate is prior\n        // to the start date. We only check for the first rdate.\n        // This is mostly for google's crazy recurring date logic\n        // (contacts birthdays).\n        if ((this.ruleDates[0]) &&\n            (this.ruleDates[0].compare(this.dtstart) < 0)) {\n\n          this.ruleDateInc = 0;\n          this.last = this.ruleDates[0].clone();\n        } else {\n          this.ruleDateInc = ICAL.helpers.binsearchInsert(\n            this.ruleDates,\n            this.last,\n            compareTime\n          );\n        }\n\n        this.ruleDate = this.ruleDates[this.ruleDateInc];\n      }\n\n      if (component.hasProperty('rrule')) {\n        var rules = component.getAllProperties('rrule');\n        var i = 0;\n        var len = rules.length;\n\n        var rule;\n        var iter;\n\n        for (; i < len; i++) {\n          rule = rules[i].getFirstValue();\n          iter = rule.iterator(this.dtstart);\n          this.ruleIterators.push(iter);\n\n          // increment to the next occurrence so future\n          // calls to next return times beyond the initial iteration.\n          // XXX: I find this suspicious might be a bug?\n          iter.next();\n        }\n      }\n\n      if (component.hasProperty('exdate')) {\n        this.exDates = this._extractDates(component, 'exdate');\n        // if we have a .last day we increment the index to beyond it.\n        this.exDateInc = ICAL.helpers.binsearchInsert(\n          this.exDates,\n          this.last,\n          compareTime\n        );\n\n        this.exDate = this.exDates[this.exDateInc];\n      }\n    },\n\n    /**\n     * Advance to the next exdate\n     * @private\n     */\n    _nextExDay: function() {\n      this.exDate = this.exDates[++this.exDateInc];\n    },\n\n    /**\n     * Advance to the next rule date\n     * @private\n     */\n    _nextRuleDay: function() {\n      this.ruleDate = this.ruleDates[++this.ruleDateInc];\n    },\n\n    /**\n     * Find and return the recurrence rule with the most recent event and\n     * return it.\n     *\n     * @private\n     * @return {?ICAL.RecurIterator}    Found iterator.\n     */\n    _nextRecurrenceIter: function() {\n      var iters = this.ruleIterators;\n\n      if (iters.length === 0) {\n        return null;\n      }\n\n      var len = iters.length;\n      var iter;\n      var iterTime;\n      var iterIdx = 0;\n      var chosenIter;\n\n      // loop through each iterator\n      for (; iterIdx < len; iterIdx++) {\n        iter = iters[iterIdx];\n        iterTime = iter.last;\n\n        // if iteration is complete\n        // then we must exclude it from\n        // the search and remove it.\n        if (iter.completed) {\n          len--;\n          if (iterIdx !== 0) {\n            iterIdx--;\n          }\n          iters.splice(iterIdx, 1);\n          continue;\n        }\n\n        // find the most recent possible choice\n        if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {\n          // that iterator is saved\n          chosenIter = iter;\n        }\n      }\n\n      // the chosen iterator is returned but not mutated\n      // this iterator contains the most recent event.\n      return chosenIter;\n    }\n  };\n\n  return RecurExpansion;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Event = (function() {\n\n  /**\n   * @classdesc\n   * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal\n   * object, followed by the component/property layer. The highest level is the\n   * event representation, which this class is part of. See the\n   * {@tutorial layers} guide for more details.\n   *\n   * @class\n   * @alias ICAL.Event\n   * @param {ICAL.Component=} component         The ICAL.Component to base this event on\n   * @param {Object} options                    Options for this event\n   * @param {Boolean} options.strictExceptions\n   *          When true, will verify exceptions are related by their UUID\n   * @param {Array<ICAL.Component|ICAL.Event>} options.exceptions\n   *          Exceptions to this event, either as components or events. If not\n   *            specified exceptions will automatically be set in relation of\n   *            component's parent\n   */\n  function Event(component, options) {\n    if (!(component instanceof ICAL.Component)) {\n      options = component;\n      component = null;\n    }\n\n    if (component) {\n      this.component = component;\n    } else {\n      this.component = new ICAL.Component('vevent');\n    }\n\n    this._rangeExceptionCache = Object.create(null);\n    this.exceptions = Object.create(null);\n    this.rangeExceptions = [];\n\n    if (options && options.strictExceptions) {\n      this.strictExceptions = options.strictExceptions;\n    }\n\n    if (options && options.exceptions) {\n      options.exceptions.forEach(this.relateException, this);\n    } else if (this.component.parent && !this.isRecurrenceException()) {\n      this.component.parent.getAllSubcomponents('vevent').forEach(function(event) {\n        if (event.hasProperty('recurrence-id')) {\n          this.relateException(event);\n        }\n      }, this);\n    }\n  }\n\n  Event.prototype = {\n\n    THISANDFUTURE: 'THISANDFUTURE',\n\n    /**\n     * List of related event exceptions.\n     *\n     * @type {ICAL.Event[]}\n     */\n    exceptions: null,\n\n    /**\n     * When true, will verify exceptions are related by their UUID.\n     *\n     * @type {Boolean}\n     */\n    strictExceptions: false,\n\n    /**\n     * Relates a given event exception to this object.  If the given component\n     * does not share the UID of this event it cannot be related and will throw\n     * an exception.\n     *\n     * If this component is an exception it cannot have other exceptions\n     * related to it.\n     *\n     * @param {ICAL.Component|ICAL.Event} obj       Component or event\n     */\n    relateException: function(obj) {\n      if (this.isRecurrenceException()) {\n        throw new Error('cannot relate exception to exceptions');\n      }\n\n      if (obj instanceof ICAL.Component) {\n        obj = new ICAL.Event(obj);\n      }\n\n      if (this.strictExceptions && obj.uid !== this.uid) {\n        throw new Error('attempted to relate unrelated exception');\n      }\n\n      var id = obj.recurrenceId.toString();\n\n      // we don't sort or manage exceptions directly\n      // here the recurrence expander handles that.\n      this.exceptions[id] = obj;\n\n      // index RANGE=THISANDFUTURE exceptions so we can\n      // look them up later in getOccurrenceDetails.\n      if (obj.modifiesFuture()) {\n        var item = [\n          obj.recurrenceId.toUnixTime(), id\n        ];\n\n        // we keep them sorted so we can find the nearest\n        // value later on...\n        var idx = ICAL.helpers.binsearchInsert(\n          this.rangeExceptions,\n          item,\n          compareRangeException\n        );\n\n        this.rangeExceptions.splice(idx, 0, item);\n      }\n    },\n\n    /**\n     * Checks if this record is an exception and has the RANGE=THISANDFUTURE\n     * value.\n     *\n     * @return {Boolean}        True, when exception is within range\n     */\n    modifiesFuture: function() {\n      if (!this.component.hasProperty('recurrence-id')) {\n        return false;\n      }\n\n      var range = this.component.getFirstProperty('recurrence-id').getParameter('range');\n      return range === this.THISANDFUTURE;\n    },\n\n    /**\n     * Finds the range exception nearest to the given date.\n     *\n     * @param {ICAL.Time} time usually an occurrence time of an event\n     * @return {?ICAL.Event} the related event/exception or null\n     */\n    findRangeException: function(time) {\n      if (!this.rangeExceptions.length) {\n        return null;\n      }\n\n      var utc = time.toUnixTime();\n      var idx = ICAL.helpers.binsearchInsert(\n        this.rangeExceptions,\n        [utc],\n        compareRangeException\n      );\n\n      idx -= 1;\n\n      // occurs before\n      if (idx < 0) {\n        return null;\n      }\n\n      var rangeItem = this.rangeExceptions[idx];\n\n      /* istanbul ignore next: sanity check only */\n      if (utc < rangeItem[0]) {\n        return null;\n      }\n\n      return rangeItem[1];\n    },\n\n    /**\n     * This object is returned by {@link ICAL.Event#getOccurrenceDetails getOccurrenceDetails}\n     *\n     * @typedef {Object} occurrenceDetails\n     * @memberof ICAL.Event\n     * @property {ICAL.Time} recurrenceId       The passed in recurrence id\n     * @property {ICAL.Event} item              The occurrence\n     * @property {ICAL.Time} startDate          The start of the occurrence\n     * @property {ICAL.Time} endDate            The end of the occurrence\n     */\n\n    /**\n     * Returns the occurrence details based on its start time.  If the\n     * occurrence has an exception will return the details for that exception.\n     *\n     * NOTE: this method is intend to be used in conjunction\n     *       with the {@link ICAL.Event#iterator iterator} method.\n     *\n     * @param {ICAL.Time} occurrence time occurrence\n     * @return {ICAL.Event.occurrenceDetails} Information about the occurrence\n     */\n    getOccurrenceDetails: function(occurrence) {\n      var id = occurrence.toString();\n      var utcId = occurrence.convertToZone(ICAL.Timezone.utcTimezone).toString();\n      var item;\n      var result = {\n        //XXX: Clone?\n        recurrenceId: occurrence\n      };\n\n      if (id in this.exceptions) {\n        item = result.item = this.exceptions[id];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else if (utcId in this.exceptions) {\n        item = this.exceptions[utcId];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else {\n        // range exceptions (RANGE=THISANDFUTURE) have a\n        // lower priority then direct exceptions but\n        // must be accounted for first. Their item is\n        // always the first exception with the range prop.\n        var rangeExceptionId = this.findRangeException(\n          occurrence\n        );\n        var end;\n\n        if (rangeExceptionId) {\n          var exception = this.exceptions[rangeExceptionId];\n\n          // range exception must modify standard time\n          // by the difference (if any) in start/end times.\n          result.item = exception;\n\n          var startDiff = this._rangeExceptionCache[rangeExceptionId];\n\n          if (!startDiff) {\n            var original = exception.recurrenceId.clone();\n            var newStart = exception.startDate.clone();\n\n            // zones must be same otherwise subtract may be incorrect.\n            original.zone = newStart.zone;\n            startDiff = newStart.subtractDate(original);\n\n            this._rangeExceptionCache[rangeExceptionId] = startDiff;\n          }\n\n          var start = occurrence.clone();\n          start.zone = exception.startDate.zone;\n          start.addDuration(startDiff);\n\n          end = start.clone();\n          end.addDuration(exception.duration);\n\n          result.startDate = start;\n          result.endDate = end;\n        } else {\n          // no range exception standard expansion\n          end = occurrence.clone();\n          end.addDuration(this.duration);\n\n          result.endDate = end;\n          result.startDate = occurrence;\n          result.item = this;\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Builds a recur expansion instance for a specific point in time (defaults\n     * to startDate).\n     *\n     * @param {ICAL.Time} startTime     Starting point for expansion\n     * @return {ICAL.RecurExpansion}    Expansion object\n     */\n    iterator: function(startTime) {\n      return new ICAL.RecurExpansion({\n        component: this.component,\n        dtstart: startTime || this.startDate\n      });\n    },\n\n    /**\n     * Checks if the event is recurring\n     *\n     * @return {Boolean}        True, if event is recurring\n     */\n    isRecurring: function() {\n      var comp = this.component;\n      return comp.hasProperty('rrule') || comp.hasProperty('rdate');\n    },\n\n    /**\n     * Checks if the event describes a recurrence exception. See\n     * {@tutorial terminology} for details.\n     *\n     * @return {Boolean}    True, if the event describes a recurrence exception\n     */\n    isRecurrenceException: function() {\n      return this.component.hasProperty('recurrence-id');\n    },\n\n    /**\n     * Returns the types of recurrences this event may have.\n     *\n     * Returned as an object with the following possible keys:\n     *\n     *    - YEARLY\n     *    - MONTHLY\n     *    - WEEKLY\n     *    - DAILY\n     *    - MINUTELY\n     *    - SECONDLY\n     *\n     * @return {Object.<ICAL.Recur.frequencyValues, Boolean>}\n     *          Object of recurrence flags\n     */\n    getRecurrenceTypes: function() {\n      var rules = this.component.getAllProperties('rrule');\n      var i = 0;\n      var len = rules.length;\n      var result = Object.create(null);\n\n      for (; i < len; i++) {\n        var value = rules[i].getFirstValue();\n        result[value.freq] = true;\n      }\n\n      return result;\n    },\n\n    /**\n     * The uid of this event\n     * @type {String}\n     */\n    get uid() {\n      return this._firstProp('uid');\n    },\n\n    set uid(value) {\n      this._setProp('uid', value);\n    },\n\n    /**\n     * The start date\n     * @type {ICAL.Time}\n     */\n    get startDate() {\n      return this._firstProp('dtstart');\n    },\n\n    set startDate(value) {\n      this._setTime('dtstart', value);\n    },\n\n    /**\n     * The end date. This can be the result directly from the property, or the\n     * end date calculated from start date and duration. Setting the property\n     * will remove any duration properties.\n     * @type {ICAL.Time}\n     */\n    get endDate() {\n      var endDate = this._firstProp('dtend');\n      if (!endDate) {\n          var duration = this._firstProp('duration');\n          endDate = this.startDate.clone();\n          if (duration) {\n              endDate.addDuration(duration);\n          } else if (endDate.isDate) {\n              endDate.day += 1;\n          }\n      }\n      return endDate;\n    },\n\n    set endDate(value) {\n      if (this.component.hasProperty('duration')) {\n        this.component.removeProperty('duration');\n      }\n      this._setTime('dtend', value);\n    },\n\n    /**\n     * The duration. This can be the result directly from the property, or the\n     * duration calculated from start date and end date. Setting the property\n     * will remove any `dtend` properties.\n     * @type {ICAL.Duration}\n     */\n    get duration() {\n      var duration = this._firstProp('duration');\n      if (!duration) {\n        return this.endDate.subtractDateTz(this.startDate);\n      }\n      return duration;\n    },\n\n    set duration(value) {\n      if (this.component.hasProperty('dtend')) {\n        this.component.removeProperty('dtend');\n      }\n\n      this._setProp('duration', value);\n    },\n\n    /**\n     * The location of the event.\n     * @type {String}\n     */\n    get location() {\n      return this._firstProp('location');\n    },\n\n    set location(value) {\n      return this._setProp('location', value);\n    },\n\n    /**\n     * The attendees in the event\n     * @type {ICAL.Property[]}\n     * @readonly\n     */\n    get attendees() {\n      //XXX: This is way lame we should have a better\n      //     data structure for this later.\n      return this.component.getAllProperties('attendee');\n    },\n\n\n    /**\n     * The event summary\n     * @type {String}\n     */\n    get summary() {\n      return this._firstProp('summary');\n    },\n\n    set summary(value) {\n      this._setProp('summary', value);\n    },\n\n    /**\n     * The event description.\n     * @type {String}\n     */\n    get description() {\n      return this._firstProp('description');\n    },\n\n    set description(value) {\n      this._setProp('description', value);\n    },\n\n    /**\n     * The event color from [rfc7986](https://datatracker.ietf.org/doc/html/rfc7986)\n     * @type {String}\n     */\n    get color() {\n      return this._firstProp('color');\n    },\n\n    set color(value) {\n      this._setProp('color', value);\n    },\n\n    /**\n     * The organizer value as an uri. In most cases this is a mailto: uri, but\n     * it can also be something else, like urn:uuid:...\n     * @type {String}\n     */\n    get organizer() {\n      return this._firstProp('organizer');\n    },\n\n    set organizer(value) {\n      this._setProp('organizer', value);\n    },\n\n    /**\n     * The sequence value for this event. Used for scheduling\n     * see {@tutorial terminology}.\n     * @type {Number}\n     */\n    get sequence() {\n      return this._firstProp('sequence');\n    },\n\n    set sequence(value) {\n      this._setProp('sequence', value);\n    },\n\n    /**\n     * The recurrence id for this event. See {@tutorial terminology} for details.\n     * @type {ICAL.Time}\n     */\n    get recurrenceId() {\n      return this._firstProp('recurrence-id');\n    },\n\n    set recurrenceId(value) {\n      this._setTime('recurrence-id', value);\n    },\n\n    /**\n     * Set/update a time property's value.\n     * This will also update the TZID of the property.\n     *\n     * TODO: this method handles the case where we are switching\n     * from a known timezone to an implied timezone (one without TZID).\n     * This does _not_ handle the case of moving between a known\n     *  (by TimezoneService) timezone to an unknown timezone...\n     *\n     * We will not add/remove/update the VTIMEZONE subcomponents\n     *  leading to invalid ICAL data...\n     * @private\n     * @param {String} propName     The property name\n     * @param {ICAL.Time} time      The time to set\n     */\n    _setTime: function(propName, time) {\n      var prop = this.component.getFirstProperty(propName);\n\n      if (!prop) {\n        prop = new ICAL.Property(propName);\n        this.component.addProperty(prop);\n      }\n\n      // utc and local don't get a tzid\n      if (\n        time.zone === ICAL.Timezone.localTimezone ||\n        time.zone === ICAL.Timezone.utcTimezone\n      ) {\n        // remove the tzid\n        prop.removeParameter('tzid');\n      } else {\n        prop.setParameter('tzid', time.zone.tzid);\n      }\n\n      prop.setValue(time);\n    },\n\n    _setProp: function(name, value) {\n      this.component.updatePropertyWithValue(name, value);\n    },\n\n    _firstProp: function(name) {\n      return this.component.getFirstPropertyValue(name);\n    },\n\n    /**\n     * The string representation of this event.\n     * @return {String}\n     */\n    toString: function() {\n      return this.component.toString();\n    }\n\n  };\n\n  function compareRangeException(a, b) {\n    if (a[0] > b[0]) return 1;\n    if (b[0] > a[0]) return -1;\n    return 0;\n  }\n\n  return Event;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.ComponentParser = (function() {\n  /**\n   * @classdesc\n   * The ComponentParser is used to process a String or jCal Object,\n   * firing callbacks for various found components, as well as completion.\n   *\n   * @example\n   * var options = {\n   *   // when false no events will be emitted for type\n   *   parseEvent: true,\n   *   parseTimezone: true\n   * };\n   *\n   * var parser = new ICAL.ComponentParser(options);\n   *\n   * parser.onevent(eventComponent) {\n   *   //...\n   * }\n   *\n   * // ontimezone, etc...\n   *\n   * parser.oncomplete = function() {\n   *\n   * };\n   *\n   * parser.process(stringOrComponent);\n   *\n   * @class\n   * @alias ICAL.ComponentParser\n   * @param {Object=} options        Component parser options\n   * @param {Boolean} options.parseEvent        Whether events should be parsed\n   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed\n   */\n  function ComponentParser(options) {\n    if (typeof(options) === 'undefined') {\n      options = {};\n    }\n\n    var key;\n    for (key in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(key)) {\n        this[key] = options[key];\n      }\n    }\n  }\n\n  ComponentParser.prototype = {\n\n    /**\n     * When true, parse events\n     *\n     * @type {Boolean}\n     */\n    parseEvent: true,\n\n    /**\n     * When true, parse timezones\n     *\n     * @type {Boolean}\n     */\n    parseTimezone: true,\n\n\n    /* SAX like events here for reference */\n\n    /**\n     * Fired when parsing is complete\n     * @callback\n     */\n    oncomplete: /* istanbul ignore next */ function() {},\n\n    /**\n     * Fired if an error occurs during parsing.\n     *\n     * @callback\n     * @param {Error} err details of error\n     */\n    onerror: /* istanbul ignore next */ function(err) {},\n\n    /**\n     * Fired when a top level component (VTIMEZONE) is found\n     *\n     * @callback\n     * @param {ICAL.Timezone} component     Timezone object\n     */\n    ontimezone: /* istanbul ignore next */ function(component) {},\n\n    /**\n     * Fired when a top level component (VEVENT) is found.\n     *\n     * @callback\n     * @param {ICAL.Event} component    Top level component\n     */\n    onevent: /* istanbul ignore next */ function(component) {},\n\n    /**\n     * Process a string or parse ical object.  This function itself will return\n     * nothing but will start the parsing process.\n     *\n     * Events must be registered prior to calling this method.\n     *\n     * @param {ICAL.Component|String|Object} ical      The component to process,\n     *        either in its final form, as a jCal Object, or string representation\n     */\n    process: function(ical) {\n      //TODO: this is sync now in the future we will have a incremental parser.\n      if (typeof(ical) === 'string') {\n        ical = ICAL.parse(ical);\n      }\n\n      if (!(ical instanceof ICAL.Component)) {\n        ical = new ICAL.Component(ical);\n      }\n\n      var components = ical.getAllSubcomponents();\n      var i = 0;\n      var len = components.length;\n      var component;\n\n      for (; i < len; i++) {\n        component = components[i];\n\n        switch (component.name) {\n          case 'vtimezone':\n            if (this.parseTimezone) {\n              var tzid = component.getFirstPropertyValue('tzid');\n              if (tzid) {\n                this.ontimezone(new ICAL.Timezone({\n                  tzid: tzid,\n                  component: component\n                }));\n              }\n            }\n            break;\n          case 'vevent':\n            if (this.parseEvent) {\n              this.onevent(new ICAL.Event(component));\n            }\n            break;\n          default:\n            continue;\n        }\n      }\n\n      //XXX: ideally we should do a \"nextTick\" here\n      //     so in all cases this is actually async.\n      this.oncomplete();\n    }\n  };\n\n  return ComponentParser;\n}());\n"],"names":["ICAL","OPTIONS","zones","TimezoneService","module","exports","foldLength","newLineChar","helpers","updateTimezones","vcal","allsubs","properties","vtimezones","reqTzid","i","tzid","name","getAllSubcomponents","length","getFirstProperty","getFirstValue","concat","getAllProperties","getParameter","hasOwnProperty","removeSubcomponent","has","addSubcomponent","get","component","isStrictlyNaN","number","isNaN","strictParseInt","string","result","parseInt","Error","formatClassType","data","type","unescapedIndexOf","buffer","search","pos","indexOf","binsearchInsert","list","seekVal","cmpfunc","mid","cmpval","low","high","Math","floor","dumpn","debug","console","input","log","dump","arguments","clone","aSrc","aDeep","Date","getTime","Array","isArray","arr","push","obj","Object","prototype","call","foldline","aLine","line","line_length","cp","codePointAt","substring","substr","pad2","String","trunc","ceil","inherits","base","child","extra","F","extend","source","target","key","descr","getOwnPropertyDescriptor","defineProperty","design","FROM_VCARD_NEWLINE","TO_VCARD_NEWLINE","createTextType","fromNewline","toNewline","matches","fromICAL","aValue","structuredEscape","value","newline","RegExp","replace","replaceNewlineReplace","replaceNewline","toICAL","regEx","str","DEFAULT_TYPE_TEXT","defaultType","DEFAULT_TYPE_TEXT_MULTI","multiValue","DEFAULT_TYPE_TEXT_STRUCTURED","structuredValue","DEFAULT_TYPE_INTEGER","DEFAULT_TYPE_DATETIME_DATE","allowedTypes","DEFAULT_TYPE_DATETIME","DEFAULT_TYPE_URI","DEFAULT_TYPE_UTCOFFSET","DEFAULT_TYPE_RECUR","DEFAULT_TYPE_DATE_ANDOR_TIME","commonProperties","commonValues","values","float","parsed","parseFloat","integer","decorate","UtcOffset","fromString","undecorate","toString","icalValues","text","uri","aString","Binary","aBinary","aProp","strict","Time","fromDateString","len","date","fromDateTimeString","duration","Duration","period","parts","split","isValueString","join","Period","fromJSON","toJSON","recur","Recur","_stringToData","k","val","numericDayToIcalDay","toUpperCase","fromData","aRecur","time","icalProperties","detectType","vcardValues","VCardTime","fromDateAndOrTimeString","splitzone","_splitZone","zone","isFromIcal","lastChar","signChar","sign","timestamp","vcardProperties","vcard3Values","binary","vcard","vcard3Properties","fn","n","nickname","photo","bday","adr","label","tel","email","mailer","tz","geo","title","role","logo","agent","org","note","prodid","rev","sound","class","icalSet","param","allowXName","allowIanaToken","valueType","multiValueSeparateDQuote","property","vcardSet","vcard3Set","defaultSet","components","vcard3","vevent","vtodo","vjournal","valarm","vtimezone","daylight","standard","icalendar","getDesignSet","componentName","stringify","LINE_ENDING","DEFAULT_VALUE_TYPE","jCal","designSet","props","propIdx","propLen","designSetName","comps","compIdx","compLen","noFold","paramName","jsName","params","map","_rfc6868Unescape","propertyValue","propDetails","isDefault","slice","delim","innerMulti","x","RFC6868_REPLACE_MAP","parse","CHAR","ParserError","message","this","e","stack","shift","parser","state","root","_eachLine","err","_handleContentLine","lastParamIndex","lastValuePos","parsedParams","valuePos","paramPos","toLowerCase","_parseParameters","newComponent","pop","propertyDetails","_parseMultiValue","_parseValue","start","lcname","mvdelim","lastParam","_rfc6868Escape","extendedValue","nextPos","propValuePos","delimiter","lastPos","callback","firstChar","newlineOffset","trim","Component","parent","_hydratedPropertyCount","_hydratedComponentCount","_designSet","_hydrateComponent","index","_components","comp","_hydrateProperty","_properties","prop","Property","getFirstSubcomponent","jCalLen","hasProperty","getFirstPropertyValue","_removeObjectByIndex","jCalIndex","cache","splice","_removeObject","nameOrObject","objects","cached","_removeAllObjects","idx","nameOrComp","removed","removeAllSubcomponents","addProperty","TypeError","removeProperty","addPropertyWithValue","setValue","updatePropertyWithValue","nameOrProp","removeAllProperties","_parent","getDefaultType","_updateType","p","designSetChanged","isDecorated","isMultiValue","isStructuredValue","_hydrateValue","_values","_decorate","_undecorate","_setDecoratedValue","getFirstParameter","parameters","setParameter","removeParameter","details","resetType","removeAllValues","getValues","setValues","icaltype","toICALString","aData","hours","minutes","factor","fromSeconds","toSeconds","_normalize","aSeconds","secs","abs","compare","other","a","b","options","instance","decodeValue","_b64_decode","setEncodedValue","_b64_encode","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","o1","o2","o3","fromCharCode","wrappedJSObject","end","icalclass","getDuration","subtractDate","getEnd","addDuration","aLenient","fromDateOrDateTimeString","DURATION_LETTERS","parseDurationChunk","letter","object","isNegative","num","weeks","days","seconds","propsToCopy","reset","aOther","thisSeconds","otherSeconds","normalize","aStr","dict","create","chunks","numeric","Timezone","location","tznames","latitude","longitude","expandedUntilYear","changes","utcOffset","tt","utcTimezone","localTimezone","_ensureCoverage","year","tt_change","month","day","hour","minute","second","change_num","_findNearbyChange","change_num_to_use","step","change","prevUtcOffset","adjust_change","_compare_change_fn","zone_change","tmp_change","prev_zone_change","want_daylight","is_daylight","aYear","_minimumExpansionYear","today","now","changesEndYear","EXTRA_COVERAGE","MAX_YEAR","subcomps","_expandComponent","sort","aComponent","dtstart","convert_tzoffset","offset","init_changes","changebase","rdatekey","isDate","rrule","until","adjust","occ","iterator","next","convert_time","from_zone","to_zone","count","keys","utc","Z","UTC","GMT","register","timezone","remove","_time","_dowCache","_wnCache","_cachedUnixTime","_pendingNormalization","epochTime","resetTo","fromJSDate","aDate","useUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","aZone","dayOfWeek","aWeekStart","firstDow","SUNDAY","dowCacheKey","q","m","Y","h","dayOfYear","is_leap","isLeapYear","daysInYearPassedMonth","startOfWeek","endOfWeek","startOfMonth","endOfMonth","daysInMonth","startOfYear","endOfYear","startDoyWeek","aFirstDayOfWeek","delta","getDominicalLetter","nthWeekDay","aDayOfWeek","aPos","weekday","otherDay","isNthWeekDay","dow","weekNumber","week1","wnCacheKey","dt","isoyear","weekOneStarts","daysBetween","answer","aDuration","mult","unixTime","toUnixTime","subtractDateTz","compareDateOnlyTz","cmp","attr","_cmp_attr","convertToZone","rc","copy","zone_equals","toJSDate","aExtraDays","aExtraHours","aExtraMinutes","aExtraSeconds","aTime","minutesOverflow","hoursOverflow","daysOverflow","yearsOverflow","fromUnixTime","epoch","ms","defineAttr","set","fromDayOfYear","aDayOfYear","doy","auto_normalize","fromStringv2","aProperty","t","wkst","DEFAULT_WEEK_START","THURSDAY","yr","LTRS","dom","MONDAY","TUESDAY","WEDNESDAY","FRIDAY","SATURDAY","apply","p2","y","d","mm","s","hasMonth","hasDay","hasHour","hasMinute","hasSecond","datepart","timepart","aIcalType","part","v","tmz","tm","dtlen","tmlen","hasDashDate","hasDashTime","o","DOW_MAP","SU","MO","TU","WE","TH","FR","SA","REVERSE_DOW_MAP","parseNumericValue","min","max","undefined","interval","freq","aStart","RecurIterator","rule","isFinite","isByCount","addComponent","aType","ucname","setComponent","aValues","getComponent","getNextOccurrence","aStartTime","aRecurrenceId","iter","uckey","partDesign","optionDesign","INTERVAL","icalDayToNumericDay","res","kparts","VALID_DAY_NAMES","VALID_BYDAY_PART","ALLOWED_FREQ","FREQ","fmtIcal","COUNT","UNTIL","WKST","test","BYSECOND","bind","BYMINUTE","BYHOUR","BYDAY","BYMONTHDAY","BYYEARDAY","BYWEEKNO","BYMONTH","BYSETPOS","partArr","partArrIdx","partArrLen","icalrecur_iterator","completed","last","occurrence_number","by_indices","initialized","by_data","days_index","init","sort_byday_rules","setup_defaults","bydayParts","ruleDayOfWeek","wkdy","dayName","expand_year_days","increment_year","_nextByYearDay","has_by_data","tempLast","initLast","dayOfMonth","increment_month","_byDayAndMonthDay","valid","before","next_second","next_minute","next_hour","next_day","next_week","next_month","next_year","check_contracting_rules","next_generic","increment_second","inc","increment_generic","increment_minute","increment_hour","this_freq","increment_monthday","end_of_data","next_weekday_by_week","week_no","normalizeByMonthDayRules","rules","newRules","ruleIdx","isInit","byMonthDay","dateLen","byDay","dateIdx","dayLen","dataIsValid","self","lastDay","initMonth","nextMonth","monthsCounter","dayIdx","data_valid","setpos","setpos_total","last_day","is_day_in_byday","check_set_position","coded_day","match","aRuleType","aInterval","aDateAttr","aFollowingAttr","aPreviousIncr","has_by_rule","dta","years","aFactor","aNextIncrement","nextunit","validWeeks","monthIdx","first_week","last_week","weekIdx","weekno","partCount","t1","monthkey","t2","monthdaykey","t3","day_","month_","expand_by_day","first_dow","doy_offset","last_dow","by_month_day","spIndex","daycodedkey","month_day","first_matching_day","last_matching_day","expandedDays","daykey","days_list","tmp","start_dow","end_dow","end_year_day","first","this_dow","aRules","j","check_contract_restriction","indexMapValue","_indexMap","ruleMapValue","_expandMap","pass","CONTRACT","ruleType","bydatakey","weekNo","req","deftime","UNKNOWN","EXPAND","ILLEGAL","RecurExpansion","formatTime","item","compareTime","ruleDates","exDates","complete","ruleIterators","ruleDateInc","exDateInc","exDate","ruleDate","_init","currentTry","_nextRecurrenceIter","_nextRuleDay","_nextExDay","_extractDates","propertyName","handleProp","forEach","iters","iterTime","chosenIter","iterIdx","Event","_rangeExceptionCache","exceptions","rangeExceptions","strictExceptions","relateException","isRecurrenceException","event","compareRangeException","THISANDFUTURE","uid","id","recurrenceId","modifiesFuture","findRangeException","rangeItem","getOccurrenceDetails","occurrence","utcId","startDate","endDate","rangeExceptionId","exception","startDiff","original","newStart","startTime","isRecurring","getRecurrenceTypes","_firstProp","_setProp","_setTime","attendees","summary","description","color","organizer","sequence","propName","ComponentParser","parseEvent","parseTimezone","oncomplete","onerror","ontimezone","onevent","process","ical"],"sourceRoot":""}